# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['EnDestinationSafariArgs', 'EnDestinationSafari']

@pulumi.input_type
class EnDestinationSafariArgs:
    def __init__(__self__, *,
                 certificate: pulumi.Input[_builtins.str],
                 instance_guid: pulumi.Input[_builtins.str],
                 type: pulumi.Input[_builtins.str],
                 collect_failed_events: Optional[pulumi.Input[_builtins.bool]] = None,
                 config: Optional[pulumi.Input['EnDestinationSafariConfigArgs']] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 en_destination_safari_id: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x128: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x1282x: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x1282x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x128_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x16: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x162x: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x162x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x16_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x32: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x322x: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x322x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x32_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a EnDestinationSafari resource.
        :param pulumi.Input[_builtins.str] certificate: The Certificate File.
        :param pulumi.Input[_builtins.str] instance_guid: Unique identifier for IBM Cloud Event Notifications instance.
        :param pulumi.Input[_builtins.str] type: The type of Destination type push_ios.
        :param pulumi.Input[_builtins.bool] collect_failed_events: Whether to collect the failed event in Cloud Object Storage bucket
        :param pulumi.Input['EnDestinationSafariConfigArgs'] config: Payload describing a destination configuration.
        :param pulumi.Input[_builtins.str] description: The Destination description.
        :param pulumi.Input[_builtins.str] icon128x128: The Certificate File.
        :param pulumi.Input[_builtins.str] icon128x1282x: The Certificate File.
        :param pulumi.Input[_builtins.str] icon128x1282x_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon128x128_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x16: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x162x: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x162x_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x16_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x32: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x322x: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x322x_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x32_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] name: The Destintion name.
        """
        pulumi.set(__self__, "certificate", certificate)
        pulumi.set(__self__, "instance_guid", instance_guid)
        pulumi.set(__self__, "type", type)
        if collect_failed_events is not None:
            pulumi.set(__self__, "collect_failed_events", collect_failed_events)
        if config is not None:
            pulumi.set(__self__, "config", config)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if en_destination_safari_id is not None:
            pulumi.set(__self__, "en_destination_safari_id", en_destination_safari_id)
        if icon128x128 is not None:
            pulumi.set(__self__, "icon128x128", icon128x128)
        if icon128x1282x is not None:
            pulumi.set(__self__, "icon128x1282x", icon128x1282x)
        if icon128x1282x_content_type is not None:
            pulumi.set(__self__, "icon128x1282x_content_type", icon128x1282x_content_type)
        if icon128x128_content_type is not None:
            pulumi.set(__self__, "icon128x128_content_type", icon128x128_content_type)
        if icon16x16 is not None:
            pulumi.set(__self__, "icon16x16", icon16x16)
        if icon16x162x is not None:
            pulumi.set(__self__, "icon16x162x", icon16x162x)
        if icon16x162x_content_type is not None:
            pulumi.set(__self__, "icon16x162x_content_type", icon16x162x_content_type)
        if icon16x16_content_type is not None:
            pulumi.set(__self__, "icon16x16_content_type", icon16x16_content_type)
        if icon32x32 is not None:
            pulumi.set(__self__, "icon32x32", icon32x32)
        if icon32x322x is not None:
            pulumi.set(__self__, "icon32x322x", icon32x322x)
        if icon32x322x_content_type is not None:
            pulumi.set(__self__, "icon32x322x_content_type", icon32x322x_content_type)
        if icon32x32_content_type is not None:
            pulumi.set(__self__, "icon32x32_content_type", icon32x32_content_type)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def certificate(self) -> pulumi.Input[_builtins.str]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "certificate")

    @certificate.setter
    def certificate(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "certificate", value)

    @_builtins.property
    @pulumi.getter(name="instanceGuid")
    def instance_guid(self) -> pulumi.Input[_builtins.str]:
        """
        Unique identifier for IBM Cloud Event Notifications instance.
        """
        return pulumi.get(self, "instance_guid")

    @instance_guid.setter
    def instance_guid(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_guid", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Input[_builtins.str]:
        """
        The type of Destination type push_ios.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="collectFailedEvents")
    def collect_failed_events(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Whether to collect the failed event in Cloud Object Storage bucket
        """
        return pulumi.get(self, "collect_failed_events")

    @collect_failed_events.setter
    def collect_failed_events(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "collect_failed_events", value)

    @_builtins.property
    @pulumi.getter
    def config(self) -> Optional[pulumi.Input['EnDestinationSafariConfigArgs']]:
        """
        Payload describing a destination configuration.
        """
        return pulumi.get(self, "config")

    @config.setter
    def config(self, value: Optional[pulumi.Input['EnDestinationSafariConfigArgs']]):
        pulumi.set(self, "config", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Destination description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enDestinationSafariId")
    def en_destination_safari_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "en_destination_safari_id")

    @en_destination_safari_id.setter
    def en_destination_safari_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "en_destination_safari_id", value)

    @_builtins.property
    @pulumi.getter
    def icon128x128(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon128x128")

    @icon128x128.setter
    def icon128x128(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon128x128", value)

    @_builtins.property
    @pulumi.getter
    def icon128x1282x(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon128x1282x")

    @icon128x1282x.setter
    def icon128x1282x(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon128x1282x", value)

    @_builtins.property
    @pulumi.getter(name="icon128x1282xContentType")
    def icon128x1282x_content_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon128x1282x_content_type")

    @icon128x1282x_content_type.setter
    def icon128x1282x_content_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon128x1282x_content_type", value)

    @_builtins.property
    @pulumi.getter(name="icon128x128ContentType")
    def icon128x128_content_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon128x128_content_type")

    @icon128x128_content_type.setter
    def icon128x128_content_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon128x128_content_type", value)

    @_builtins.property
    @pulumi.getter
    def icon16x16(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon16x16")

    @icon16x16.setter
    def icon16x16(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon16x16", value)

    @_builtins.property
    @pulumi.getter
    def icon16x162x(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon16x162x")

    @icon16x162x.setter
    def icon16x162x(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon16x162x", value)

    @_builtins.property
    @pulumi.getter(name="icon16x162xContentType")
    def icon16x162x_content_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon16x162x_content_type")

    @icon16x162x_content_type.setter
    def icon16x162x_content_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon16x162x_content_type", value)

    @_builtins.property
    @pulumi.getter(name="icon16x16ContentType")
    def icon16x16_content_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon16x16_content_type")

    @icon16x16_content_type.setter
    def icon16x16_content_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon16x16_content_type", value)

    @_builtins.property
    @pulumi.getter
    def icon32x32(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon32x32")

    @icon32x32.setter
    def icon32x32(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon32x32", value)

    @_builtins.property
    @pulumi.getter
    def icon32x322x(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon32x322x")

    @icon32x322x.setter
    def icon32x322x(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon32x322x", value)

    @_builtins.property
    @pulumi.getter(name="icon32x322xContentType")
    def icon32x322x_content_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon32x322x_content_type")

    @icon32x322x_content_type.setter
    def icon32x322x_content_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon32x322x_content_type", value)

    @_builtins.property
    @pulumi.getter(name="icon32x32ContentType")
    def icon32x32_content_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon32x32_content_type")

    @icon32x32_content_type.setter
    def icon32x32_content_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon32x32_content_type", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Destintion name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _EnDestinationSafariState:
    def __init__(__self__, *,
                 certificate: Optional[pulumi.Input[_builtins.str]] = None,
                 collect_failed_events: Optional[pulumi.Input[_builtins.bool]] = None,
                 config: Optional[pulumi.Input['EnDestinationSafariConfigArgs']] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_id: Optional[pulumi.Input[_builtins.str]] = None,
                 en_destination_safari_id: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x128: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x1282x: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x1282x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x128_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x16: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x162x: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x162x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x16_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x32: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x322x: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x322x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x32_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_guid: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 subscription_count: Optional[pulumi.Input[_builtins.float]] = None,
                 subscription_names: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering EnDestinationSafari resources.
        :param pulumi.Input[_builtins.str] certificate: The Certificate File.
        :param pulumi.Input[_builtins.bool] collect_failed_events: Whether to collect the failed event in Cloud Object Storage bucket
        :param pulumi.Input['EnDestinationSafariConfigArgs'] config: Payload describing a destination configuration.
        :param pulumi.Input[_builtins.str] description: The Destination description.
        :param pulumi.Input[_builtins.str] destination_id: Destination ID
        :param pulumi.Input[_builtins.str] icon128x128: The Certificate File.
        :param pulumi.Input[_builtins.str] icon128x1282x: The Certificate File.
        :param pulumi.Input[_builtins.str] icon128x1282x_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon128x128_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x16: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x162x: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x162x_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x16_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x32: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x322x: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x322x_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x32_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] instance_guid: Unique identifier for IBM Cloud Event Notifications instance.
        :param pulumi.Input[_builtins.str] name: The Destintion name.
        :param pulumi.Input[_builtins.float] subscription_count: Number of subscriptions.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] subscription_names: List of subscriptions.
        :param pulumi.Input[_builtins.str] type: The type of Destination type push_ios.
        :param pulumi.Input[_builtins.str] updated_at: Last updated time.
        """
        if certificate is not None:
            pulumi.set(__self__, "certificate", certificate)
        if collect_failed_events is not None:
            pulumi.set(__self__, "collect_failed_events", collect_failed_events)
        if config is not None:
            pulumi.set(__self__, "config", config)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if destination_id is not None:
            pulumi.set(__self__, "destination_id", destination_id)
        if en_destination_safari_id is not None:
            pulumi.set(__self__, "en_destination_safari_id", en_destination_safari_id)
        if icon128x128 is not None:
            pulumi.set(__self__, "icon128x128", icon128x128)
        if icon128x1282x is not None:
            pulumi.set(__self__, "icon128x1282x", icon128x1282x)
        if icon128x1282x_content_type is not None:
            pulumi.set(__self__, "icon128x1282x_content_type", icon128x1282x_content_type)
        if icon128x128_content_type is not None:
            pulumi.set(__self__, "icon128x128_content_type", icon128x128_content_type)
        if icon16x16 is not None:
            pulumi.set(__self__, "icon16x16", icon16x16)
        if icon16x162x is not None:
            pulumi.set(__self__, "icon16x162x", icon16x162x)
        if icon16x162x_content_type is not None:
            pulumi.set(__self__, "icon16x162x_content_type", icon16x162x_content_type)
        if icon16x16_content_type is not None:
            pulumi.set(__self__, "icon16x16_content_type", icon16x16_content_type)
        if icon32x32 is not None:
            pulumi.set(__self__, "icon32x32", icon32x32)
        if icon32x322x is not None:
            pulumi.set(__self__, "icon32x322x", icon32x322x)
        if icon32x322x_content_type is not None:
            pulumi.set(__self__, "icon32x322x_content_type", icon32x322x_content_type)
        if icon32x32_content_type is not None:
            pulumi.set(__self__, "icon32x32_content_type", icon32x32_content_type)
        if instance_guid is not None:
            pulumi.set(__self__, "instance_guid", instance_guid)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if subscription_count is not None:
            pulumi.set(__self__, "subscription_count", subscription_count)
        if subscription_names is not None:
            pulumi.set(__self__, "subscription_names", subscription_names)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter
    def certificate(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "certificate")

    @certificate.setter
    def certificate(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "certificate", value)

    @_builtins.property
    @pulumi.getter(name="collectFailedEvents")
    def collect_failed_events(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Whether to collect the failed event in Cloud Object Storage bucket
        """
        return pulumi.get(self, "collect_failed_events")

    @collect_failed_events.setter
    def collect_failed_events(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "collect_failed_events", value)

    @_builtins.property
    @pulumi.getter
    def config(self) -> Optional[pulumi.Input['EnDestinationSafariConfigArgs']]:
        """
        Payload describing a destination configuration.
        """
        return pulumi.get(self, "config")

    @config.setter
    def config(self, value: Optional[pulumi.Input['EnDestinationSafariConfigArgs']]):
        pulumi.set(self, "config", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Destination description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="destinationId")
    def destination_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Destination ID
        """
        return pulumi.get(self, "destination_id")

    @destination_id.setter
    def destination_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "destination_id", value)

    @_builtins.property
    @pulumi.getter(name="enDestinationSafariId")
    def en_destination_safari_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "en_destination_safari_id")

    @en_destination_safari_id.setter
    def en_destination_safari_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "en_destination_safari_id", value)

    @_builtins.property
    @pulumi.getter
    def icon128x128(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon128x128")

    @icon128x128.setter
    def icon128x128(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon128x128", value)

    @_builtins.property
    @pulumi.getter
    def icon128x1282x(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon128x1282x")

    @icon128x1282x.setter
    def icon128x1282x(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon128x1282x", value)

    @_builtins.property
    @pulumi.getter(name="icon128x1282xContentType")
    def icon128x1282x_content_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon128x1282x_content_type")

    @icon128x1282x_content_type.setter
    def icon128x1282x_content_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon128x1282x_content_type", value)

    @_builtins.property
    @pulumi.getter(name="icon128x128ContentType")
    def icon128x128_content_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon128x128_content_type")

    @icon128x128_content_type.setter
    def icon128x128_content_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon128x128_content_type", value)

    @_builtins.property
    @pulumi.getter
    def icon16x16(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon16x16")

    @icon16x16.setter
    def icon16x16(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon16x16", value)

    @_builtins.property
    @pulumi.getter
    def icon16x162x(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon16x162x")

    @icon16x162x.setter
    def icon16x162x(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon16x162x", value)

    @_builtins.property
    @pulumi.getter(name="icon16x162xContentType")
    def icon16x162x_content_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon16x162x_content_type")

    @icon16x162x_content_type.setter
    def icon16x162x_content_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon16x162x_content_type", value)

    @_builtins.property
    @pulumi.getter(name="icon16x16ContentType")
    def icon16x16_content_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon16x16_content_type")

    @icon16x16_content_type.setter
    def icon16x16_content_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon16x16_content_type", value)

    @_builtins.property
    @pulumi.getter
    def icon32x32(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon32x32")

    @icon32x32.setter
    def icon32x32(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon32x32", value)

    @_builtins.property
    @pulumi.getter
    def icon32x322x(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon32x322x")

    @icon32x322x.setter
    def icon32x322x(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon32x322x", value)

    @_builtins.property
    @pulumi.getter(name="icon32x322xContentType")
    def icon32x322x_content_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon32x322x_content_type")

    @icon32x322x_content_type.setter
    def icon32x322x_content_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon32x322x_content_type", value)

    @_builtins.property
    @pulumi.getter(name="icon32x32ContentType")
    def icon32x32_content_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon32x32_content_type")

    @icon32x32_content_type.setter
    def icon32x32_content_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "icon32x32_content_type", value)

    @_builtins.property
    @pulumi.getter(name="instanceGuid")
    def instance_guid(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Unique identifier for IBM Cloud Event Notifications instance.
        """
        return pulumi.get(self, "instance_guid")

    @instance_guid.setter
    def instance_guid(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_guid", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Destintion name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="subscriptionCount")
    def subscription_count(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Number of subscriptions.
        """
        return pulumi.get(self, "subscription_count")

    @subscription_count.setter
    def subscription_count(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "subscription_count", value)

    @_builtins.property
    @pulumi.getter(name="subscriptionNames")
    def subscription_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        List of subscriptions.
        """
        return pulumi.get(self, "subscription_names")

    @subscription_names.setter
    def subscription_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "subscription_names", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The type of Destination type push_ios.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Last updated time.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("ibm:index/enDestinationSafari:EnDestinationSafari")
class EnDestinationSafari(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 certificate: Optional[pulumi.Input[_builtins.str]] = None,
                 collect_failed_events: Optional[pulumi.Input[_builtins.bool]] = None,
                 config: Optional[pulumi.Input[Union['EnDestinationSafariConfigArgs', 'EnDestinationSafariConfigArgsDict']]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 en_destination_safari_id: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x128: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x1282x: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x1282x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x128_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x16: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x162x: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x162x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x16_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x32: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x322x: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x322x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x32_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_guid: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a EnDestinationSafari resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] certificate: The Certificate File.
        :param pulumi.Input[_builtins.bool] collect_failed_events: Whether to collect the failed event in Cloud Object Storage bucket
        :param pulumi.Input[Union['EnDestinationSafariConfigArgs', 'EnDestinationSafariConfigArgsDict']] config: Payload describing a destination configuration.
        :param pulumi.Input[_builtins.str] description: The Destination description.
        :param pulumi.Input[_builtins.str] icon128x128: The Certificate File.
        :param pulumi.Input[_builtins.str] icon128x1282x: The Certificate File.
        :param pulumi.Input[_builtins.str] icon128x1282x_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon128x128_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x16: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x162x: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x162x_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x16_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x32: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x322x: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x322x_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x32_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] instance_guid: Unique identifier for IBM Cloud Event Notifications instance.
        :param pulumi.Input[_builtins.str] name: The Destintion name.
        :param pulumi.Input[_builtins.str] type: The type of Destination type push_ios.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: EnDestinationSafariArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a EnDestinationSafari resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param EnDestinationSafariArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(EnDestinationSafariArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 certificate: Optional[pulumi.Input[_builtins.str]] = None,
                 collect_failed_events: Optional[pulumi.Input[_builtins.bool]] = None,
                 config: Optional[pulumi.Input[Union['EnDestinationSafariConfigArgs', 'EnDestinationSafariConfigArgsDict']]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 en_destination_safari_id: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x128: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x1282x: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x1282x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon128x128_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x16: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x162x: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x162x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon16x16_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x32: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x322x: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x322x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 icon32x32_content_type: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_guid: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = EnDestinationSafariArgs.__new__(EnDestinationSafariArgs)

            if certificate is None and not opts.urn:
                raise TypeError("Missing required property 'certificate'")
            __props__.__dict__["certificate"] = certificate
            __props__.__dict__["collect_failed_events"] = collect_failed_events
            __props__.__dict__["config"] = config
            __props__.__dict__["description"] = description
            __props__.__dict__["en_destination_safari_id"] = en_destination_safari_id
            __props__.__dict__["icon128x128"] = icon128x128
            __props__.__dict__["icon128x1282x"] = icon128x1282x
            __props__.__dict__["icon128x1282x_content_type"] = icon128x1282x_content_type
            __props__.__dict__["icon128x128_content_type"] = icon128x128_content_type
            __props__.__dict__["icon16x16"] = icon16x16
            __props__.__dict__["icon16x162x"] = icon16x162x
            __props__.__dict__["icon16x162x_content_type"] = icon16x162x_content_type
            __props__.__dict__["icon16x16_content_type"] = icon16x16_content_type
            __props__.__dict__["icon32x32"] = icon32x32
            __props__.__dict__["icon32x322x"] = icon32x322x
            __props__.__dict__["icon32x322x_content_type"] = icon32x322x_content_type
            __props__.__dict__["icon32x32_content_type"] = icon32x32_content_type
            if instance_guid is None and not opts.urn:
                raise TypeError("Missing required property 'instance_guid'")
            __props__.__dict__["instance_guid"] = instance_guid
            __props__.__dict__["name"] = name
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            __props__.__dict__["destination_id"] = None
            __props__.__dict__["subscription_count"] = None
            __props__.__dict__["subscription_names"] = None
            __props__.__dict__["updated_at"] = None
        super(EnDestinationSafari, __self__).__init__(
            'ibm:index/enDestinationSafari:EnDestinationSafari',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            certificate: Optional[pulumi.Input[_builtins.str]] = None,
            collect_failed_events: Optional[pulumi.Input[_builtins.bool]] = None,
            config: Optional[pulumi.Input[Union['EnDestinationSafariConfigArgs', 'EnDestinationSafariConfigArgsDict']]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            destination_id: Optional[pulumi.Input[_builtins.str]] = None,
            en_destination_safari_id: Optional[pulumi.Input[_builtins.str]] = None,
            icon128x128: Optional[pulumi.Input[_builtins.str]] = None,
            icon128x1282x: Optional[pulumi.Input[_builtins.str]] = None,
            icon128x1282x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
            icon128x128_content_type: Optional[pulumi.Input[_builtins.str]] = None,
            icon16x16: Optional[pulumi.Input[_builtins.str]] = None,
            icon16x162x: Optional[pulumi.Input[_builtins.str]] = None,
            icon16x162x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
            icon16x16_content_type: Optional[pulumi.Input[_builtins.str]] = None,
            icon32x32: Optional[pulumi.Input[_builtins.str]] = None,
            icon32x322x: Optional[pulumi.Input[_builtins.str]] = None,
            icon32x322x_content_type: Optional[pulumi.Input[_builtins.str]] = None,
            icon32x32_content_type: Optional[pulumi.Input[_builtins.str]] = None,
            instance_guid: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            subscription_count: Optional[pulumi.Input[_builtins.float]] = None,
            subscription_names: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'EnDestinationSafari':
        """
        Get an existing EnDestinationSafari resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] certificate: The Certificate File.
        :param pulumi.Input[_builtins.bool] collect_failed_events: Whether to collect the failed event in Cloud Object Storage bucket
        :param pulumi.Input[Union['EnDestinationSafariConfigArgs', 'EnDestinationSafariConfigArgsDict']] config: Payload describing a destination configuration.
        :param pulumi.Input[_builtins.str] description: The Destination description.
        :param pulumi.Input[_builtins.str] destination_id: Destination ID
        :param pulumi.Input[_builtins.str] icon128x128: The Certificate File.
        :param pulumi.Input[_builtins.str] icon128x1282x: The Certificate File.
        :param pulumi.Input[_builtins.str] icon128x1282x_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon128x128_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x16: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x162x: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x162x_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon16x16_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x32: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x322x: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x322x_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] icon32x32_content_type: The Certificate File.
        :param pulumi.Input[_builtins.str] instance_guid: Unique identifier for IBM Cloud Event Notifications instance.
        :param pulumi.Input[_builtins.str] name: The Destintion name.
        :param pulumi.Input[_builtins.float] subscription_count: Number of subscriptions.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] subscription_names: List of subscriptions.
        :param pulumi.Input[_builtins.str] type: The type of Destination type push_ios.
        :param pulumi.Input[_builtins.str] updated_at: Last updated time.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _EnDestinationSafariState.__new__(_EnDestinationSafariState)

        __props__.__dict__["certificate"] = certificate
        __props__.__dict__["collect_failed_events"] = collect_failed_events
        __props__.__dict__["config"] = config
        __props__.__dict__["description"] = description
        __props__.__dict__["destination_id"] = destination_id
        __props__.__dict__["en_destination_safari_id"] = en_destination_safari_id
        __props__.__dict__["icon128x128"] = icon128x128
        __props__.__dict__["icon128x1282x"] = icon128x1282x
        __props__.__dict__["icon128x1282x_content_type"] = icon128x1282x_content_type
        __props__.__dict__["icon128x128_content_type"] = icon128x128_content_type
        __props__.__dict__["icon16x16"] = icon16x16
        __props__.__dict__["icon16x162x"] = icon16x162x
        __props__.__dict__["icon16x162x_content_type"] = icon16x162x_content_type
        __props__.__dict__["icon16x16_content_type"] = icon16x16_content_type
        __props__.__dict__["icon32x32"] = icon32x32
        __props__.__dict__["icon32x322x"] = icon32x322x
        __props__.__dict__["icon32x322x_content_type"] = icon32x322x_content_type
        __props__.__dict__["icon32x32_content_type"] = icon32x32_content_type
        __props__.__dict__["instance_guid"] = instance_guid
        __props__.__dict__["name"] = name
        __props__.__dict__["subscription_count"] = subscription_count
        __props__.__dict__["subscription_names"] = subscription_names
        __props__.__dict__["type"] = type
        __props__.__dict__["updated_at"] = updated_at
        return EnDestinationSafari(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def certificate(self) -> pulumi.Output[_builtins.str]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "certificate")

    @_builtins.property
    @pulumi.getter(name="collectFailedEvents")
    def collect_failed_events(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Whether to collect the failed event in Cloud Object Storage bucket
        """
        return pulumi.get(self, "collect_failed_events")

    @_builtins.property
    @pulumi.getter
    def config(self) -> pulumi.Output[Optional['outputs.EnDestinationSafariConfig']]:
        """
        Payload describing a destination configuration.
        """
        return pulumi.get(self, "config")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The Destination description.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="destinationId")
    def destination_id(self) -> pulumi.Output[_builtins.str]:
        """
        Destination ID
        """
        return pulumi.get(self, "destination_id")

    @_builtins.property
    @pulumi.getter(name="enDestinationSafariId")
    def en_destination_safari_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "en_destination_safari_id")

    @_builtins.property
    @pulumi.getter
    def icon128x128(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon128x128")

    @_builtins.property
    @pulumi.getter
    def icon128x1282x(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon128x1282x")

    @_builtins.property
    @pulumi.getter(name="icon128x1282xContentType")
    def icon128x1282x_content_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon128x1282x_content_type")

    @_builtins.property
    @pulumi.getter(name="icon128x128ContentType")
    def icon128x128_content_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon128x128_content_type")

    @_builtins.property
    @pulumi.getter
    def icon16x16(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon16x16")

    @_builtins.property
    @pulumi.getter
    def icon16x162x(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon16x162x")

    @_builtins.property
    @pulumi.getter(name="icon16x162xContentType")
    def icon16x162x_content_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon16x162x_content_type")

    @_builtins.property
    @pulumi.getter(name="icon16x16ContentType")
    def icon16x16_content_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon16x16_content_type")

    @_builtins.property
    @pulumi.getter
    def icon32x32(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon32x32")

    @_builtins.property
    @pulumi.getter
    def icon32x322x(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon32x322x")

    @_builtins.property
    @pulumi.getter(name="icon32x322xContentType")
    def icon32x322x_content_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon32x322x_content_type")

    @_builtins.property
    @pulumi.getter(name="icon32x32ContentType")
    def icon32x32_content_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The Certificate File.
        """
        return pulumi.get(self, "icon32x32_content_type")

    @_builtins.property
    @pulumi.getter(name="instanceGuid")
    def instance_guid(self) -> pulumi.Output[_builtins.str]:
        """
        Unique identifier for IBM Cloud Event Notifications instance.
        """
        return pulumi.get(self, "instance_guid")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The Destintion name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="subscriptionCount")
    def subscription_count(self) -> pulumi.Output[_builtins.float]:
        """
        Number of subscriptions.
        """
        return pulumi.get(self, "subscription_count")

    @_builtins.property
    @pulumi.getter(name="subscriptionNames")
    def subscription_names(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        List of subscriptions.
        """
        return pulumi.get(self, "subscription_names")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        The type of Destination type push_ios.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Last updated time.
        """
        return pulumi.get(self, "updated_at")

