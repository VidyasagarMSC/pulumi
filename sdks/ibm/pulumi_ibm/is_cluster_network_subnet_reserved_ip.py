# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IsClusterNetworkSubnetReservedIpArgs', 'IsClusterNetworkSubnetReservedIp']

@pulumi.input_type
class IsClusterNetworkSubnetReservedIpArgs:
    def __init__(__self__, *,
                 cluster_network_id: pulumi.Input[_builtins.str],
                 cluster_network_subnet_id: pulumi.Input[_builtins.str],
                 address: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_delete: Optional[pulumi.Input[_builtins.bool]] = None,
                 is_cluster_network_subnet_reserved_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a IsClusterNetworkSubnetReservedIp resource.
        :param pulumi.Input[_builtins.str] cluster_network_id: The cluster network identifier.
        :param pulumi.Input[_builtins.str] cluster_network_subnet_id: The cluster network subnet identifier.
        :param pulumi.Input[_builtins.str] address: The IP address.If the address is pending allocation, the value will be `0.0.0.0`.This property may
               [expand](https://cloud.ibm.com/apidocs/vpc#property-value-expansion) to support IPv6 addresses in the future.
        :param pulumi.Input[_builtins.bool] auto_delete: Indicates whether this cluster network subnet reserved IP member will be automatically deleted when either `target` is
               deleted, or the cluster network subnet reserved IP is unbound.
        :param pulumi.Input[_builtins.str] name: The name for this cluster network subnet reserved IP. The name is unique across all reserved IPs in a cluster network
               subnet.
        """
        pulumi.set(__self__, "cluster_network_id", cluster_network_id)
        pulumi.set(__self__, "cluster_network_subnet_id", cluster_network_subnet_id)
        if address is not None:
            pulumi.set(__self__, "address", address)
        if auto_delete is not None:
            pulumi.set(__self__, "auto_delete", auto_delete)
        if is_cluster_network_subnet_reserved_ip_id is not None:
            pulumi.set(__self__, "is_cluster_network_subnet_reserved_ip_id", is_cluster_network_subnet_reserved_ip_id)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="clusterNetworkId")
    def cluster_network_id(self) -> pulumi.Input[_builtins.str]:
        """
        The cluster network identifier.
        """
        return pulumi.get(self, "cluster_network_id")

    @cluster_network_id.setter
    def cluster_network_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "cluster_network_id", value)

    @_builtins.property
    @pulumi.getter(name="clusterNetworkSubnetId")
    def cluster_network_subnet_id(self) -> pulumi.Input[_builtins.str]:
        """
        The cluster network subnet identifier.
        """
        return pulumi.get(self, "cluster_network_subnet_id")

    @cluster_network_subnet_id.setter
    def cluster_network_subnet_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "cluster_network_subnet_id", value)

    @_builtins.property
    @pulumi.getter
    def address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The IP address.If the address is pending allocation, the value will be `0.0.0.0`.This property may
        [expand](https://cloud.ibm.com/apidocs/vpc#property-value-expansion) to support IPv6 addresses in the future.
        """
        return pulumi.get(self, "address")

    @address.setter
    def address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "address", value)

    @_builtins.property
    @pulumi.getter(name="autoDelete")
    def auto_delete(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Indicates whether this cluster network subnet reserved IP member will be automatically deleted when either `target` is
        deleted, or the cluster network subnet reserved IP is unbound.
        """
        return pulumi.get(self, "auto_delete")

    @auto_delete.setter
    def auto_delete(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "auto_delete", value)

    @_builtins.property
    @pulumi.getter(name="isClusterNetworkSubnetReservedIpId")
    def is_cluster_network_subnet_reserved_ip_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "is_cluster_network_subnet_reserved_ip_id")

    @is_cluster_network_subnet_reserved_ip_id.setter
    def is_cluster_network_subnet_reserved_ip_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "is_cluster_network_subnet_reserved_ip_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name for this cluster network subnet reserved IP. The name is unique across all reserved IPs in a cluster network
        subnet.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _IsClusterNetworkSubnetReservedIpState:
    def __init__(__self__, *,
                 address: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_delete: Optional[pulumi.Input[_builtins.bool]] = None,
                 cluster_network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cluster_network_subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cluster_network_subnet_reserved_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 etag: Optional[pulumi.Input[_builtins.str]] = None,
                 href: Optional[pulumi.Input[_builtins.str]] = None,
                 is_cluster_network_subnet_reserved_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lifecycle_reasons: Optional[pulumi.Input[Sequence[pulumi.Input['IsClusterNetworkSubnetReservedIpLifecycleReasonArgs']]]] = None,
                 lifecycle_state: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 owner: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_type: Optional[pulumi.Input[_builtins.str]] = None,
                 targets: Optional[pulumi.Input[Sequence[pulumi.Input['IsClusterNetworkSubnetReservedIpTargetArgs']]]] = None):
        """
        Input properties used for looking up and filtering IsClusterNetworkSubnetReservedIp resources.
        :param pulumi.Input[_builtins.str] address: The IP address.If the address is pending allocation, the value will be `0.0.0.0`.This property may
               [expand](https://cloud.ibm.com/apidocs/vpc#property-value-expansion) to support IPv6 addresses in the future.
        :param pulumi.Input[_builtins.bool] auto_delete: Indicates whether this cluster network subnet reserved IP member will be automatically deleted when either `target` is
               deleted, or the cluster network subnet reserved IP is unbound.
        :param pulumi.Input[_builtins.str] cluster_network_id: The cluster network identifier.
        :param pulumi.Input[_builtins.str] cluster_network_subnet_id: The cluster network subnet identifier.
        :param pulumi.Input[_builtins.str] cluster_network_subnet_reserved_ip_id: The unique identifier for this cluster network subnet reserved IP.
        :param pulumi.Input[_builtins.str] created_at: The date and time that the cluster network subnet reserved IP was created.
        :param pulumi.Input[_builtins.str] href: The URL for this cluster network subnet reserved IP.
        :param pulumi.Input[Sequence[pulumi.Input['IsClusterNetworkSubnetReservedIpLifecycleReasonArgs']]] lifecycle_reasons: The reasons for the current `lifecycle_state` (if any).
        :param pulumi.Input[_builtins.str] lifecycle_state: The lifecycle state of the cluster network subnet reserved IP.
        :param pulumi.Input[_builtins.str] name: The name for this cluster network subnet reserved IP. The name is unique across all reserved IPs in a cluster network
               subnet.
        :param pulumi.Input[_builtins.str] owner: The owner of the cluster network subnet reserved IPThe enumerated values for this property
               may[expand](https://cloud.ibm.com/apidocs/vpc#property-value-expansion) in the future.
        :param pulumi.Input[_builtins.str] resource_type: The resource type.
        :param pulumi.Input[Sequence[pulumi.Input['IsClusterNetworkSubnetReservedIpTargetArgs']]] targets: The target this cluster network subnet reserved IP is bound to.If absent, this cluster network subnet reserved IP is
               provider-owned or unbound.
        """
        if address is not None:
            pulumi.set(__self__, "address", address)
        if auto_delete is not None:
            pulumi.set(__self__, "auto_delete", auto_delete)
        if cluster_network_id is not None:
            pulumi.set(__self__, "cluster_network_id", cluster_network_id)
        if cluster_network_subnet_id is not None:
            pulumi.set(__self__, "cluster_network_subnet_id", cluster_network_subnet_id)
        if cluster_network_subnet_reserved_ip_id is not None:
            pulumi.set(__self__, "cluster_network_subnet_reserved_ip_id", cluster_network_subnet_reserved_ip_id)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if etag is not None:
            pulumi.set(__self__, "etag", etag)
        if href is not None:
            pulumi.set(__self__, "href", href)
        if is_cluster_network_subnet_reserved_ip_id is not None:
            pulumi.set(__self__, "is_cluster_network_subnet_reserved_ip_id", is_cluster_network_subnet_reserved_ip_id)
        if lifecycle_reasons is not None:
            pulumi.set(__self__, "lifecycle_reasons", lifecycle_reasons)
        if lifecycle_state is not None:
            pulumi.set(__self__, "lifecycle_state", lifecycle_state)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if owner is not None:
            pulumi.set(__self__, "owner", owner)
        if resource_type is not None:
            pulumi.set(__self__, "resource_type", resource_type)
        if targets is not None:
            pulumi.set(__self__, "targets", targets)

    @_builtins.property
    @pulumi.getter
    def address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The IP address.If the address is pending allocation, the value will be `0.0.0.0`.This property may
        [expand](https://cloud.ibm.com/apidocs/vpc#property-value-expansion) to support IPv6 addresses in the future.
        """
        return pulumi.get(self, "address")

    @address.setter
    def address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "address", value)

    @_builtins.property
    @pulumi.getter(name="autoDelete")
    def auto_delete(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Indicates whether this cluster network subnet reserved IP member will be automatically deleted when either `target` is
        deleted, or the cluster network subnet reserved IP is unbound.
        """
        return pulumi.get(self, "auto_delete")

    @auto_delete.setter
    def auto_delete(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "auto_delete", value)

    @_builtins.property
    @pulumi.getter(name="clusterNetworkId")
    def cluster_network_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The cluster network identifier.
        """
        return pulumi.get(self, "cluster_network_id")

    @cluster_network_id.setter
    def cluster_network_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cluster_network_id", value)

    @_builtins.property
    @pulumi.getter(name="clusterNetworkSubnetId")
    def cluster_network_subnet_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The cluster network subnet identifier.
        """
        return pulumi.get(self, "cluster_network_subnet_id")

    @cluster_network_subnet_id.setter
    def cluster_network_subnet_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cluster_network_subnet_id", value)

    @_builtins.property
    @pulumi.getter(name="clusterNetworkSubnetReservedIpId")
    def cluster_network_subnet_reserved_ip_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique identifier for this cluster network subnet reserved IP.
        """
        return pulumi.get(self, "cluster_network_subnet_reserved_ip_id")

    @cluster_network_subnet_reserved_ip_id.setter
    def cluster_network_subnet_reserved_ip_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cluster_network_subnet_reserved_ip_id", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date and time that the cluster network subnet reserved IP was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def etag(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "etag")

    @etag.setter
    def etag(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "etag", value)

    @_builtins.property
    @pulumi.getter
    def href(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL for this cluster network subnet reserved IP.
        """
        return pulumi.get(self, "href")

    @href.setter
    def href(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "href", value)

    @_builtins.property
    @pulumi.getter(name="isClusterNetworkSubnetReservedIpId")
    def is_cluster_network_subnet_reserved_ip_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "is_cluster_network_subnet_reserved_ip_id")

    @is_cluster_network_subnet_reserved_ip_id.setter
    def is_cluster_network_subnet_reserved_ip_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "is_cluster_network_subnet_reserved_ip_id", value)

    @_builtins.property
    @pulumi.getter(name="lifecycleReasons")
    def lifecycle_reasons(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IsClusterNetworkSubnetReservedIpLifecycleReasonArgs']]]]:
        """
        The reasons for the current `lifecycle_state` (if any).
        """
        return pulumi.get(self, "lifecycle_reasons")

    @lifecycle_reasons.setter
    def lifecycle_reasons(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IsClusterNetworkSubnetReservedIpLifecycleReasonArgs']]]]):
        pulumi.set(self, "lifecycle_reasons", value)

    @_builtins.property
    @pulumi.getter(name="lifecycleState")
    def lifecycle_state(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The lifecycle state of the cluster network subnet reserved IP.
        """
        return pulumi.get(self, "lifecycle_state")

    @lifecycle_state.setter
    def lifecycle_state(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lifecycle_state", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name for this cluster network subnet reserved IP. The name is unique across all reserved IPs in a cluster network
        subnet.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def owner(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The owner of the cluster network subnet reserved IPThe enumerated values for this property
        may[expand](https://cloud.ibm.com/apidocs/vpc#property-value-expansion) in the future.
        """
        return pulumi.get(self, "owner")

    @owner.setter
    def owner(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "owner", value)

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The resource type.
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_type", value)

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IsClusterNetworkSubnetReservedIpTargetArgs']]]]:
        """
        The target this cluster network subnet reserved IP is bound to.If absent, this cluster network subnet reserved IP is
        provider-owned or unbound.
        """
        return pulumi.get(self, "targets")

    @targets.setter
    def targets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IsClusterNetworkSubnetReservedIpTargetArgs']]]]):
        pulumi.set(self, "targets", value)


@pulumi.type_token("ibm:index/isClusterNetworkSubnetReservedIp:IsClusterNetworkSubnetReservedIp")
class IsClusterNetworkSubnetReservedIp(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 address: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_delete: Optional[pulumi.Input[_builtins.bool]] = None,
                 cluster_network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cluster_network_subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_cluster_network_subnet_reserved_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a IsClusterNetworkSubnetReservedIp resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] address: The IP address.If the address is pending allocation, the value will be `0.0.0.0`.This property may
               [expand](https://cloud.ibm.com/apidocs/vpc#property-value-expansion) to support IPv6 addresses in the future.
        :param pulumi.Input[_builtins.bool] auto_delete: Indicates whether this cluster network subnet reserved IP member will be automatically deleted when either `target` is
               deleted, or the cluster network subnet reserved IP is unbound.
        :param pulumi.Input[_builtins.str] cluster_network_id: The cluster network identifier.
        :param pulumi.Input[_builtins.str] cluster_network_subnet_id: The cluster network subnet identifier.
        :param pulumi.Input[_builtins.str] name: The name for this cluster network subnet reserved IP. The name is unique across all reserved IPs in a cluster network
               subnet.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IsClusterNetworkSubnetReservedIpArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a IsClusterNetworkSubnetReservedIp resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param IsClusterNetworkSubnetReservedIpArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IsClusterNetworkSubnetReservedIpArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 address: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_delete: Optional[pulumi.Input[_builtins.bool]] = None,
                 cluster_network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cluster_network_subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_cluster_network_subnet_reserved_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IsClusterNetworkSubnetReservedIpArgs.__new__(IsClusterNetworkSubnetReservedIpArgs)

            __props__.__dict__["address"] = address
            __props__.__dict__["auto_delete"] = auto_delete
            if cluster_network_id is None and not opts.urn:
                raise TypeError("Missing required property 'cluster_network_id'")
            __props__.__dict__["cluster_network_id"] = cluster_network_id
            if cluster_network_subnet_id is None and not opts.urn:
                raise TypeError("Missing required property 'cluster_network_subnet_id'")
            __props__.__dict__["cluster_network_subnet_id"] = cluster_network_subnet_id
            __props__.__dict__["is_cluster_network_subnet_reserved_ip_id"] = is_cluster_network_subnet_reserved_ip_id
            __props__.__dict__["name"] = name
            __props__.__dict__["cluster_network_subnet_reserved_ip_id"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["etag"] = None
            __props__.__dict__["href"] = None
            __props__.__dict__["lifecycle_reasons"] = None
            __props__.__dict__["lifecycle_state"] = None
            __props__.__dict__["owner"] = None
            __props__.__dict__["resource_type"] = None
            __props__.__dict__["targets"] = None
        super(IsClusterNetworkSubnetReservedIp, __self__).__init__(
            'ibm:index/isClusterNetworkSubnetReservedIp:IsClusterNetworkSubnetReservedIp',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            address: Optional[pulumi.Input[_builtins.str]] = None,
            auto_delete: Optional[pulumi.Input[_builtins.bool]] = None,
            cluster_network_id: Optional[pulumi.Input[_builtins.str]] = None,
            cluster_network_subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
            cluster_network_subnet_reserved_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            etag: Optional[pulumi.Input[_builtins.str]] = None,
            href: Optional[pulumi.Input[_builtins.str]] = None,
            is_cluster_network_subnet_reserved_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
            lifecycle_reasons: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IsClusterNetworkSubnetReservedIpLifecycleReasonArgs', 'IsClusterNetworkSubnetReservedIpLifecycleReasonArgsDict']]]]] = None,
            lifecycle_state: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            owner: Optional[pulumi.Input[_builtins.str]] = None,
            resource_type: Optional[pulumi.Input[_builtins.str]] = None,
            targets: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IsClusterNetworkSubnetReservedIpTargetArgs', 'IsClusterNetworkSubnetReservedIpTargetArgsDict']]]]] = None) -> 'IsClusterNetworkSubnetReservedIp':
        """
        Get an existing IsClusterNetworkSubnetReservedIp resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] address: The IP address.If the address is pending allocation, the value will be `0.0.0.0`.This property may
               [expand](https://cloud.ibm.com/apidocs/vpc#property-value-expansion) to support IPv6 addresses in the future.
        :param pulumi.Input[_builtins.bool] auto_delete: Indicates whether this cluster network subnet reserved IP member will be automatically deleted when either `target` is
               deleted, or the cluster network subnet reserved IP is unbound.
        :param pulumi.Input[_builtins.str] cluster_network_id: The cluster network identifier.
        :param pulumi.Input[_builtins.str] cluster_network_subnet_id: The cluster network subnet identifier.
        :param pulumi.Input[_builtins.str] cluster_network_subnet_reserved_ip_id: The unique identifier for this cluster network subnet reserved IP.
        :param pulumi.Input[_builtins.str] created_at: The date and time that the cluster network subnet reserved IP was created.
        :param pulumi.Input[_builtins.str] href: The URL for this cluster network subnet reserved IP.
        :param pulumi.Input[Sequence[pulumi.Input[Union['IsClusterNetworkSubnetReservedIpLifecycleReasonArgs', 'IsClusterNetworkSubnetReservedIpLifecycleReasonArgsDict']]]] lifecycle_reasons: The reasons for the current `lifecycle_state` (if any).
        :param pulumi.Input[_builtins.str] lifecycle_state: The lifecycle state of the cluster network subnet reserved IP.
        :param pulumi.Input[_builtins.str] name: The name for this cluster network subnet reserved IP. The name is unique across all reserved IPs in a cluster network
               subnet.
        :param pulumi.Input[_builtins.str] owner: The owner of the cluster network subnet reserved IPThe enumerated values for this property
               may[expand](https://cloud.ibm.com/apidocs/vpc#property-value-expansion) in the future.
        :param pulumi.Input[_builtins.str] resource_type: The resource type.
        :param pulumi.Input[Sequence[pulumi.Input[Union['IsClusterNetworkSubnetReservedIpTargetArgs', 'IsClusterNetworkSubnetReservedIpTargetArgsDict']]]] targets: The target this cluster network subnet reserved IP is bound to.If absent, this cluster network subnet reserved IP is
               provider-owned or unbound.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IsClusterNetworkSubnetReservedIpState.__new__(_IsClusterNetworkSubnetReservedIpState)

        __props__.__dict__["address"] = address
        __props__.__dict__["auto_delete"] = auto_delete
        __props__.__dict__["cluster_network_id"] = cluster_network_id
        __props__.__dict__["cluster_network_subnet_id"] = cluster_network_subnet_id
        __props__.__dict__["cluster_network_subnet_reserved_ip_id"] = cluster_network_subnet_reserved_ip_id
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["etag"] = etag
        __props__.__dict__["href"] = href
        __props__.__dict__["is_cluster_network_subnet_reserved_ip_id"] = is_cluster_network_subnet_reserved_ip_id
        __props__.__dict__["lifecycle_reasons"] = lifecycle_reasons
        __props__.__dict__["lifecycle_state"] = lifecycle_state
        __props__.__dict__["name"] = name
        __props__.__dict__["owner"] = owner
        __props__.__dict__["resource_type"] = resource_type
        __props__.__dict__["targets"] = targets
        return IsClusterNetworkSubnetReservedIp(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def address(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The IP address.If the address is pending allocation, the value will be `0.0.0.0`.This property may
        [expand](https://cloud.ibm.com/apidocs/vpc#property-value-expansion) to support IPv6 addresses in the future.
        """
        return pulumi.get(self, "address")

    @_builtins.property
    @pulumi.getter(name="autoDelete")
    def auto_delete(self) -> pulumi.Output[_builtins.bool]:
        """
        Indicates whether this cluster network subnet reserved IP member will be automatically deleted when either `target` is
        deleted, or the cluster network subnet reserved IP is unbound.
        """
        return pulumi.get(self, "auto_delete")

    @_builtins.property
    @pulumi.getter(name="clusterNetworkId")
    def cluster_network_id(self) -> pulumi.Output[_builtins.str]:
        """
        The cluster network identifier.
        """
        return pulumi.get(self, "cluster_network_id")

    @_builtins.property
    @pulumi.getter(name="clusterNetworkSubnetId")
    def cluster_network_subnet_id(self) -> pulumi.Output[_builtins.str]:
        """
        The cluster network subnet identifier.
        """
        return pulumi.get(self, "cluster_network_subnet_id")

    @_builtins.property
    @pulumi.getter(name="clusterNetworkSubnetReservedIpId")
    def cluster_network_subnet_reserved_ip_id(self) -> pulumi.Output[_builtins.str]:
        """
        The unique identifier for this cluster network subnet reserved IP.
        """
        return pulumi.get(self, "cluster_network_subnet_reserved_ip_id")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The date and time that the cluster network subnet reserved IP was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def etag(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "etag")

    @_builtins.property
    @pulumi.getter
    def href(self) -> pulumi.Output[_builtins.str]:
        """
        The URL for this cluster network subnet reserved IP.
        """
        return pulumi.get(self, "href")

    @_builtins.property
    @pulumi.getter(name="isClusterNetworkSubnetReservedIpId")
    def is_cluster_network_subnet_reserved_ip_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "is_cluster_network_subnet_reserved_ip_id")

    @_builtins.property
    @pulumi.getter(name="lifecycleReasons")
    def lifecycle_reasons(self) -> pulumi.Output[Sequence['outputs.IsClusterNetworkSubnetReservedIpLifecycleReason']]:
        """
        The reasons for the current `lifecycle_state` (if any).
        """
        return pulumi.get(self, "lifecycle_reasons")

    @_builtins.property
    @pulumi.getter(name="lifecycleState")
    def lifecycle_state(self) -> pulumi.Output[_builtins.str]:
        """
        The lifecycle state of the cluster network subnet reserved IP.
        """
        return pulumi.get(self, "lifecycle_state")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name for this cluster network subnet reserved IP. The name is unique across all reserved IPs in a cluster network
        subnet.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def owner(self) -> pulumi.Output[_builtins.str]:
        """
        The owner of the cluster network subnet reserved IPThe enumerated values for this property
        may[expand](https://cloud.ibm.com/apidocs/vpc#property-value-expansion) in the future.
        """
        return pulumi.get(self, "owner")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> pulumi.Output[_builtins.str]:
        """
        The resource type.
        """
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> pulumi.Output[Sequence['outputs.IsClusterNetworkSubnetReservedIpTarget']]:
        """
        The target this cluster network subnet reserved IP is bound to.If absent, this cluster network subnet reserved IP is
        provider-owned or unbound.
        """
        return pulumi.get(self, "targets")

