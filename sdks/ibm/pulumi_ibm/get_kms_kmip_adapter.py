# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetKmsKmipAdapterResult',
    'AwaitableGetKmsKmipAdapterResult',
    'get_kms_kmip_adapter',
    'get_kms_kmip_adapter_output',
]

@pulumi.output_type
class GetKmsKmipAdapterResult:
    """
    A collection of values returned by getKmsKmipAdapter.
    """
    def __init__(__self__, adapter_id=None, created_at=None, created_by=None, description=None, endpoint_type=None, id=None, instance_id=None, name=None, profile=None, profile_data=None, updated_at=None, updated_by=None):
        if adapter_id and not isinstance(adapter_id, str):
            raise TypeError("Expected argument 'adapter_id' to be a str")
        pulumi.set(__self__, "adapter_id", adapter_id)
        if created_at and not isinstance(created_at, str):
            raise TypeError("Expected argument 'created_at' to be a str")
        pulumi.set(__self__, "created_at", created_at)
        if created_by and not isinstance(created_by, str):
            raise TypeError("Expected argument 'created_by' to be a str")
        pulumi.set(__self__, "created_by", created_by)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if endpoint_type and not isinstance(endpoint_type, str):
            raise TypeError("Expected argument 'endpoint_type' to be a str")
        pulumi.set(__self__, "endpoint_type", endpoint_type)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if profile and not isinstance(profile, str):
            raise TypeError("Expected argument 'profile' to be a str")
        pulumi.set(__self__, "profile", profile)
        if profile_data and not isinstance(profile_data, dict):
            raise TypeError("Expected argument 'profile_data' to be a dict")
        pulumi.set(__self__, "profile_data", profile_data)
        if updated_at and not isinstance(updated_at, str):
            raise TypeError("Expected argument 'updated_at' to be a str")
        pulumi.set(__self__, "updated_at", updated_at)
        if updated_by and not isinstance(updated_by, str):
            raise TypeError("Expected argument 'updated_by' to be a str")
        pulumi.set(__self__, "updated_by", updated_by)

    @_builtins.property
    @pulumi.getter(name="adapterId")
    def adapter_id(self) -> _builtins.str:
        return pulumi.get(self, "adapter_id")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> _builtins.str:
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> _builtins.str:
        return pulumi.get(self, "created_by")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="endpointType")
    def endpoint_type(self) -> _builtins.str:
        return pulumi.get(self, "endpoint_type")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> _builtins.str:
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def profile(self) -> _builtins.str:
        return pulumi.get(self, "profile")

    @_builtins.property
    @pulumi.getter(name="profileData")
    def profile_data(self) -> Mapping[str, _builtins.str]:
        return pulumi.get(self, "profile_data")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> _builtins.str:
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> _builtins.str:
        return pulumi.get(self, "updated_by")


class AwaitableGetKmsKmipAdapterResult(GetKmsKmipAdapterResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetKmsKmipAdapterResult(
            adapter_id=self.adapter_id,
            created_at=self.created_at,
            created_by=self.created_by,
            description=self.description,
            endpoint_type=self.endpoint_type,
            id=self.id,
            instance_id=self.instance_id,
            name=self.name,
            profile=self.profile,
            profile_data=self.profile_data,
            updated_at=self.updated_at,
            updated_by=self.updated_by)


def get_kms_kmip_adapter(adapter_id: Optional[_builtins.str] = None,
                         endpoint_type: Optional[_builtins.str] = None,
                         id: Optional[_builtins.str] = None,
                         instance_id: Optional[_builtins.str] = None,
                         name: Optional[_builtins.str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetKmsKmipAdapterResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['adapterId'] = adapter_id
    __args__['endpointType'] = endpoint_type
    __args__['id'] = id
    __args__['instanceId'] = instance_id
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getKmsKmipAdapter:getKmsKmipAdapter', __args__, opts=opts, typ=GetKmsKmipAdapterResult, package_ref=_utilities.get_package()).value

    return AwaitableGetKmsKmipAdapterResult(
        adapter_id=pulumi.get(__ret__, 'adapter_id'),
        created_at=pulumi.get(__ret__, 'created_at'),
        created_by=pulumi.get(__ret__, 'created_by'),
        description=pulumi.get(__ret__, 'description'),
        endpoint_type=pulumi.get(__ret__, 'endpoint_type'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        name=pulumi.get(__ret__, 'name'),
        profile=pulumi.get(__ret__, 'profile'),
        profile_data=pulumi.get(__ret__, 'profile_data'),
        updated_at=pulumi.get(__ret__, 'updated_at'),
        updated_by=pulumi.get(__ret__, 'updated_by'))
def get_kms_kmip_adapter_output(adapter_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                endpoint_type: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                                name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetKmsKmipAdapterResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['adapterId'] = adapter_id
    __args__['endpointType'] = endpoint_type
    __args__['id'] = id
    __args__['instanceId'] = instance_id
    __args__['name'] = name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getKmsKmipAdapter:getKmsKmipAdapter', __args__, opts=opts, typ=GetKmsKmipAdapterResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetKmsKmipAdapterResult(
        adapter_id=pulumi.get(__response__, 'adapter_id'),
        created_at=pulumi.get(__response__, 'created_at'),
        created_by=pulumi.get(__response__, 'created_by'),
        description=pulumi.get(__response__, 'description'),
        endpoint_type=pulumi.get(__response__, 'endpoint_type'),
        id=pulumi.get(__response__, 'id'),
        instance_id=pulumi.get(__response__, 'instance_id'),
        name=pulumi.get(__response__, 'name'),
        profile=pulumi.get(__response__, 'profile'),
        profile_data=pulumi.get(__response__, 'profile_data'),
        updated_at=pulumi.get(__response__, 'updated_at'),
        updated_by=pulumi.get(__response__, 'updated_by')))
