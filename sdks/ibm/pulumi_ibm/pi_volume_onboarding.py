# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['PiVolumeOnboardingArgs', 'PiVolumeOnboarding']

@pulumi.input_type
class PiVolumeOnboardingArgs:
    def __init__(__self__, *,
                 pi_cloud_instance_id: pulumi.Input[_builtins.str],
                 pi_onboarding_volumes: pulumi.Input[Sequence[pulumi.Input['PiVolumeOnboardingPiOnboardingVolumeArgs']]],
                 pi_description: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_volume_onboarding_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['PiVolumeOnboardingTimeoutsArgs']] = None):
        """
        The set of arguments for constructing a PiVolumeOnboarding resource.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[Sequence[pulumi.Input['PiVolumeOnboardingPiOnboardingVolumeArgs']]] pi_onboarding_volumes: List of onboarding volumes.
        :param pulumi.Input[_builtins.str] pi_description: Description of the volume onboarding operation
        """
        pulumi.set(__self__, "pi_cloud_instance_id", pi_cloud_instance_id)
        pulumi.set(__self__, "pi_onboarding_volumes", pi_onboarding_volumes)
        if pi_description is not None:
            pulumi.set(__self__, "pi_description", pi_description)
        if pi_volume_onboarding_id is not None:
            pulumi.set(__self__, "pi_volume_onboarding_id", pi_volume_onboarding_id)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)

    @_builtins.property
    @pulumi.getter(name="piCloudInstanceId")
    def pi_cloud_instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        The GUID of the service instance associated with an account.
        """
        return pulumi.get(self, "pi_cloud_instance_id")

    @pi_cloud_instance_id.setter
    def pi_cloud_instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "pi_cloud_instance_id", value)

    @_builtins.property
    @pulumi.getter(name="piOnboardingVolumes")
    def pi_onboarding_volumes(self) -> pulumi.Input[Sequence[pulumi.Input['PiVolumeOnboardingPiOnboardingVolumeArgs']]]:
        """
        List of onboarding volumes.
        """
        return pulumi.get(self, "pi_onboarding_volumes")

    @pi_onboarding_volumes.setter
    def pi_onboarding_volumes(self, value: pulumi.Input[Sequence[pulumi.Input['PiVolumeOnboardingPiOnboardingVolumeArgs']]]):
        pulumi.set(self, "pi_onboarding_volumes", value)

    @_builtins.property
    @pulumi.getter(name="piDescription")
    def pi_description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Description of the volume onboarding operation
        """
        return pulumi.get(self, "pi_description")

    @pi_description.setter
    def pi_description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_description", value)

    @_builtins.property
    @pulumi.getter(name="piVolumeOnboardingId")
    def pi_volume_onboarding_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "pi_volume_onboarding_id")

    @pi_volume_onboarding_id.setter
    def pi_volume_onboarding_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_volume_onboarding_id", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['PiVolumeOnboardingTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['PiVolumeOnboardingTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)


@pulumi.input_type
class _PiVolumeOnboardingState:
    def __init__(__self__, *,
                 create_time: Optional[pulumi.Input[_builtins.str]] = None,
                 input_volumes: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 onboarding_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_description: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_onboarding_volumes: Optional[pulumi.Input[Sequence[pulumi.Input['PiVolumeOnboardingPiOnboardingVolumeArgs']]]] = None,
                 pi_volume_onboarding_id: Optional[pulumi.Input[_builtins.str]] = None,
                 progress: Optional[pulumi.Input[_builtins.float]] = None,
                 results_onboarded_volumes: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 results_volume_onboarding_failures: Optional[pulumi.Input[Sequence[pulumi.Input['PiVolumeOnboardingResultsVolumeOnboardingFailureArgs']]]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['PiVolumeOnboardingTimeoutsArgs']] = None):
        """
        Input properties used for looking up and filtering PiVolumeOnboarding resources.
        :param pulumi.Input[_builtins.str] create_time: The create time of volume onboarding operation.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] input_volumes: List of volumes requested to be onboarded.
        :param pulumi.Input[_builtins.str] onboarding_id: The volume onboarding ID.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_description: Description of the volume onboarding operation
        :param pulumi.Input[Sequence[pulumi.Input['PiVolumeOnboardingPiOnboardingVolumeArgs']]] pi_onboarding_volumes: List of onboarding volumes.
        :param pulumi.Input[_builtins.float] progress: The progress of volume onboarding operation.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] results_onboarded_volumes: List of volumes which are onboarded successfully.
        :param pulumi.Input[Sequence[pulumi.Input['PiVolumeOnboardingResultsVolumeOnboardingFailureArgs']]] results_volume_onboarding_failures: The volume onboarding failure details.
        :param pulumi.Input[_builtins.str] status: The status of volume onboarding operation.
        """
        if create_time is not None:
            pulumi.set(__self__, "create_time", create_time)
        if input_volumes is not None:
            pulumi.set(__self__, "input_volumes", input_volumes)
        if onboarding_id is not None:
            pulumi.set(__self__, "onboarding_id", onboarding_id)
        if pi_cloud_instance_id is not None:
            pulumi.set(__self__, "pi_cloud_instance_id", pi_cloud_instance_id)
        if pi_description is not None:
            pulumi.set(__self__, "pi_description", pi_description)
        if pi_onboarding_volumes is not None:
            pulumi.set(__self__, "pi_onboarding_volumes", pi_onboarding_volumes)
        if pi_volume_onboarding_id is not None:
            pulumi.set(__self__, "pi_volume_onboarding_id", pi_volume_onboarding_id)
        if progress is not None:
            pulumi.set(__self__, "progress", progress)
        if results_onboarded_volumes is not None:
            pulumi.set(__self__, "results_onboarded_volumes", results_onboarded_volumes)
        if results_volume_onboarding_failures is not None:
            pulumi.set(__self__, "results_volume_onboarding_failures", results_volume_onboarding_failures)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)

    @_builtins.property
    @pulumi.getter(name="createTime")
    def create_time(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The create time of volume onboarding operation.
        """
        return pulumi.get(self, "create_time")

    @create_time.setter
    def create_time(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "create_time", value)

    @_builtins.property
    @pulumi.getter(name="inputVolumes")
    def input_volumes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        List of volumes requested to be onboarded.
        """
        return pulumi.get(self, "input_volumes")

    @input_volumes.setter
    def input_volumes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "input_volumes", value)

    @_builtins.property
    @pulumi.getter(name="onboardingId")
    def onboarding_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The volume onboarding ID.
        """
        return pulumi.get(self, "onboarding_id")

    @onboarding_id.setter
    def onboarding_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "onboarding_id", value)

    @_builtins.property
    @pulumi.getter(name="piCloudInstanceId")
    def pi_cloud_instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The GUID of the service instance associated with an account.
        """
        return pulumi.get(self, "pi_cloud_instance_id")

    @pi_cloud_instance_id.setter
    def pi_cloud_instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_cloud_instance_id", value)

    @_builtins.property
    @pulumi.getter(name="piDescription")
    def pi_description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Description of the volume onboarding operation
        """
        return pulumi.get(self, "pi_description")

    @pi_description.setter
    def pi_description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_description", value)

    @_builtins.property
    @pulumi.getter(name="piOnboardingVolumes")
    def pi_onboarding_volumes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PiVolumeOnboardingPiOnboardingVolumeArgs']]]]:
        """
        List of onboarding volumes.
        """
        return pulumi.get(self, "pi_onboarding_volumes")

    @pi_onboarding_volumes.setter
    def pi_onboarding_volumes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PiVolumeOnboardingPiOnboardingVolumeArgs']]]]):
        pulumi.set(self, "pi_onboarding_volumes", value)

    @_builtins.property
    @pulumi.getter(name="piVolumeOnboardingId")
    def pi_volume_onboarding_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "pi_volume_onboarding_id")

    @pi_volume_onboarding_id.setter
    def pi_volume_onboarding_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_volume_onboarding_id", value)

    @_builtins.property
    @pulumi.getter
    def progress(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        The progress of volume onboarding operation.
        """
        return pulumi.get(self, "progress")

    @progress.setter
    def progress(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "progress", value)

    @_builtins.property
    @pulumi.getter(name="resultsOnboardedVolumes")
    def results_onboarded_volumes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        List of volumes which are onboarded successfully.
        """
        return pulumi.get(self, "results_onboarded_volumes")

    @results_onboarded_volumes.setter
    def results_onboarded_volumes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "results_onboarded_volumes", value)

    @_builtins.property
    @pulumi.getter(name="resultsVolumeOnboardingFailures")
    def results_volume_onboarding_failures(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PiVolumeOnboardingResultsVolumeOnboardingFailureArgs']]]]:
        """
        The volume onboarding failure details.
        """
        return pulumi.get(self, "results_volume_onboarding_failures")

    @results_volume_onboarding_failures.setter
    def results_volume_onboarding_failures(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PiVolumeOnboardingResultsVolumeOnboardingFailureArgs']]]]):
        pulumi.set(self, "results_volume_onboarding_failures", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status of volume onboarding operation.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['PiVolumeOnboardingTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['PiVolumeOnboardingTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)


@pulumi.type_token("ibm:index/piVolumeOnboarding:PiVolumeOnboarding")
class PiVolumeOnboarding(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_description: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_onboarding_volumes: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PiVolumeOnboardingPiOnboardingVolumeArgs', 'PiVolumeOnboardingPiOnboardingVolumeArgsDict']]]]] = None,
                 pi_volume_onboarding_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input[Union['PiVolumeOnboardingTimeoutsArgs', 'PiVolumeOnboardingTimeoutsArgsDict']]] = None,
                 __props__=None):
        """
        Create a PiVolumeOnboarding resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_description: Description of the volume onboarding operation
        :param pulumi.Input[Sequence[pulumi.Input[Union['PiVolumeOnboardingPiOnboardingVolumeArgs', 'PiVolumeOnboardingPiOnboardingVolumeArgsDict']]]] pi_onboarding_volumes: List of onboarding volumes.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PiVolumeOnboardingArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a PiVolumeOnboarding resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param PiVolumeOnboardingArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PiVolumeOnboardingArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_description: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_onboarding_volumes: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PiVolumeOnboardingPiOnboardingVolumeArgs', 'PiVolumeOnboardingPiOnboardingVolumeArgsDict']]]]] = None,
                 pi_volume_onboarding_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input[Union['PiVolumeOnboardingTimeoutsArgs', 'PiVolumeOnboardingTimeoutsArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PiVolumeOnboardingArgs.__new__(PiVolumeOnboardingArgs)

            if pi_cloud_instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'pi_cloud_instance_id'")
            __props__.__dict__["pi_cloud_instance_id"] = pi_cloud_instance_id
            __props__.__dict__["pi_description"] = pi_description
            if pi_onboarding_volumes is None and not opts.urn:
                raise TypeError("Missing required property 'pi_onboarding_volumes'")
            __props__.__dict__["pi_onboarding_volumes"] = pi_onboarding_volumes
            __props__.__dict__["pi_volume_onboarding_id"] = pi_volume_onboarding_id
            __props__.__dict__["timeouts"] = timeouts
            __props__.__dict__["create_time"] = None
            __props__.__dict__["input_volumes"] = None
            __props__.__dict__["onboarding_id"] = None
            __props__.__dict__["progress"] = None
            __props__.__dict__["results_onboarded_volumes"] = None
            __props__.__dict__["results_volume_onboarding_failures"] = None
            __props__.__dict__["status"] = None
        super(PiVolumeOnboarding, __self__).__init__(
            'ibm:index/piVolumeOnboarding:PiVolumeOnboarding',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            create_time: Optional[pulumi.Input[_builtins.str]] = None,
            input_volumes: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            onboarding_id: Optional[pulumi.Input[_builtins.str]] = None,
            pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            pi_description: Optional[pulumi.Input[_builtins.str]] = None,
            pi_onboarding_volumes: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PiVolumeOnboardingPiOnboardingVolumeArgs', 'PiVolumeOnboardingPiOnboardingVolumeArgsDict']]]]] = None,
            pi_volume_onboarding_id: Optional[pulumi.Input[_builtins.str]] = None,
            progress: Optional[pulumi.Input[_builtins.float]] = None,
            results_onboarded_volumes: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            results_volume_onboarding_failures: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PiVolumeOnboardingResultsVolumeOnboardingFailureArgs', 'PiVolumeOnboardingResultsVolumeOnboardingFailureArgsDict']]]]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            timeouts: Optional[pulumi.Input[Union['PiVolumeOnboardingTimeoutsArgs', 'PiVolumeOnboardingTimeoutsArgsDict']]] = None) -> 'PiVolumeOnboarding':
        """
        Get an existing PiVolumeOnboarding resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] create_time: The create time of volume onboarding operation.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] input_volumes: List of volumes requested to be onboarded.
        :param pulumi.Input[_builtins.str] onboarding_id: The volume onboarding ID.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_description: Description of the volume onboarding operation
        :param pulumi.Input[Sequence[pulumi.Input[Union['PiVolumeOnboardingPiOnboardingVolumeArgs', 'PiVolumeOnboardingPiOnboardingVolumeArgsDict']]]] pi_onboarding_volumes: List of onboarding volumes.
        :param pulumi.Input[_builtins.float] progress: The progress of volume onboarding operation.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] results_onboarded_volumes: List of volumes which are onboarded successfully.
        :param pulumi.Input[Sequence[pulumi.Input[Union['PiVolumeOnboardingResultsVolumeOnboardingFailureArgs', 'PiVolumeOnboardingResultsVolumeOnboardingFailureArgsDict']]]] results_volume_onboarding_failures: The volume onboarding failure details.
        :param pulumi.Input[_builtins.str] status: The status of volume onboarding operation.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PiVolumeOnboardingState.__new__(_PiVolumeOnboardingState)

        __props__.__dict__["create_time"] = create_time
        __props__.__dict__["input_volumes"] = input_volumes
        __props__.__dict__["onboarding_id"] = onboarding_id
        __props__.__dict__["pi_cloud_instance_id"] = pi_cloud_instance_id
        __props__.__dict__["pi_description"] = pi_description
        __props__.__dict__["pi_onboarding_volumes"] = pi_onboarding_volumes
        __props__.__dict__["pi_volume_onboarding_id"] = pi_volume_onboarding_id
        __props__.__dict__["progress"] = progress
        __props__.__dict__["results_onboarded_volumes"] = results_onboarded_volumes
        __props__.__dict__["results_volume_onboarding_failures"] = results_volume_onboarding_failures
        __props__.__dict__["status"] = status
        __props__.__dict__["timeouts"] = timeouts
        return PiVolumeOnboarding(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createTime")
    def create_time(self) -> pulumi.Output[_builtins.str]:
        """
        The create time of volume onboarding operation.
        """
        return pulumi.get(self, "create_time")

    @_builtins.property
    @pulumi.getter(name="inputVolumes")
    def input_volumes(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        List of volumes requested to be onboarded.
        """
        return pulumi.get(self, "input_volumes")

    @_builtins.property
    @pulumi.getter(name="onboardingId")
    def onboarding_id(self) -> pulumi.Output[_builtins.str]:
        """
        The volume onboarding ID.
        """
        return pulumi.get(self, "onboarding_id")

    @_builtins.property
    @pulumi.getter(name="piCloudInstanceId")
    def pi_cloud_instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        The GUID of the service instance associated with an account.
        """
        return pulumi.get(self, "pi_cloud_instance_id")

    @_builtins.property
    @pulumi.getter(name="piDescription")
    def pi_description(self) -> pulumi.Output[_builtins.str]:
        """
        Description of the volume onboarding operation
        """
        return pulumi.get(self, "pi_description")

    @_builtins.property
    @pulumi.getter(name="piOnboardingVolumes")
    def pi_onboarding_volumes(self) -> pulumi.Output[Sequence['outputs.PiVolumeOnboardingPiOnboardingVolume']]:
        """
        List of onboarding volumes.
        """
        return pulumi.get(self, "pi_onboarding_volumes")

    @_builtins.property
    @pulumi.getter(name="piVolumeOnboardingId")
    def pi_volume_onboarding_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "pi_volume_onboarding_id")

    @_builtins.property
    @pulumi.getter
    def progress(self) -> pulumi.Output[_builtins.float]:
        """
        The progress of volume onboarding operation.
        """
        return pulumi.get(self, "progress")

    @_builtins.property
    @pulumi.getter(name="resultsOnboardedVolumes")
    def results_onboarded_volumes(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        List of volumes which are onboarded successfully.
        """
        return pulumi.get(self, "results_onboarded_volumes")

    @_builtins.property
    @pulumi.getter(name="resultsVolumeOnboardingFailures")
    def results_volume_onboarding_failures(self) -> pulumi.Output[Sequence['outputs.PiVolumeOnboardingResultsVolumeOnboardingFailure']]:
        """
        The volume onboarding failure details.
        """
        return pulumi.get(self, "results_volume_onboarding_failures")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The status of volume onboarding operation.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> pulumi.Output[Optional['outputs.PiVolumeOnboardingTimeouts']]:
        return pulumi.get(self, "timeouts")

