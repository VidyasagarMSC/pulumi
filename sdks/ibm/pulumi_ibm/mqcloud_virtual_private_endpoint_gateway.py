# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['MqcloudVirtualPrivateEndpointGatewayArgs', 'MqcloudVirtualPrivateEndpointGateway']

@pulumi.input_type
class MqcloudVirtualPrivateEndpointGatewayArgs:
    def __init__(__self__, *,
                 service_instance_guid: pulumi.Input[_builtins.str],
                 target_crn: pulumi.Input[_builtins.str],
                 mqcloud_virtual_private_endpoint_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 trusted_profile: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a MqcloudVirtualPrivateEndpointGateway resource.
        :param pulumi.Input[_builtins.str] service_instance_guid: The GUID that uniquely identifies the MQaaS service instance.
        :param pulumi.Input[_builtins.str] target_crn: The CRN of the reserved capacity service instance the user is trying to connect to.
        :param pulumi.Input[_builtins.str] name: The name of the virtual private endpoint gateway, created by the user.
        :param pulumi.Input[_builtins.str] trusted_profile: The CRN of the trusted profile to assume for this request.
        """
        pulumi.set(__self__, "service_instance_guid", service_instance_guid)
        pulumi.set(__self__, "target_crn", target_crn)
        if mqcloud_virtual_private_endpoint_gateway_id is not None:
            pulumi.set(__self__, "mqcloud_virtual_private_endpoint_gateway_id", mqcloud_virtual_private_endpoint_gateway_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if trusted_profile is not None:
            pulumi.set(__self__, "trusted_profile", trusted_profile)

    @_builtins.property
    @pulumi.getter(name="serviceInstanceGuid")
    def service_instance_guid(self) -> pulumi.Input[_builtins.str]:
        """
        The GUID that uniquely identifies the MQaaS service instance.
        """
        return pulumi.get(self, "service_instance_guid")

    @service_instance_guid.setter
    def service_instance_guid(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "service_instance_guid", value)

    @_builtins.property
    @pulumi.getter(name="targetCrn")
    def target_crn(self) -> pulumi.Input[_builtins.str]:
        """
        The CRN of the reserved capacity service instance the user is trying to connect to.
        """
        return pulumi.get(self, "target_crn")

    @target_crn.setter
    def target_crn(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "target_crn", value)

    @_builtins.property
    @pulumi.getter(name="mqcloudVirtualPrivateEndpointGatewayId")
    def mqcloud_virtual_private_endpoint_gateway_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "mqcloud_virtual_private_endpoint_gateway_id")

    @mqcloud_virtual_private_endpoint_gateway_id.setter
    def mqcloud_virtual_private_endpoint_gateway_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "mqcloud_virtual_private_endpoint_gateway_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the virtual private endpoint gateway, created by the user.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="trustedProfile")
    def trusted_profile(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The CRN of the trusted profile to assume for this request.
        """
        return pulumi.get(self, "trusted_profile")

    @trusted_profile.setter
    def trusted_profile(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "trusted_profile", value)


@pulumi.input_type
class _MqcloudVirtualPrivateEndpointGatewayState:
    def __init__(__self__, *,
                 href: Optional[pulumi.Input[_builtins.str]] = None,
                 mqcloud_virtual_private_endpoint_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 service_instance_guid: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 target_crn: Optional[pulumi.Input[_builtins.str]] = None,
                 trusted_profile: Optional[pulumi.Input[_builtins.str]] = None,
                 virtual_private_endpoint_gateway_guid: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering MqcloudVirtualPrivateEndpointGateway resources.
        :param pulumi.Input[_builtins.str] href: URL for the details of the virtual private endpoint gateway.
        :param pulumi.Input[_builtins.str] name: The name of the virtual private endpoint gateway, created by the user.
        :param pulumi.Input[_builtins.str] service_instance_guid: The GUID that uniquely identifies the MQaaS service instance.
        :param pulumi.Input[_builtins.str] status: The lifecycle state of this virtual privage endpoint.
        :param pulumi.Input[_builtins.str] target_crn: The CRN of the reserved capacity service instance the user is trying to connect to.
        :param pulumi.Input[_builtins.str] trusted_profile: The CRN of the trusted profile to assume for this request.
        :param pulumi.Input[_builtins.str] virtual_private_endpoint_gateway_guid: The ID of the virtual private endpoint gateway which was allocated on creation.
        """
        if href is not None:
            pulumi.set(__self__, "href", href)
        if mqcloud_virtual_private_endpoint_gateway_id is not None:
            pulumi.set(__self__, "mqcloud_virtual_private_endpoint_gateway_id", mqcloud_virtual_private_endpoint_gateway_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if service_instance_guid is not None:
            pulumi.set(__self__, "service_instance_guid", service_instance_guid)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if target_crn is not None:
            pulumi.set(__self__, "target_crn", target_crn)
        if trusted_profile is not None:
            pulumi.set(__self__, "trusted_profile", trusted_profile)
        if virtual_private_endpoint_gateway_guid is not None:
            pulumi.set(__self__, "virtual_private_endpoint_gateway_guid", virtual_private_endpoint_gateway_guid)

    @_builtins.property
    @pulumi.getter
    def href(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        URL for the details of the virtual private endpoint gateway.
        """
        return pulumi.get(self, "href")

    @href.setter
    def href(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "href", value)

    @_builtins.property
    @pulumi.getter(name="mqcloudVirtualPrivateEndpointGatewayId")
    def mqcloud_virtual_private_endpoint_gateway_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "mqcloud_virtual_private_endpoint_gateway_id")

    @mqcloud_virtual_private_endpoint_gateway_id.setter
    def mqcloud_virtual_private_endpoint_gateway_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "mqcloud_virtual_private_endpoint_gateway_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the virtual private endpoint gateway, created by the user.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="serviceInstanceGuid")
    def service_instance_guid(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The GUID that uniquely identifies the MQaaS service instance.
        """
        return pulumi.get(self, "service_instance_guid")

    @service_instance_guid.setter
    def service_instance_guid(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "service_instance_guid", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The lifecycle state of this virtual privage endpoint.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="targetCrn")
    def target_crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The CRN of the reserved capacity service instance the user is trying to connect to.
        """
        return pulumi.get(self, "target_crn")

    @target_crn.setter
    def target_crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_crn", value)

    @_builtins.property
    @pulumi.getter(name="trustedProfile")
    def trusted_profile(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The CRN of the trusted profile to assume for this request.
        """
        return pulumi.get(self, "trusted_profile")

    @trusted_profile.setter
    def trusted_profile(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "trusted_profile", value)

    @_builtins.property
    @pulumi.getter(name="virtualPrivateEndpointGatewayGuid")
    def virtual_private_endpoint_gateway_guid(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the virtual private endpoint gateway which was allocated on creation.
        """
        return pulumi.get(self, "virtual_private_endpoint_gateway_guid")

    @virtual_private_endpoint_gateway_guid.setter
    def virtual_private_endpoint_gateway_guid(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "virtual_private_endpoint_gateway_guid", value)


@pulumi.type_token("ibm:index/mqcloudVirtualPrivateEndpointGateway:MqcloudVirtualPrivateEndpointGateway")
class MqcloudVirtualPrivateEndpointGateway(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 mqcloud_virtual_private_endpoint_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 service_instance_guid: Optional[pulumi.Input[_builtins.str]] = None,
                 target_crn: Optional[pulumi.Input[_builtins.str]] = None,
                 trusted_profile: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a MqcloudVirtualPrivateEndpointGateway resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] name: The name of the virtual private endpoint gateway, created by the user.
        :param pulumi.Input[_builtins.str] service_instance_guid: The GUID that uniquely identifies the MQaaS service instance.
        :param pulumi.Input[_builtins.str] target_crn: The CRN of the reserved capacity service instance the user is trying to connect to.
        :param pulumi.Input[_builtins.str] trusted_profile: The CRN of the trusted profile to assume for this request.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: MqcloudVirtualPrivateEndpointGatewayArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a MqcloudVirtualPrivateEndpointGateway resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param MqcloudVirtualPrivateEndpointGatewayArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(MqcloudVirtualPrivateEndpointGatewayArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 mqcloud_virtual_private_endpoint_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 service_instance_guid: Optional[pulumi.Input[_builtins.str]] = None,
                 target_crn: Optional[pulumi.Input[_builtins.str]] = None,
                 trusted_profile: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = MqcloudVirtualPrivateEndpointGatewayArgs.__new__(MqcloudVirtualPrivateEndpointGatewayArgs)

            __props__.__dict__["mqcloud_virtual_private_endpoint_gateway_id"] = mqcloud_virtual_private_endpoint_gateway_id
            __props__.__dict__["name"] = name
            if service_instance_guid is None and not opts.urn:
                raise TypeError("Missing required property 'service_instance_guid'")
            __props__.__dict__["service_instance_guid"] = service_instance_guid
            if target_crn is None and not opts.urn:
                raise TypeError("Missing required property 'target_crn'")
            __props__.__dict__["target_crn"] = target_crn
            __props__.__dict__["trusted_profile"] = trusted_profile
            __props__.__dict__["href"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["virtual_private_endpoint_gateway_guid"] = None
        super(MqcloudVirtualPrivateEndpointGateway, __self__).__init__(
            'ibm:index/mqcloudVirtualPrivateEndpointGateway:MqcloudVirtualPrivateEndpointGateway',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            href: Optional[pulumi.Input[_builtins.str]] = None,
            mqcloud_virtual_private_endpoint_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            service_instance_guid: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            target_crn: Optional[pulumi.Input[_builtins.str]] = None,
            trusted_profile: Optional[pulumi.Input[_builtins.str]] = None,
            virtual_private_endpoint_gateway_guid: Optional[pulumi.Input[_builtins.str]] = None) -> 'MqcloudVirtualPrivateEndpointGateway':
        """
        Get an existing MqcloudVirtualPrivateEndpointGateway resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] href: URL for the details of the virtual private endpoint gateway.
        :param pulumi.Input[_builtins.str] name: The name of the virtual private endpoint gateway, created by the user.
        :param pulumi.Input[_builtins.str] service_instance_guid: The GUID that uniquely identifies the MQaaS service instance.
        :param pulumi.Input[_builtins.str] status: The lifecycle state of this virtual privage endpoint.
        :param pulumi.Input[_builtins.str] target_crn: The CRN of the reserved capacity service instance the user is trying to connect to.
        :param pulumi.Input[_builtins.str] trusted_profile: The CRN of the trusted profile to assume for this request.
        :param pulumi.Input[_builtins.str] virtual_private_endpoint_gateway_guid: The ID of the virtual private endpoint gateway which was allocated on creation.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _MqcloudVirtualPrivateEndpointGatewayState.__new__(_MqcloudVirtualPrivateEndpointGatewayState)

        __props__.__dict__["href"] = href
        __props__.__dict__["mqcloud_virtual_private_endpoint_gateway_id"] = mqcloud_virtual_private_endpoint_gateway_id
        __props__.__dict__["name"] = name
        __props__.__dict__["service_instance_guid"] = service_instance_guid
        __props__.__dict__["status"] = status
        __props__.__dict__["target_crn"] = target_crn
        __props__.__dict__["trusted_profile"] = trusted_profile
        __props__.__dict__["virtual_private_endpoint_gateway_guid"] = virtual_private_endpoint_gateway_guid
        return MqcloudVirtualPrivateEndpointGateway(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def href(self) -> pulumi.Output[_builtins.str]:
        """
        URL for the details of the virtual private endpoint gateway.
        """
        return pulumi.get(self, "href")

    @_builtins.property
    @pulumi.getter(name="mqcloudVirtualPrivateEndpointGatewayId")
    def mqcloud_virtual_private_endpoint_gateway_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "mqcloud_virtual_private_endpoint_gateway_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the virtual private endpoint gateway, created by the user.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="serviceInstanceGuid")
    def service_instance_guid(self) -> pulumi.Output[_builtins.str]:
        """
        The GUID that uniquely identifies the MQaaS service instance.
        """
        return pulumi.get(self, "service_instance_guid")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The lifecycle state of this virtual privage endpoint.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="targetCrn")
    def target_crn(self) -> pulumi.Output[_builtins.str]:
        """
        The CRN of the reserved capacity service instance the user is trying to connect to.
        """
        return pulumi.get(self, "target_crn")

    @_builtins.property
    @pulumi.getter(name="trustedProfile")
    def trusted_profile(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The CRN of the trusted profile to assume for this request.
        """
        return pulumi.get(self, "trusted_profile")

    @_builtins.property
    @pulumi.getter(name="virtualPrivateEndpointGatewayGuid")
    def virtual_private_endpoint_gateway_guid(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the virtual private endpoint gateway which was allocated on creation.
        """
        return pulumi.get(self, "virtual_private_endpoint_gateway_guid")

