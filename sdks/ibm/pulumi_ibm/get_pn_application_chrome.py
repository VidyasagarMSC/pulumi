# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetPnApplicationChromeResult',
    'AwaitableGetPnApplicationChromeResult',
    'get_pn_application_chrome',
    'get_pn_application_chrome_output',
]

@pulumi.output_type
class GetPnApplicationChromeResult:
    """
    A collection of values returned by getPnApplicationChrome.
    """
    def __init__(__self__, guid=None, id=None, server_key=None, web_site_url=None):
        if guid and not isinstance(guid, str):
            raise TypeError("Expected argument 'guid' to be a str")
        pulumi.set(__self__, "guid", guid)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if server_key and not isinstance(server_key, str):
            raise TypeError("Expected argument 'server_key' to be a str")
        pulumi.set(__self__, "server_key", server_key)
        if web_site_url and not isinstance(web_site_url, str):
            raise TypeError("Expected argument 'web_site_url' to be a str")
        pulumi.set(__self__, "web_site_url", web_site_url)

    @_builtins.property
    @pulumi.getter
    def guid(self) -> _builtins.str:
        return pulumi.get(self, "guid")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="serverKey")
    def server_key(self) -> _builtins.str:
        return pulumi.get(self, "server_key")

    @_builtins.property
    @pulumi.getter(name="webSiteUrl")
    def web_site_url(self) -> _builtins.str:
        return pulumi.get(self, "web_site_url")


class AwaitableGetPnApplicationChromeResult(GetPnApplicationChromeResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPnApplicationChromeResult(
            guid=self.guid,
            id=self.id,
            server_key=self.server_key,
            web_site_url=self.web_site_url)


def get_pn_application_chrome(guid: Optional[_builtins.str] = None,
                              id: Optional[_builtins.str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPnApplicationChromeResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['guid'] = guid
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getPnApplicationChrome:getPnApplicationChrome', __args__, opts=opts, typ=GetPnApplicationChromeResult, package_ref=_utilities.get_package()).value

    return AwaitableGetPnApplicationChromeResult(
        guid=pulumi.get(__ret__, 'guid'),
        id=pulumi.get(__ret__, 'id'),
        server_key=pulumi.get(__ret__, 'server_key'),
        web_site_url=pulumi.get(__ret__, 'web_site_url'))
def get_pn_application_chrome_output(guid: Optional[pulumi.Input[_builtins.str]] = None,
                                     id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetPnApplicationChromeResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['guid'] = guid
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getPnApplicationChrome:getPnApplicationChrome', __args__, opts=opts, typ=GetPnApplicationChromeResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetPnApplicationChromeResult(
        guid=pulumi.get(__response__, 'guid'),
        id=pulumi.get(__response__, 'id'),
        server_key=pulumi.get(__response__, 'server_key'),
        web_site_url=pulumi.get(__response__, 'web_site_url')))
