# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SchematicsJobArgs', 'SchematicsJob']

@pulumi.input_type
class SchematicsJobArgs:
    def __init__(__self__, *,
                 command_name: pulumi.Input[_builtins.str],
                 command_object: pulumi.Input[_builtins.str],
                 command_object_id: pulumi.Input[_builtins.str],
                 bastion: Optional[pulumi.Input['SchematicsJobBastionArgs']] = None,
                 command_options: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 command_parameter: Optional[pulumi.Input[_builtins.str]] = None,
                 datas: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobDataArgs']]]] = None,
                 job_env_settings: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobEnvSettingArgs']]]] = None,
                 job_inputs: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobInputArgs']]]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 log_summaries: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobLogSummaryArgs']]]] = None,
                 schematics_job_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a SchematicsJob resource.
        :param pulumi.Input[_builtins.str] command_name: Schematics job command name.
        :param pulumi.Input[_builtins.str] command_object: Name of the Schematics automation resource.
        :param pulumi.Input[_builtins.str] command_object_id: Job command object id (workspace-id, action-id).
        :param pulumi.Input['SchematicsJobBastionArgs'] bastion: Describes a bastion resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] command_options: Command line options for the command.
        :param pulumi.Input[_builtins.str] command_parameter: Schematics job command parameter (playbook-name).
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsJobDataArgs']]] datas: Job data.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobEnvSettingArgs']]] job_env_settings: Environment variables used by the Job while performing Action or Workspace.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobInputArgs']]] job_inputs: Job inputs used by Action or Workspace.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsJobLogSummaryArgs']]] log_summaries: Job log summary record.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: User defined tags, while running the job.
        """
        pulumi.set(__self__, "command_name", command_name)
        pulumi.set(__self__, "command_object", command_object)
        pulumi.set(__self__, "command_object_id", command_object_id)
        if bastion is not None:
            pulumi.set(__self__, "bastion", bastion)
        if command_options is not None:
            pulumi.set(__self__, "command_options", command_options)
        if command_parameter is not None:
            pulumi.set(__self__, "command_parameter", command_parameter)
        if datas is not None:
            pulumi.set(__self__, "datas", datas)
        if job_env_settings is not None:
            pulumi.set(__self__, "job_env_settings", job_env_settings)
        if job_inputs is not None:
            pulumi.set(__self__, "job_inputs", job_inputs)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if log_summaries is not None:
            pulumi.set(__self__, "log_summaries", log_summaries)
        if schematics_job_id is not None:
            pulumi.set(__self__, "schematics_job_id", schematics_job_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="commandName")
    def command_name(self) -> pulumi.Input[_builtins.str]:
        """
        Schematics job command name.
        """
        return pulumi.get(self, "command_name")

    @command_name.setter
    def command_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "command_name", value)

    @_builtins.property
    @pulumi.getter(name="commandObject")
    def command_object(self) -> pulumi.Input[_builtins.str]:
        """
        Name of the Schematics automation resource.
        """
        return pulumi.get(self, "command_object")

    @command_object.setter
    def command_object(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "command_object", value)

    @_builtins.property
    @pulumi.getter(name="commandObjectId")
    def command_object_id(self) -> pulumi.Input[_builtins.str]:
        """
        Job command object id (workspace-id, action-id).
        """
        return pulumi.get(self, "command_object_id")

    @command_object_id.setter
    def command_object_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "command_object_id", value)

    @_builtins.property
    @pulumi.getter
    def bastion(self) -> Optional[pulumi.Input['SchematicsJobBastionArgs']]:
        """
        Describes a bastion resource.
        """
        return pulumi.get(self, "bastion")

    @bastion.setter
    def bastion(self, value: Optional[pulumi.Input['SchematicsJobBastionArgs']]):
        pulumi.set(self, "bastion", value)

    @_builtins.property
    @pulumi.getter(name="commandOptions")
    def command_options(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Command line options for the command.
        """
        return pulumi.get(self, "command_options")

    @command_options.setter
    def command_options(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "command_options", value)

    @_builtins.property
    @pulumi.getter(name="commandParameter")
    def command_parameter(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Schematics job command parameter (playbook-name).
        """
        return pulumi.get(self, "command_parameter")

    @command_parameter.setter
    def command_parameter(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "command_parameter", value)

    @_builtins.property
    @pulumi.getter
    def datas(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobDataArgs']]]]:
        """
        Job data.
        """
        return pulumi.get(self, "datas")

    @datas.setter
    def datas(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobDataArgs']]]]):
        pulumi.set(self, "datas", value)

    @_builtins.property
    @pulumi.getter(name="jobEnvSettings")
    def job_env_settings(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobEnvSettingArgs']]]]:
        """
        Environment variables used by the Job while performing Action or Workspace.
        """
        return pulumi.get(self, "job_env_settings")

    @job_env_settings.setter
    def job_env_settings(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobEnvSettingArgs']]]]):
        pulumi.set(self, "job_env_settings", value)

    @_builtins.property
    @pulumi.getter(name="jobInputs")
    def job_inputs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobInputArgs']]]]:
        """
        Job inputs used by Action or Workspace.
        """
        return pulumi.get(self, "job_inputs")

    @job_inputs.setter
    def job_inputs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobInputArgs']]]]):
        pulumi.set(self, "job_inputs", value)

    @_builtins.property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "location", value)

    @_builtins.property
    @pulumi.getter(name="logSummaries")
    def log_summaries(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobLogSummaryArgs']]]]:
        """
        Job log summary record.
        """
        return pulumi.get(self, "log_summaries")

    @log_summaries.setter
    def log_summaries(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobLogSummaryArgs']]]]):
        pulumi.set(self, "log_summaries", value)

    @_builtins.property
    @pulumi.getter(name="schematicsJobId")
    def schematics_job_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "schematics_job_id")

    @schematics_job_id.setter
    def schematics_job_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "schematics_job_id", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        User defined tags, while running the job.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _SchematicsJobState:
    def __init__(__self__, *,
                 bastion: Optional[pulumi.Input['SchematicsJobBastionArgs']] = None,
                 command_name: Optional[pulumi.Input[_builtins.str]] = None,
                 command_object: Optional[pulumi.Input[_builtins.str]] = None,
                 command_object_id: Optional[pulumi.Input[_builtins.str]] = None,
                 command_options: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 command_parameter: Optional[pulumi.Input[_builtins.str]] = None,
                 datas: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobDataArgs']]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 duration: Optional[pulumi.Input[_builtins.str]] = None,
                 end_at: Optional[pulumi.Input[_builtins.str]] = None,
                 job_env_settings: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobEnvSettingArgs']]]] = None,
                 job_inputs: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobInputArgs']]]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 log_store_url: Optional[pulumi.Input[_builtins.str]] = None,
                 log_summaries: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobLogSummaryArgs']]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 results_url: Optional[pulumi.Input[_builtins.str]] = None,
                 schematics_job_id: Optional[pulumi.Input[_builtins.str]] = None,
                 start_at: Optional[pulumi.Input[_builtins.str]] = None,
                 state_store_url: Optional[pulumi.Input[_builtins.str]] = None,
                 statuses: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobStatusArgs']]]] = None,
                 submitted_at: Optional[pulumi.Input[_builtins.str]] = None,
                 submitted_by: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering SchematicsJob resources.
        :param pulumi.Input['SchematicsJobBastionArgs'] bastion: Describes a bastion resource.
        :param pulumi.Input[_builtins.str] command_name: Schematics job command name.
        :param pulumi.Input[_builtins.str] command_object: Name of the Schematics automation resource.
        :param pulumi.Input[_builtins.str] command_object_id: Job command object id (workspace-id, action-id).
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] command_options: Command line options for the command.
        :param pulumi.Input[_builtins.str] command_parameter: Schematics job command parameter (playbook-name).
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsJobDataArgs']]] datas: Job data.
        :param pulumi.Input[_builtins.str] description: The description of your job is derived from the related action or workspace. The description can be up to 2048
               characters long in size.
        :param pulumi.Input[_builtins.str] duration: Duration of job execution; example 40 sec.
        :param pulumi.Input[_builtins.str] end_at: Job end time.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobEnvSettingArgs']]] job_env_settings: Environment variables used by the Job while performing Action or Workspace.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobInputArgs']]] job_inputs: Job inputs used by Action or Workspace.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] log_store_url: Job log store URL.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsJobLogSummaryArgs']]] log_summaries: Job log summary record.
        :param pulumi.Input[_builtins.str] name: Job name, uniquely derived from the related Workspace or Action.
        :param pulumi.Input[_builtins.str] resource_group: Resource-group name derived from the related Workspace or Action.
        :param pulumi.Input[_builtins.str] results_url: Job results store URL.
        :param pulumi.Input[_builtins.str] start_at: Job start time.
        :param pulumi.Input[_builtins.str] state_store_url: Job state store URL.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsJobStatusArgs']]] statuses: Job Status.
        :param pulumi.Input[_builtins.str] submitted_at: Job submission time.
        :param pulumi.Input[_builtins.str] submitted_by: Email address of user who submitted the job.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: User defined tags, while running the job.
        :param pulumi.Input[_builtins.str] updated_at: Job status updation timestamp.
        """
        if bastion is not None:
            pulumi.set(__self__, "bastion", bastion)
        if command_name is not None:
            pulumi.set(__self__, "command_name", command_name)
        if command_object is not None:
            pulumi.set(__self__, "command_object", command_object)
        if command_object_id is not None:
            pulumi.set(__self__, "command_object_id", command_object_id)
        if command_options is not None:
            pulumi.set(__self__, "command_options", command_options)
        if command_parameter is not None:
            pulumi.set(__self__, "command_parameter", command_parameter)
        if datas is not None:
            pulumi.set(__self__, "datas", datas)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if duration is not None:
            pulumi.set(__self__, "duration", duration)
        if end_at is not None:
            pulumi.set(__self__, "end_at", end_at)
        if job_env_settings is not None:
            pulumi.set(__self__, "job_env_settings", job_env_settings)
        if job_inputs is not None:
            pulumi.set(__self__, "job_inputs", job_inputs)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if log_store_url is not None:
            pulumi.set(__self__, "log_store_url", log_store_url)
        if log_summaries is not None:
            pulumi.set(__self__, "log_summaries", log_summaries)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if resource_group is not None:
            pulumi.set(__self__, "resource_group", resource_group)
        if results_url is not None:
            pulumi.set(__self__, "results_url", results_url)
        if schematics_job_id is not None:
            pulumi.set(__self__, "schematics_job_id", schematics_job_id)
        if start_at is not None:
            pulumi.set(__self__, "start_at", start_at)
        if state_store_url is not None:
            pulumi.set(__self__, "state_store_url", state_store_url)
        if statuses is not None:
            pulumi.set(__self__, "statuses", statuses)
        if submitted_at is not None:
            pulumi.set(__self__, "submitted_at", submitted_at)
        if submitted_by is not None:
            pulumi.set(__self__, "submitted_by", submitted_by)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter
    def bastion(self) -> Optional[pulumi.Input['SchematicsJobBastionArgs']]:
        """
        Describes a bastion resource.
        """
        return pulumi.get(self, "bastion")

    @bastion.setter
    def bastion(self, value: Optional[pulumi.Input['SchematicsJobBastionArgs']]):
        pulumi.set(self, "bastion", value)

    @_builtins.property
    @pulumi.getter(name="commandName")
    def command_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Schematics job command name.
        """
        return pulumi.get(self, "command_name")

    @command_name.setter
    def command_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "command_name", value)

    @_builtins.property
    @pulumi.getter(name="commandObject")
    def command_object(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Name of the Schematics automation resource.
        """
        return pulumi.get(self, "command_object")

    @command_object.setter
    def command_object(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "command_object", value)

    @_builtins.property
    @pulumi.getter(name="commandObjectId")
    def command_object_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Job command object id (workspace-id, action-id).
        """
        return pulumi.get(self, "command_object_id")

    @command_object_id.setter
    def command_object_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "command_object_id", value)

    @_builtins.property
    @pulumi.getter(name="commandOptions")
    def command_options(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Command line options for the command.
        """
        return pulumi.get(self, "command_options")

    @command_options.setter
    def command_options(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "command_options", value)

    @_builtins.property
    @pulumi.getter(name="commandParameter")
    def command_parameter(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Schematics job command parameter (playbook-name).
        """
        return pulumi.get(self, "command_parameter")

    @command_parameter.setter
    def command_parameter(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "command_parameter", value)

    @_builtins.property
    @pulumi.getter
    def datas(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobDataArgs']]]]:
        """
        Job data.
        """
        return pulumi.get(self, "datas")

    @datas.setter
    def datas(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobDataArgs']]]]):
        pulumi.set(self, "datas", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of your job is derived from the related action or workspace. The description can be up to 2048
        characters long in size.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Duration of job execution; example 40 sec.
        """
        return pulumi.get(self, "duration")

    @duration.setter
    def duration(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "duration", value)

    @_builtins.property
    @pulumi.getter(name="endAt")
    def end_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Job end time.
        """
        return pulumi.get(self, "end_at")

    @end_at.setter
    def end_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "end_at", value)

    @_builtins.property
    @pulumi.getter(name="jobEnvSettings")
    def job_env_settings(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobEnvSettingArgs']]]]:
        """
        Environment variables used by the Job while performing Action or Workspace.
        """
        return pulumi.get(self, "job_env_settings")

    @job_env_settings.setter
    def job_env_settings(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobEnvSettingArgs']]]]):
        pulumi.set(self, "job_env_settings", value)

    @_builtins.property
    @pulumi.getter(name="jobInputs")
    def job_inputs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobInputArgs']]]]:
        """
        Job inputs used by Action or Workspace.
        """
        return pulumi.get(self, "job_inputs")

    @job_inputs.setter
    def job_inputs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobJobInputArgs']]]]):
        pulumi.set(self, "job_inputs", value)

    @_builtins.property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "location", value)

    @_builtins.property
    @pulumi.getter(name="logStoreUrl")
    def log_store_url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Job log store URL.
        """
        return pulumi.get(self, "log_store_url")

    @log_store_url.setter
    def log_store_url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "log_store_url", value)

    @_builtins.property
    @pulumi.getter(name="logSummaries")
    def log_summaries(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobLogSummaryArgs']]]]:
        """
        Job log summary record.
        """
        return pulumi.get(self, "log_summaries")

    @log_summaries.setter
    def log_summaries(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobLogSummaryArgs']]]]):
        pulumi.set(self, "log_summaries", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Job name, uniquely derived from the related Workspace or Action.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Resource-group name derived from the related Workspace or Action.
        """
        return pulumi.get(self, "resource_group")

    @resource_group.setter
    def resource_group(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_group", value)

    @_builtins.property
    @pulumi.getter(name="resultsUrl")
    def results_url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Job results store URL.
        """
        return pulumi.get(self, "results_url")

    @results_url.setter
    def results_url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "results_url", value)

    @_builtins.property
    @pulumi.getter(name="schematicsJobId")
    def schematics_job_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "schematics_job_id")

    @schematics_job_id.setter
    def schematics_job_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "schematics_job_id", value)

    @_builtins.property
    @pulumi.getter(name="startAt")
    def start_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Job start time.
        """
        return pulumi.get(self, "start_at")

    @start_at.setter
    def start_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "start_at", value)

    @_builtins.property
    @pulumi.getter(name="stateStoreUrl")
    def state_store_url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Job state store URL.
        """
        return pulumi.get(self, "state_store_url")

    @state_store_url.setter
    def state_store_url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "state_store_url", value)

    @_builtins.property
    @pulumi.getter
    def statuses(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobStatusArgs']]]]:
        """
        Job Status.
        """
        return pulumi.get(self, "statuses")

    @statuses.setter
    def statuses(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsJobStatusArgs']]]]):
        pulumi.set(self, "statuses", value)

    @_builtins.property
    @pulumi.getter(name="submittedAt")
    def submitted_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Job submission time.
        """
        return pulumi.get(self, "submitted_at")

    @submitted_at.setter
    def submitted_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "submitted_at", value)

    @_builtins.property
    @pulumi.getter(name="submittedBy")
    def submitted_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Email address of user who submitted the job.
        """
        return pulumi.get(self, "submitted_by")

    @submitted_by.setter
    def submitted_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "submitted_by", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        User defined tags, while running the job.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Job status updation timestamp.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("ibm:index/schematicsJob:SchematicsJob")
class SchematicsJob(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bastion: Optional[pulumi.Input[Union['SchematicsJobBastionArgs', 'SchematicsJobBastionArgsDict']]] = None,
                 command_name: Optional[pulumi.Input[_builtins.str]] = None,
                 command_object: Optional[pulumi.Input[_builtins.str]] = None,
                 command_object_id: Optional[pulumi.Input[_builtins.str]] = None,
                 command_options: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 command_parameter: Optional[pulumi.Input[_builtins.str]] = None,
                 datas: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobDataArgs', 'SchematicsJobDataArgsDict']]]]] = None,
                 job_env_settings: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobJobEnvSettingArgs', 'SchematicsJobJobEnvSettingArgsDict']]]]] = None,
                 job_inputs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobJobInputArgs', 'SchematicsJobJobInputArgsDict']]]]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 log_summaries: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobLogSummaryArgs', 'SchematicsJobLogSummaryArgsDict']]]]] = None,
                 schematics_job_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        """
        Create a SchematicsJob resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['SchematicsJobBastionArgs', 'SchematicsJobBastionArgsDict']] bastion: Describes a bastion resource.
        :param pulumi.Input[_builtins.str] command_name: Schematics job command name.
        :param pulumi.Input[_builtins.str] command_object: Name of the Schematics automation resource.
        :param pulumi.Input[_builtins.str] command_object_id: Job command object id (workspace-id, action-id).
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] command_options: Command line options for the command.
        :param pulumi.Input[_builtins.str] command_parameter: Schematics job command parameter (playbook-name).
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobDataArgs', 'SchematicsJobDataArgsDict']]]] datas: Job data.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobJobEnvSettingArgs', 'SchematicsJobJobEnvSettingArgsDict']]]] job_env_settings: Environment variables used by the Job while performing Action or Workspace.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobJobInputArgs', 'SchematicsJobJobInputArgsDict']]]] job_inputs: Job inputs used by Action or Workspace.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobLogSummaryArgs', 'SchematicsJobLogSummaryArgsDict']]]] log_summaries: Job log summary record.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: User defined tags, while running the job.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SchematicsJobArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a SchematicsJob resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param SchematicsJobArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SchematicsJobArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bastion: Optional[pulumi.Input[Union['SchematicsJobBastionArgs', 'SchematicsJobBastionArgsDict']]] = None,
                 command_name: Optional[pulumi.Input[_builtins.str]] = None,
                 command_object: Optional[pulumi.Input[_builtins.str]] = None,
                 command_object_id: Optional[pulumi.Input[_builtins.str]] = None,
                 command_options: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 command_parameter: Optional[pulumi.Input[_builtins.str]] = None,
                 datas: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobDataArgs', 'SchematicsJobDataArgsDict']]]]] = None,
                 job_env_settings: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobJobEnvSettingArgs', 'SchematicsJobJobEnvSettingArgsDict']]]]] = None,
                 job_inputs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobJobInputArgs', 'SchematicsJobJobInputArgsDict']]]]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 log_summaries: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobLogSummaryArgs', 'SchematicsJobLogSummaryArgsDict']]]]] = None,
                 schematics_job_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SchematicsJobArgs.__new__(SchematicsJobArgs)

            __props__.__dict__["bastion"] = bastion
            if command_name is None and not opts.urn:
                raise TypeError("Missing required property 'command_name'")
            __props__.__dict__["command_name"] = command_name
            if command_object is None and not opts.urn:
                raise TypeError("Missing required property 'command_object'")
            __props__.__dict__["command_object"] = command_object
            if command_object_id is None and not opts.urn:
                raise TypeError("Missing required property 'command_object_id'")
            __props__.__dict__["command_object_id"] = command_object_id
            __props__.__dict__["command_options"] = command_options
            __props__.__dict__["command_parameter"] = command_parameter
            __props__.__dict__["datas"] = datas
            __props__.__dict__["job_env_settings"] = job_env_settings
            __props__.__dict__["job_inputs"] = job_inputs
            __props__.__dict__["location"] = location
            __props__.__dict__["log_summaries"] = log_summaries
            __props__.__dict__["schematics_job_id"] = schematics_job_id
            __props__.__dict__["tags"] = tags
            __props__.__dict__["description"] = None
            __props__.__dict__["duration"] = None
            __props__.__dict__["end_at"] = None
            __props__.__dict__["log_store_url"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["resource_group"] = None
            __props__.__dict__["results_url"] = None
            __props__.__dict__["start_at"] = None
            __props__.__dict__["state_store_url"] = None
            __props__.__dict__["statuses"] = None
            __props__.__dict__["submitted_at"] = None
            __props__.__dict__["submitted_by"] = None
            __props__.__dict__["updated_at"] = None
        super(SchematicsJob, __self__).__init__(
            'ibm:index/schematicsJob:SchematicsJob',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            bastion: Optional[pulumi.Input[Union['SchematicsJobBastionArgs', 'SchematicsJobBastionArgsDict']]] = None,
            command_name: Optional[pulumi.Input[_builtins.str]] = None,
            command_object: Optional[pulumi.Input[_builtins.str]] = None,
            command_object_id: Optional[pulumi.Input[_builtins.str]] = None,
            command_options: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            command_parameter: Optional[pulumi.Input[_builtins.str]] = None,
            datas: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobDataArgs', 'SchematicsJobDataArgsDict']]]]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            duration: Optional[pulumi.Input[_builtins.str]] = None,
            end_at: Optional[pulumi.Input[_builtins.str]] = None,
            job_env_settings: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobJobEnvSettingArgs', 'SchematicsJobJobEnvSettingArgsDict']]]]] = None,
            job_inputs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobJobInputArgs', 'SchematicsJobJobInputArgsDict']]]]] = None,
            location: Optional[pulumi.Input[_builtins.str]] = None,
            log_store_url: Optional[pulumi.Input[_builtins.str]] = None,
            log_summaries: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobLogSummaryArgs', 'SchematicsJobLogSummaryArgsDict']]]]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            resource_group: Optional[pulumi.Input[_builtins.str]] = None,
            results_url: Optional[pulumi.Input[_builtins.str]] = None,
            schematics_job_id: Optional[pulumi.Input[_builtins.str]] = None,
            start_at: Optional[pulumi.Input[_builtins.str]] = None,
            state_store_url: Optional[pulumi.Input[_builtins.str]] = None,
            statuses: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobStatusArgs', 'SchematicsJobStatusArgsDict']]]]] = None,
            submitted_at: Optional[pulumi.Input[_builtins.str]] = None,
            submitted_by: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'SchematicsJob':
        """
        Get an existing SchematicsJob resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['SchematicsJobBastionArgs', 'SchematicsJobBastionArgsDict']] bastion: Describes a bastion resource.
        :param pulumi.Input[_builtins.str] command_name: Schematics job command name.
        :param pulumi.Input[_builtins.str] command_object: Name of the Schematics automation resource.
        :param pulumi.Input[_builtins.str] command_object_id: Job command object id (workspace-id, action-id).
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] command_options: Command line options for the command.
        :param pulumi.Input[_builtins.str] command_parameter: Schematics job command parameter (playbook-name).
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobDataArgs', 'SchematicsJobDataArgsDict']]]] datas: Job data.
        :param pulumi.Input[_builtins.str] description: The description of your job is derived from the related action or workspace. The description can be up to 2048
               characters long in size.
        :param pulumi.Input[_builtins.str] duration: Duration of job execution; example 40 sec.
        :param pulumi.Input[_builtins.str] end_at: Job end time.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobJobEnvSettingArgs', 'SchematicsJobJobEnvSettingArgsDict']]]] job_env_settings: Environment variables used by the Job while performing Action or Workspace.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobJobInputArgs', 'SchematicsJobJobInputArgsDict']]]] job_inputs: Job inputs used by Action or Workspace.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] log_store_url: Job log store URL.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobLogSummaryArgs', 'SchematicsJobLogSummaryArgsDict']]]] log_summaries: Job log summary record.
        :param pulumi.Input[_builtins.str] name: Job name, uniquely derived from the related Workspace or Action.
        :param pulumi.Input[_builtins.str] resource_group: Resource-group name derived from the related Workspace or Action.
        :param pulumi.Input[_builtins.str] results_url: Job results store URL.
        :param pulumi.Input[_builtins.str] start_at: Job start time.
        :param pulumi.Input[_builtins.str] state_store_url: Job state store URL.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsJobStatusArgs', 'SchematicsJobStatusArgsDict']]]] statuses: Job Status.
        :param pulumi.Input[_builtins.str] submitted_at: Job submission time.
        :param pulumi.Input[_builtins.str] submitted_by: Email address of user who submitted the job.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: User defined tags, while running the job.
        :param pulumi.Input[_builtins.str] updated_at: Job status updation timestamp.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SchematicsJobState.__new__(_SchematicsJobState)

        __props__.__dict__["bastion"] = bastion
        __props__.__dict__["command_name"] = command_name
        __props__.__dict__["command_object"] = command_object
        __props__.__dict__["command_object_id"] = command_object_id
        __props__.__dict__["command_options"] = command_options
        __props__.__dict__["command_parameter"] = command_parameter
        __props__.__dict__["datas"] = datas
        __props__.__dict__["description"] = description
        __props__.__dict__["duration"] = duration
        __props__.__dict__["end_at"] = end_at
        __props__.__dict__["job_env_settings"] = job_env_settings
        __props__.__dict__["job_inputs"] = job_inputs
        __props__.__dict__["location"] = location
        __props__.__dict__["log_store_url"] = log_store_url
        __props__.__dict__["log_summaries"] = log_summaries
        __props__.__dict__["name"] = name
        __props__.__dict__["resource_group"] = resource_group
        __props__.__dict__["results_url"] = results_url
        __props__.__dict__["schematics_job_id"] = schematics_job_id
        __props__.__dict__["start_at"] = start_at
        __props__.__dict__["state_store_url"] = state_store_url
        __props__.__dict__["statuses"] = statuses
        __props__.__dict__["submitted_at"] = submitted_at
        __props__.__dict__["submitted_by"] = submitted_by
        __props__.__dict__["tags"] = tags
        __props__.__dict__["updated_at"] = updated_at
        return SchematicsJob(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def bastion(self) -> pulumi.Output[Optional['outputs.SchematicsJobBastion']]:
        """
        Describes a bastion resource.
        """
        return pulumi.get(self, "bastion")

    @_builtins.property
    @pulumi.getter(name="commandName")
    def command_name(self) -> pulumi.Output[_builtins.str]:
        """
        Schematics job command name.
        """
        return pulumi.get(self, "command_name")

    @_builtins.property
    @pulumi.getter(name="commandObject")
    def command_object(self) -> pulumi.Output[_builtins.str]:
        """
        Name of the Schematics automation resource.
        """
        return pulumi.get(self, "command_object")

    @_builtins.property
    @pulumi.getter(name="commandObjectId")
    def command_object_id(self) -> pulumi.Output[_builtins.str]:
        """
        Job command object id (workspace-id, action-id).
        """
        return pulumi.get(self, "command_object_id")

    @_builtins.property
    @pulumi.getter(name="commandOptions")
    def command_options(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Command line options for the command.
        """
        return pulumi.get(self, "command_options")

    @_builtins.property
    @pulumi.getter(name="commandParameter")
    def command_parameter(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Schematics job command parameter (playbook-name).
        """
        return pulumi.get(self, "command_parameter")

    @_builtins.property
    @pulumi.getter
    def datas(self) -> pulumi.Output[Optional[Sequence['outputs.SchematicsJobData']]]:
        """
        Job data.
        """
        return pulumi.get(self, "datas")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        The description of your job is derived from the related action or workspace. The description can be up to 2048
        characters long in size.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def duration(self) -> pulumi.Output[_builtins.str]:
        """
        Duration of job execution; example 40 sec.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="endAt")
    def end_at(self) -> pulumi.Output[_builtins.str]:
        """
        Job end time.
        """
        return pulumi.get(self, "end_at")

    @_builtins.property
    @pulumi.getter(name="jobEnvSettings")
    def job_env_settings(self) -> pulumi.Output[Optional[Sequence['outputs.SchematicsJobJobEnvSetting']]]:
        """
        Environment variables used by the Job while performing Action or Workspace.
        """
        return pulumi.get(self, "job_env_settings")

    @_builtins.property
    @pulumi.getter(name="jobInputs")
    def job_inputs(self) -> pulumi.Output[Optional[Sequence['outputs.SchematicsJobJobInput']]]:
        """
        Job inputs used by Action or Workspace.
        """
        return pulumi.get(self, "job_inputs")

    @_builtins.property
    @pulumi.getter
    def location(self) -> pulumi.Output[_builtins.str]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "location")

    @_builtins.property
    @pulumi.getter(name="logStoreUrl")
    def log_store_url(self) -> pulumi.Output[_builtins.str]:
        """
        Job log store URL.
        """
        return pulumi.get(self, "log_store_url")

    @_builtins.property
    @pulumi.getter(name="logSummaries")
    def log_summaries(self) -> pulumi.Output[Optional[Sequence['outputs.SchematicsJobLogSummary']]]:
        """
        Job log summary record.
        """
        return pulumi.get(self, "log_summaries")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Job name, uniquely derived from the related Workspace or Action.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> pulumi.Output[_builtins.str]:
        """
        Resource-group name derived from the related Workspace or Action.
        """
        return pulumi.get(self, "resource_group")

    @_builtins.property
    @pulumi.getter(name="resultsUrl")
    def results_url(self) -> pulumi.Output[_builtins.str]:
        """
        Job results store URL.
        """
        return pulumi.get(self, "results_url")

    @_builtins.property
    @pulumi.getter(name="schematicsJobId")
    def schematics_job_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "schematics_job_id")

    @_builtins.property
    @pulumi.getter(name="startAt")
    def start_at(self) -> pulumi.Output[_builtins.str]:
        """
        Job start time.
        """
        return pulumi.get(self, "start_at")

    @_builtins.property
    @pulumi.getter(name="stateStoreUrl")
    def state_store_url(self) -> pulumi.Output[_builtins.str]:
        """
        Job state store URL.
        """
        return pulumi.get(self, "state_store_url")

    @_builtins.property
    @pulumi.getter
    def statuses(self) -> pulumi.Output[Sequence['outputs.SchematicsJobStatus']]:
        """
        Job Status.
        """
        return pulumi.get(self, "statuses")

    @_builtins.property
    @pulumi.getter(name="submittedAt")
    def submitted_at(self) -> pulumi.Output[_builtins.str]:
        """
        Job submission time.
        """
        return pulumi.get(self, "submitted_at")

    @_builtins.property
    @pulumi.getter(name="submittedBy")
    def submitted_by(self) -> pulumi.Output[_builtins.str]:
        """
        Email address of user who submitted the job.
        """
        return pulumi.get(self, "submitted_by")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        User defined tags, while running the job.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Job status updation timestamp.
        """
        return pulumi.get(self, "updated_at")

