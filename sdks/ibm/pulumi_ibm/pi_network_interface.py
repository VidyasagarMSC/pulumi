# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['PiNetworkInterfaceArgs', 'PiNetworkInterface']

@pulumi.input_type
class PiNetworkInterfaceArgs:
    def __init__(__self__, *,
                 pi_cloud_instance_id: pulumi.Input[_builtins.str],
                 pi_network_id: pulumi.Input[_builtins.str],
                 instances: Optional[pulumi.Input[Sequence[pulumi.Input['PiNetworkInterfaceInstanceArgs']]]] = None,
                 pi_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_name: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_network_interface_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_user_tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 timeouts: Optional[pulumi.Input['PiNetworkInterfaceTimeoutsArgs']] = None):
        """
        The set of arguments for constructing a PiNetworkInterface resource.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_network_id: Network ID.
        :param pulumi.Input[Sequence[pulumi.Input['PiNetworkInterfaceInstanceArgs']]] instances: The attached instance to this network interface.
        :param pulumi.Input[_builtins.str] pi_instance_id: If supplied populated it attaches to the instance ID, if empty detaches from the instance ID.
        :param pulumi.Input[_builtins.str] pi_ip_address: The requested IP address of this network interface.
        :param pulumi.Input[_builtins.str] pi_name: Name of the network interface.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] pi_user_tags: The user tags attached to this resource.
        """
        pulumi.set(__self__, "pi_cloud_instance_id", pi_cloud_instance_id)
        pulumi.set(__self__, "pi_network_id", pi_network_id)
        if instances is not None:
            pulumi.set(__self__, "instances", instances)
        if pi_instance_id is not None:
            pulumi.set(__self__, "pi_instance_id", pi_instance_id)
        if pi_ip_address is not None:
            pulumi.set(__self__, "pi_ip_address", pi_ip_address)
        if pi_name is not None:
            pulumi.set(__self__, "pi_name", pi_name)
        if pi_network_interface_id is not None:
            pulumi.set(__self__, "pi_network_interface_id", pi_network_interface_id)
        if pi_user_tags is not None:
            pulumi.set(__self__, "pi_user_tags", pi_user_tags)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)

    @_builtins.property
    @pulumi.getter(name="piCloudInstanceId")
    def pi_cloud_instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        The GUID of the service instance associated with an account.
        """
        return pulumi.get(self, "pi_cloud_instance_id")

    @pi_cloud_instance_id.setter
    def pi_cloud_instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "pi_cloud_instance_id", value)

    @_builtins.property
    @pulumi.getter(name="piNetworkId")
    def pi_network_id(self) -> pulumi.Input[_builtins.str]:
        """
        Network ID.
        """
        return pulumi.get(self, "pi_network_id")

    @pi_network_id.setter
    def pi_network_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "pi_network_id", value)

    @_builtins.property
    @pulumi.getter
    def instances(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PiNetworkInterfaceInstanceArgs']]]]:
        """
        The attached instance to this network interface.
        """
        return pulumi.get(self, "instances")

    @instances.setter
    def instances(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PiNetworkInterfaceInstanceArgs']]]]):
        pulumi.set(self, "instances", value)

    @_builtins.property
    @pulumi.getter(name="piInstanceId")
    def pi_instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        If supplied populated it attaches to the instance ID, if empty detaches from the instance ID.
        """
        return pulumi.get(self, "pi_instance_id")

    @pi_instance_id.setter
    def pi_instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_instance_id", value)

    @_builtins.property
    @pulumi.getter(name="piIpAddress")
    def pi_ip_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The requested IP address of this network interface.
        """
        return pulumi.get(self, "pi_ip_address")

    @pi_ip_address.setter
    def pi_ip_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_ip_address", value)

    @_builtins.property
    @pulumi.getter(name="piName")
    def pi_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Name of the network interface.
        """
        return pulumi.get(self, "pi_name")

    @pi_name.setter
    def pi_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_name", value)

    @_builtins.property
    @pulumi.getter(name="piNetworkInterfaceId")
    def pi_network_interface_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "pi_network_interface_id")

    @pi_network_interface_id.setter
    def pi_network_interface_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_network_interface_id", value)

    @_builtins.property
    @pulumi.getter(name="piUserTags")
    def pi_user_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        The user tags attached to this resource.
        """
        return pulumi.get(self, "pi_user_tags")

    @pi_user_tags.setter
    def pi_user_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "pi_user_tags", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['PiNetworkInterfaceTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['PiNetworkInterfaceTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)


@pulumi.input_type
class _PiNetworkInterfaceState:
    def __init__(__self__, *,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 instances: Optional[pulumi.Input[Sequence[pulumi.Input['PiNetworkInterfaceInstanceArgs']]]] = None,
                 ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 mac_address: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 network_interface_id: Optional[pulumi.Input[_builtins.str]] = None,
                 network_security_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 network_security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_name: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_network_interface_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_user_tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['PiNetworkInterfaceTimeoutsArgs']] = None):
        """
        Input properties used for looking up and filtering PiNetworkInterface resources.
        :param pulumi.Input[_builtins.str] crn: The network interface's crn.
        :param pulumi.Input[Sequence[pulumi.Input['PiNetworkInterfaceInstanceArgs']]] instances: The attached instance to this network interface.
        :param pulumi.Input[_builtins.str] ip_address: The ip address of this network interface.
        :param pulumi.Input[_builtins.str] mac_address: The mac address of the network interface.
        :param pulumi.Input[_builtins.str] name: Name of the network interface (not unique or indexable).
        :param pulumi.Input[_builtins.str] network_interface_id: The unique identifier of the network interface.
        :param pulumi.Input[_builtins.str] network_security_group_id: ID of the network security group the network interface will be added to.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] network_security_group_ids: List of network security groups that the network interface is a member of.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_instance_id: If supplied populated it attaches to the instance ID, if empty detaches from the instance ID.
        :param pulumi.Input[_builtins.str] pi_ip_address: The requested IP address of this network interface.
        :param pulumi.Input[_builtins.str] pi_name: Name of the network interface.
        :param pulumi.Input[_builtins.str] pi_network_id: Network ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] pi_user_tags: The user tags attached to this resource.
        :param pulumi.Input[_builtins.str] status: The status of the network interface.
        """
        if crn is not None:
            pulumi.set(__self__, "crn", crn)
        if instances is not None:
            pulumi.set(__self__, "instances", instances)
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)
        if mac_address is not None:
            pulumi.set(__self__, "mac_address", mac_address)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if network_interface_id is not None:
            pulumi.set(__self__, "network_interface_id", network_interface_id)
        if network_security_group_id is not None:
            warnings.warn("""Deprecated""", DeprecationWarning)
            pulumi.log.warn("""network_security_group_id is deprecated: Deprecated""")
        if network_security_group_id is not None:
            pulumi.set(__self__, "network_security_group_id", network_security_group_id)
        if network_security_group_ids is not None:
            pulumi.set(__self__, "network_security_group_ids", network_security_group_ids)
        if pi_cloud_instance_id is not None:
            pulumi.set(__self__, "pi_cloud_instance_id", pi_cloud_instance_id)
        if pi_instance_id is not None:
            pulumi.set(__self__, "pi_instance_id", pi_instance_id)
        if pi_ip_address is not None:
            pulumi.set(__self__, "pi_ip_address", pi_ip_address)
        if pi_name is not None:
            pulumi.set(__self__, "pi_name", pi_name)
        if pi_network_id is not None:
            pulumi.set(__self__, "pi_network_id", pi_network_id)
        if pi_network_interface_id is not None:
            pulumi.set(__self__, "pi_network_interface_id", pi_network_interface_id)
        if pi_user_tags is not None:
            pulumi.set(__self__, "pi_user_tags", pi_user_tags)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The network interface's crn.
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter
    def instances(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PiNetworkInterfaceInstanceArgs']]]]:
        """
        The attached instance to this network interface.
        """
        return pulumi.get(self, "instances")

    @instances.setter
    def instances(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PiNetworkInterfaceInstanceArgs']]]]):
        pulumi.set(self, "instances", value)

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ip address of this network interface.
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ip_address", value)

    @_builtins.property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The mac address of the network interface.
        """
        return pulumi.get(self, "mac_address")

    @mac_address.setter
    def mac_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "mac_address", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Name of the network interface (not unique or indexable).
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="networkInterfaceId")
    def network_interface_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique identifier of the network interface.
        """
        return pulumi.get(self, "network_interface_id")

    @network_interface_id.setter
    def network_interface_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "network_interface_id", value)

    @_builtins.property
    @pulumi.getter(name="networkSecurityGroupId")
    @_utilities.deprecated("""Deprecated""")
    def network_security_group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        ID of the network security group the network interface will be added to.
        """
        return pulumi.get(self, "network_security_group_id")

    @network_security_group_id.setter
    def network_security_group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "network_security_group_id", value)

    @_builtins.property
    @pulumi.getter(name="networkSecurityGroupIds")
    def network_security_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        List of network security groups that the network interface is a member of.
        """
        return pulumi.get(self, "network_security_group_ids")

    @network_security_group_ids.setter
    def network_security_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "network_security_group_ids", value)

    @_builtins.property
    @pulumi.getter(name="piCloudInstanceId")
    def pi_cloud_instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The GUID of the service instance associated with an account.
        """
        return pulumi.get(self, "pi_cloud_instance_id")

    @pi_cloud_instance_id.setter
    def pi_cloud_instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_cloud_instance_id", value)

    @_builtins.property
    @pulumi.getter(name="piInstanceId")
    def pi_instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        If supplied populated it attaches to the instance ID, if empty detaches from the instance ID.
        """
        return pulumi.get(self, "pi_instance_id")

    @pi_instance_id.setter
    def pi_instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_instance_id", value)

    @_builtins.property
    @pulumi.getter(name="piIpAddress")
    def pi_ip_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The requested IP address of this network interface.
        """
        return pulumi.get(self, "pi_ip_address")

    @pi_ip_address.setter
    def pi_ip_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_ip_address", value)

    @_builtins.property
    @pulumi.getter(name="piName")
    def pi_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Name of the network interface.
        """
        return pulumi.get(self, "pi_name")

    @pi_name.setter
    def pi_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_name", value)

    @_builtins.property
    @pulumi.getter(name="piNetworkId")
    def pi_network_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Network ID.
        """
        return pulumi.get(self, "pi_network_id")

    @pi_network_id.setter
    def pi_network_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_network_id", value)

    @_builtins.property
    @pulumi.getter(name="piNetworkInterfaceId")
    def pi_network_interface_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "pi_network_interface_id")

    @pi_network_interface_id.setter
    def pi_network_interface_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_network_interface_id", value)

    @_builtins.property
    @pulumi.getter(name="piUserTags")
    def pi_user_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        The user tags attached to this resource.
        """
        return pulumi.get(self, "pi_user_tags")

    @pi_user_tags.setter
    def pi_user_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "pi_user_tags", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status of the network interface.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['PiNetworkInterfaceTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['PiNetworkInterfaceTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)


@pulumi.type_token("ibm:index/piNetworkInterface:PiNetworkInterface")
class PiNetworkInterface(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instances: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PiNetworkInterfaceInstanceArgs', 'PiNetworkInterfaceInstanceArgsDict']]]]] = None,
                 pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_name: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_network_interface_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_user_tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 timeouts: Optional[pulumi.Input[Union['PiNetworkInterfaceTimeoutsArgs', 'PiNetworkInterfaceTimeoutsArgsDict']]] = None,
                 __props__=None):
        """
        Create a PiNetworkInterface resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['PiNetworkInterfaceInstanceArgs', 'PiNetworkInterfaceInstanceArgsDict']]]] instances: The attached instance to this network interface.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_instance_id: If supplied populated it attaches to the instance ID, if empty detaches from the instance ID.
        :param pulumi.Input[_builtins.str] pi_ip_address: The requested IP address of this network interface.
        :param pulumi.Input[_builtins.str] pi_name: Name of the network interface.
        :param pulumi.Input[_builtins.str] pi_network_id: Network ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] pi_user_tags: The user tags attached to this resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PiNetworkInterfaceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a PiNetworkInterface resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param PiNetworkInterfaceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PiNetworkInterfaceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instances: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PiNetworkInterfaceInstanceArgs', 'PiNetworkInterfaceInstanceArgsDict']]]]] = None,
                 pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_name: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_network_interface_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_user_tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 timeouts: Optional[pulumi.Input[Union['PiNetworkInterfaceTimeoutsArgs', 'PiNetworkInterfaceTimeoutsArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PiNetworkInterfaceArgs.__new__(PiNetworkInterfaceArgs)

            __props__.__dict__["instances"] = instances
            if pi_cloud_instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'pi_cloud_instance_id'")
            __props__.__dict__["pi_cloud_instance_id"] = pi_cloud_instance_id
            __props__.__dict__["pi_instance_id"] = pi_instance_id
            __props__.__dict__["pi_ip_address"] = pi_ip_address
            __props__.__dict__["pi_name"] = pi_name
            if pi_network_id is None and not opts.urn:
                raise TypeError("Missing required property 'pi_network_id'")
            __props__.__dict__["pi_network_id"] = pi_network_id
            __props__.__dict__["pi_network_interface_id"] = pi_network_interface_id
            __props__.__dict__["pi_user_tags"] = pi_user_tags
            __props__.__dict__["timeouts"] = timeouts
            __props__.__dict__["crn"] = None
            __props__.__dict__["ip_address"] = None
            __props__.__dict__["mac_address"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["network_interface_id"] = None
            __props__.__dict__["network_security_group_id"] = None
            __props__.__dict__["network_security_group_ids"] = None
            __props__.__dict__["status"] = None
        super(PiNetworkInterface, __self__).__init__(
            'ibm:index/piNetworkInterface:PiNetworkInterface',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            crn: Optional[pulumi.Input[_builtins.str]] = None,
            instances: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PiNetworkInterfaceInstanceArgs', 'PiNetworkInterfaceInstanceArgsDict']]]]] = None,
            ip_address: Optional[pulumi.Input[_builtins.str]] = None,
            mac_address: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            network_interface_id: Optional[pulumi.Input[_builtins.str]] = None,
            network_security_group_id: Optional[pulumi.Input[_builtins.str]] = None,
            network_security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            pi_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            pi_ip_address: Optional[pulumi.Input[_builtins.str]] = None,
            pi_name: Optional[pulumi.Input[_builtins.str]] = None,
            pi_network_id: Optional[pulumi.Input[_builtins.str]] = None,
            pi_network_interface_id: Optional[pulumi.Input[_builtins.str]] = None,
            pi_user_tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            timeouts: Optional[pulumi.Input[Union['PiNetworkInterfaceTimeoutsArgs', 'PiNetworkInterfaceTimeoutsArgsDict']]] = None) -> 'PiNetworkInterface':
        """
        Get an existing PiNetworkInterface resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] crn: The network interface's crn.
        :param pulumi.Input[Sequence[pulumi.Input[Union['PiNetworkInterfaceInstanceArgs', 'PiNetworkInterfaceInstanceArgsDict']]]] instances: The attached instance to this network interface.
        :param pulumi.Input[_builtins.str] ip_address: The ip address of this network interface.
        :param pulumi.Input[_builtins.str] mac_address: The mac address of the network interface.
        :param pulumi.Input[_builtins.str] name: Name of the network interface (not unique or indexable).
        :param pulumi.Input[_builtins.str] network_interface_id: The unique identifier of the network interface.
        :param pulumi.Input[_builtins.str] network_security_group_id: ID of the network security group the network interface will be added to.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] network_security_group_ids: List of network security groups that the network interface is a member of.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_instance_id: If supplied populated it attaches to the instance ID, if empty detaches from the instance ID.
        :param pulumi.Input[_builtins.str] pi_ip_address: The requested IP address of this network interface.
        :param pulumi.Input[_builtins.str] pi_name: Name of the network interface.
        :param pulumi.Input[_builtins.str] pi_network_id: Network ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] pi_user_tags: The user tags attached to this resource.
        :param pulumi.Input[_builtins.str] status: The status of the network interface.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PiNetworkInterfaceState.__new__(_PiNetworkInterfaceState)

        __props__.__dict__["crn"] = crn
        __props__.__dict__["instances"] = instances
        __props__.__dict__["ip_address"] = ip_address
        __props__.__dict__["mac_address"] = mac_address
        __props__.__dict__["name"] = name
        __props__.__dict__["network_interface_id"] = network_interface_id
        __props__.__dict__["network_security_group_id"] = network_security_group_id
        __props__.__dict__["network_security_group_ids"] = network_security_group_ids
        __props__.__dict__["pi_cloud_instance_id"] = pi_cloud_instance_id
        __props__.__dict__["pi_instance_id"] = pi_instance_id
        __props__.__dict__["pi_ip_address"] = pi_ip_address
        __props__.__dict__["pi_name"] = pi_name
        __props__.__dict__["pi_network_id"] = pi_network_id
        __props__.__dict__["pi_network_interface_id"] = pi_network_interface_id
        __props__.__dict__["pi_user_tags"] = pi_user_tags
        __props__.__dict__["status"] = status
        __props__.__dict__["timeouts"] = timeouts
        return PiNetworkInterface(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Output[_builtins.str]:
        """
        The network interface's crn.
        """
        return pulumi.get(self, "crn")

    @_builtins.property
    @pulumi.getter
    def instances(self) -> pulumi.Output[Optional[Sequence['outputs.PiNetworkInterfaceInstance']]]:
        """
        The attached instance to this network interface.
        """
        return pulumi.get(self, "instances")

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> pulumi.Output[_builtins.str]:
        """
        The ip address of this network interface.
        """
        return pulumi.get(self, "ip_address")

    @_builtins.property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> pulumi.Output[_builtins.str]:
        """
        The mac address of the network interface.
        """
        return pulumi.get(self, "mac_address")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Name of the network interface (not unique or indexable).
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="networkInterfaceId")
    def network_interface_id(self) -> pulumi.Output[_builtins.str]:
        """
        The unique identifier of the network interface.
        """
        return pulumi.get(self, "network_interface_id")

    @_builtins.property
    @pulumi.getter(name="networkSecurityGroupId")
    @_utilities.deprecated("""Deprecated""")
    def network_security_group_id(self) -> pulumi.Output[_builtins.str]:
        """
        ID of the network security group the network interface will be added to.
        """
        return pulumi.get(self, "network_security_group_id")

    @_builtins.property
    @pulumi.getter(name="networkSecurityGroupIds")
    def network_security_group_ids(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        List of network security groups that the network interface is a member of.
        """
        return pulumi.get(self, "network_security_group_ids")

    @_builtins.property
    @pulumi.getter(name="piCloudInstanceId")
    def pi_cloud_instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        The GUID of the service instance associated with an account.
        """
        return pulumi.get(self, "pi_cloud_instance_id")

    @_builtins.property
    @pulumi.getter(name="piInstanceId")
    def pi_instance_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        If supplied populated it attaches to the instance ID, if empty detaches from the instance ID.
        """
        return pulumi.get(self, "pi_instance_id")

    @_builtins.property
    @pulumi.getter(name="piIpAddress")
    def pi_ip_address(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The requested IP address of this network interface.
        """
        return pulumi.get(self, "pi_ip_address")

    @_builtins.property
    @pulumi.getter(name="piName")
    def pi_name(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Name of the network interface.
        """
        return pulumi.get(self, "pi_name")

    @_builtins.property
    @pulumi.getter(name="piNetworkId")
    def pi_network_id(self) -> pulumi.Output[_builtins.str]:
        """
        Network ID.
        """
        return pulumi.get(self, "pi_network_id")

    @_builtins.property
    @pulumi.getter(name="piNetworkInterfaceId")
    def pi_network_interface_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "pi_network_interface_id")

    @_builtins.property
    @pulumi.getter(name="piUserTags")
    def pi_user_tags(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        The user tags attached to this resource.
        """
        return pulumi.get(self, "pi_user_tags")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The status of the network interface.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> pulumi.Output[Optional['outputs.PiNetworkInterfaceTimeouts']]:
        return pulumi.get(self, "timeouts")

