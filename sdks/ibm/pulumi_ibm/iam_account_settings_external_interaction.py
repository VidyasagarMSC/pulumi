# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IamAccountSettingsExternalInteractionArgs', 'IamAccountSettingsExternalInteraction']

@pulumi.input_type
class IamAccountSettingsExternalInteractionArgs:
    def __init__(__self__, *,
                 account_id: pulumi.Input[_builtins.str],
                 external_account_identity_interaction: pulumi.Input['IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgs'],
                 accept_language: Optional[pulumi.Input[_builtins.str]] = None,
                 iam_account_settings_external_interaction_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a IamAccountSettingsExternalInteraction resource.
        :param pulumi.Input[_builtins.str] account_id: The account ID that the Access Management Account Settings belong to.
        :param pulumi.Input['IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgs'] external_account_identity_interaction: How external accounts can interact in relation to the requested account.
        :param pulumi.Input[_builtins.str] accept_language: Language code for translations* `default` - English* `de` - German (Standard)* `en` - English* `es` - Spanish (Spain)*
               `fr` - French (Standard)* `it` - Italian (Standard)* `ja` - Japanese* `ko` - Korean* `pt-br` - Portuguese (Brazil)*
               `zh-cn` - Chinese (Simplified, PRC)* `zh-tw` - (Chinese, Taiwan).
        """
        pulumi.set(__self__, "account_id", account_id)
        pulumi.set(__self__, "external_account_identity_interaction", external_account_identity_interaction)
        if accept_language is not None:
            pulumi.set(__self__, "accept_language", accept_language)
        if iam_account_settings_external_interaction_id is not None:
            pulumi.set(__self__, "iam_account_settings_external_interaction_id", iam_account_settings_external_interaction_id)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Input[_builtins.str]:
        """
        The account ID that the Access Management Account Settings belong to.
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "account_id", value)

    @_builtins.property
    @pulumi.getter(name="externalAccountIdentityInteraction")
    def external_account_identity_interaction(self) -> pulumi.Input['IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgs']:
        """
        How external accounts can interact in relation to the requested account.
        """
        return pulumi.get(self, "external_account_identity_interaction")

    @external_account_identity_interaction.setter
    def external_account_identity_interaction(self, value: pulumi.Input['IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgs']):
        pulumi.set(self, "external_account_identity_interaction", value)

    @_builtins.property
    @pulumi.getter(name="acceptLanguage")
    def accept_language(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Language code for translations* `default` - English* `de` - German (Standard)* `en` - English* `es` - Spanish (Spain)*
        `fr` - French (Standard)* `it` - Italian (Standard)* `ja` - Japanese* `ko` - Korean* `pt-br` - Portuguese (Brazil)*
        `zh-cn` - Chinese (Simplified, PRC)* `zh-tw` - (Chinese, Taiwan).
        """
        return pulumi.get(self, "accept_language")

    @accept_language.setter
    def accept_language(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "accept_language", value)

    @_builtins.property
    @pulumi.getter(name="iamAccountSettingsExternalInteractionId")
    def iam_account_settings_external_interaction_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "iam_account_settings_external_interaction_id")

    @iam_account_settings_external_interaction_id.setter
    def iam_account_settings_external_interaction_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "iam_account_settings_external_interaction_id", value)


@pulumi.input_type
class _IamAccountSettingsExternalInteractionState:
    def __init__(__self__, *,
                 accept_language: Optional[pulumi.Input[_builtins.str]] = None,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 external_account_identity_interaction: Optional[pulumi.Input['IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgs']] = None,
                 iam_account_settings_external_interaction_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering IamAccountSettingsExternalInteraction resources.
        :param pulumi.Input[_builtins.str] accept_language: Language code for translations* `default` - English* `de` - German (Standard)* `en` - English* `es` - Spanish (Spain)*
               `fr` - French (Standard)* `it` - Italian (Standard)* `ja` - Japanese* `ko` - Korean* `pt-br` - Portuguese (Brazil)*
               `zh-cn` - Chinese (Simplified, PRC)* `zh-tw` - (Chinese, Taiwan).
        :param pulumi.Input[_builtins.str] account_id: The account ID that the Access Management Account Settings belong to.
        :param pulumi.Input['IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgs'] external_account_identity_interaction: How external accounts can interact in relation to the requested account.
        """
        if accept_language is not None:
            pulumi.set(__self__, "accept_language", accept_language)
        if account_id is not None:
            pulumi.set(__self__, "account_id", account_id)
        if external_account_identity_interaction is not None:
            pulumi.set(__self__, "external_account_identity_interaction", external_account_identity_interaction)
        if iam_account_settings_external_interaction_id is not None:
            pulumi.set(__self__, "iam_account_settings_external_interaction_id", iam_account_settings_external_interaction_id)

    @_builtins.property
    @pulumi.getter(name="acceptLanguage")
    def accept_language(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Language code for translations* `default` - English* `de` - German (Standard)* `en` - English* `es` - Spanish (Spain)*
        `fr` - French (Standard)* `it` - Italian (Standard)* `ja` - Japanese* `ko` - Korean* `pt-br` - Portuguese (Brazil)*
        `zh-cn` - Chinese (Simplified, PRC)* `zh-tw` - (Chinese, Taiwan).
        """
        return pulumi.get(self, "accept_language")

    @accept_language.setter
    def accept_language(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "accept_language", value)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The account ID that the Access Management Account Settings belong to.
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "account_id", value)

    @_builtins.property
    @pulumi.getter(name="externalAccountIdentityInteraction")
    def external_account_identity_interaction(self) -> Optional[pulumi.Input['IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgs']]:
        """
        How external accounts can interact in relation to the requested account.
        """
        return pulumi.get(self, "external_account_identity_interaction")

    @external_account_identity_interaction.setter
    def external_account_identity_interaction(self, value: Optional[pulumi.Input['IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgs']]):
        pulumi.set(self, "external_account_identity_interaction", value)

    @_builtins.property
    @pulumi.getter(name="iamAccountSettingsExternalInteractionId")
    def iam_account_settings_external_interaction_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "iam_account_settings_external_interaction_id")

    @iam_account_settings_external_interaction_id.setter
    def iam_account_settings_external_interaction_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "iam_account_settings_external_interaction_id", value)


@pulumi.type_token("ibm:index/iamAccountSettingsExternalInteraction:IamAccountSettingsExternalInteraction")
class IamAccountSettingsExternalInteraction(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 accept_language: Optional[pulumi.Input[_builtins.str]] = None,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 external_account_identity_interaction: Optional[pulumi.Input[Union['IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgs', 'IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgsDict']]] = None,
                 iam_account_settings_external_interaction_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a IamAccountSettingsExternalInteraction resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] accept_language: Language code for translations* `default` - English* `de` - German (Standard)* `en` - English* `es` - Spanish (Spain)*
               `fr` - French (Standard)* `it` - Italian (Standard)* `ja` - Japanese* `ko` - Korean* `pt-br` - Portuguese (Brazil)*
               `zh-cn` - Chinese (Simplified, PRC)* `zh-tw` - (Chinese, Taiwan).
        :param pulumi.Input[_builtins.str] account_id: The account ID that the Access Management Account Settings belong to.
        :param pulumi.Input[Union['IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgs', 'IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgsDict']] external_account_identity_interaction: How external accounts can interact in relation to the requested account.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IamAccountSettingsExternalInteractionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a IamAccountSettingsExternalInteraction resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param IamAccountSettingsExternalInteractionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IamAccountSettingsExternalInteractionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 accept_language: Optional[pulumi.Input[_builtins.str]] = None,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 external_account_identity_interaction: Optional[pulumi.Input[Union['IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgs', 'IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgsDict']]] = None,
                 iam_account_settings_external_interaction_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IamAccountSettingsExternalInteractionArgs.__new__(IamAccountSettingsExternalInteractionArgs)

            __props__.__dict__["accept_language"] = accept_language
            if account_id is None and not opts.urn:
                raise TypeError("Missing required property 'account_id'")
            __props__.__dict__["account_id"] = account_id
            if external_account_identity_interaction is None and not opts.urn:
                raise TypeError("Missing required property 'external_account_identity_interaction'")
            __props__.__dict__["external_account_identity_interaction"] = external_account_identity_interaction
            __props__.__dict__["iam_account_settings_external_interaction_id"] = iam_account_settings_external_interaction_id
        super(IamAccountSettingsExternalInteraction, __self__).__init__(
            'ibm:index/iamAccountSettingsExternalInteraction:IamAccountSettingsExternalInteraction',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            accept_language: Optional[pulumi.Input[_builtins.str]] = None,
            account_id: Optional[pulumi.Input[_builtins.str]] = None,
            external_account_identity_interaction: Optional[pulumi.Input[Union['IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgs', 'IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgsDict']]] = None,
            iam_account_settings_external_interaction_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'IamAccountSettingsExternalInteraction':
        """
        Get an existing IamAccountSettingsExternalInteraction resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] accept_language: Language code for translations* `default` - English* `de` - German (Standard)* `en` - English* `es` - Spanish (Spain)*
               `fr` - French (Standard)* `it` - Italian (Standard)* `ja` - Japanese* `ko` - Korean* `pt-br` - Portuguese (Brazil)*
               `zh-cn` - Chinese (Simplified, PRC)* `zh-tw` - (Chinese, Taiwan).
        :param pulumi.Input[_builtins.str] account_id: The account ID that the Access Management Account Settings belong to.
        :param pulumi.Input[Union['IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgs', 'IamAccountSettingsExternalInteractionExternalAccountIdentityInteractionArgsDict']] external_account_identity_interaction: How external accounts can interact in relation to the requested account.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IamAccountSettingsExternalInteractionState.__new__(_IamAccountSettingsExternalInteractionState)

        __props__.__dict__["accept_language"] = accept_language
        __props__.__dict__["account_id"] = account_id
        __props__.__dict__["external_account_identity_interaction"] = external_account_identity_interaction
        __props__.__dict__["iam_account_settings_external_interaction_id"] = iam_account_settings_external_interaction_id
        return IamAccountSettingsExternalInteraction(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="acceptLanguage")
    def accept_language(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Language code for translations* `default` - English* `de` - German (Standard)* `en` - English* `es` - Spanish (Spain)*
        `fr` - French (Standard)* `it` - Italian (Standard)* `ja` - Japanese* `ko` - Korean* `pt-br` - Portuguese (Brazil)*
        `zh-cn` - Chinese (Simplified, PRC)* `zh-tw` - (Chinese, Taiwan).
        """
        return pulumi.get(self, "accept_language")

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Output[_builtins.str]:
        """
        The account ID that the Access Management Account Settings belong to.
        """
        return pulumi.get(self, "account_id")

    @_builtins.property
    @pulumi.getter(name="externalAccountIdentityInteraction")
    def external_account_identity_interaction(self) -> pulumi.Output['outputs.IamAccountSettingsExternalInteractionExternalAccountIdentityInteraction']:
        """
        How external accounts can interact in relation to the requested account.
        """
        return pulumi.get(self, "external_account_identity_interaction")

    @_builtins.property
    @pulumi.getter(name="iamAccountSettingsExternalInteractionId")
    def iam_account_settings_external_interaction_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "iam_account_settings_external_interaction_id")

