# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetIsImageBareMetalServerProfilesResult',
    'AwaitableGetIsImageBareMetalServerProfilesResult',
    'get_is_image_bare_metal_server_profiles',
    'get_is_image_bare_metal_server_profiles_output',
]

@pulumi.output_type
class GetIsImageBareMetalServerProfilesResult:
    """
    A collection of values returned by getIsImageBareMetalServerProfiles.
    """
    def __init__(__self__, bare_metal_server_profiles=None, id=None, identifier=None):
        if bare_metal_server_profiles and not isinstance(bare_metal_server_profiles, list):
            raise TypeError("Expected argument 'bare_metal_server_profiles' to be a list")
        pulumi.set(__self__, "bare_metal_server_profiles", bare_metal_server_profiles)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if identifier and not isinstance(identifier, str):
            raise TypeError("Expected argument 'identifier' to be a str")
        pulumi.set(__self__, "identifier", identifier)

    @_builtins.property
    @pulumi.getter(name="bareMetalServerProfiles")
    def bare_metal_server_profiles(self) -> Sequence['outputs.GetIsImageBareMetalServerProfilesBareMetalServerProfileResult']:
        return pulumi.get(self, "bare_metal_server_profiles")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def identifier(self) -> _builtins.str:
        return pulumi.get(self, "identifier")


class AwaitableGetIsImageBareMetalServerProfilesResult(GetIsImageBareMetalServerProfilesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIsImageBareMetalServerProfilesResult(
            bare_metal_server_profiles=self.bare_metal_server_profiles,
            id=self.id,
            identifier=self.identifier)


def get_is_image_bare_metal_server_profiles(id: Optional[_builtins.str] = None,
                                            identifier: Optional[_builtins.str] = None,
                                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIsImageBareMetalServerProfilesResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['identifier'] = identifier
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getIsImageBareMetalServerProfiles:getIsImageBareMetalServerProfiles', __args__, opts=opts, typ=GetIsImageBareMetalServerProfilesResult, package_ref=_utilities.get_package()).value

    return AwaitableGetIsImageBareMetalServerProfilesResult(
        bare_metal_server_profiles=pulumi.get(__ret__, 'bare_metal_server_profiles'),
        id=pulumi.get(__ret__, 'id'),
        identifier=pulumi.get(__ret__, 'identifier'))
def get_is_image_bare_metal_server_profiles_output(id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                   identifier: Optional[pulumi.Input[_builtins.str]] = None,
                                                   opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetIsImageBareMetalServerProfilesResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['identifier'] = identifier
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getIsImageBareMetalServerProfiles:getIsImageBareMetalServerProfiles', __args__, opts=opts, typ=GetIsImageBareMetalServerProfilesResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetIsImageBareMetalServerProfilesResult(
        bare_metal_server_profiles=pulumi.get(__response__, 'bare_metal_server_profiles'),
        id=pulumi.get(__response__, 'id'),
        identifier=pulumi.get(__response__, 'identifier')))
