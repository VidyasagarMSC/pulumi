# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetIsPublicGatewaysResult',
    'AwaitableGetIsPublicGatewaysResult',
    'get_is_public_gateways',
    'get_is_public_gateways_output',
]

@pulumi.output_type
class GetIsPublicGatewaysResult:
    """
    A collection of values returned by getIsPublicGateways.
    """
    def __init__(__self__, id=None, public_gateways=None, resource_group=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if public_gateways and not isinstance(public_gateways, list):
            raise TypeError("Expected argument 'public_gateways' to be a list")
        pulumi.set(__self__, "public_gateways", public_gateways)
        if resource_group and not isinstance(resource_group, str):
            raise TypeError("Expected argument 'resource_group' to be a str")
        pulumi.set(__self__, "resource_group", resource_group)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="publicGateways")
    def public_gateways(self) -> Sequence['outputs.GetIsPublicGatewaysPublicGatewayResult']:
        return pulumi.get(self, "public_gateways")

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "resource_group")


class AwaitableGetIsPublicGatewaysResult(GetIsPublicGatewaysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIsPublicGatewaysResult(
            id=self.id,
            public_gateways=self.public_gateways,
            resource_group=self.resource_group)


def get_is_public_gateways(id: Optional[_builtins.str] = None,
                           resource_group: Optional[_builtins.str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIsPublicGatewaysResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['resourceGroup'] = resource_group
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getIsPublicGateways:getIsPublicGateways', __args__, opts=opts, typ=GetIsPublicGatewaysResult, package_ref=_utilities.get_package()).value

    return AwaitableGetIsPublicGatewaysResult(
        id=pulumi.get(__ret__, 'id'),
        public_gateways=pulumi.get(__ret__, 'public_gateways'),
        resource_group=pulumi.get(__ret__, 'resource_group'))
def get_is_public_gateways_output(id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                  resource_group: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetIsPublicGatewaysResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['resourceGroup'] = resource_group
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getIsPublicGateways:getIsPublicGateways', __args__, opts=opts, typ=GetIsPublicGatewaysResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetIsPublicGatewaysResult(
        id=pulumi.get(__response__, 'id'),
        public_gateways=pulumi.get(__response__, 'public_gateways'),
        resource_group=pulumi.get(__response__, 'resource_group')))
