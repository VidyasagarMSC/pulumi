# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetIsEndpointGatewayTargetsResult',
    'AwaitableGetIsEndpointGatewayTargetsResult',
    'get_is_endpoint_gateway_targets',
    'get_is_endpoint_gateway_targets_output',
]

@pulumi.output_type
class GetIsEndpointGatewayTargetsResult:
    """
    A collection of values returned by getIsEndpointGatewayTargets.
    """
    def __init__(__self__, id=None, resources=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if resources and not isinstance(resources, list):
            raise TypeError("Expected argument 'resources' to be a list")
        pulumi.set(__self__, "resources", resources)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def resources(self) -> Sequence['outputs.GetIsEndpointGatewayTargetsResourceResult']:
        return pulumi.get(self, "resources")


class AwaitableGetIsEndpointGatewayTargetsResult(GetIsEndpointGatewayTargetsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIsEndpointGatewayTargetsResult(
            id=self.id,
            resources=self.resources)


def get_is_endpoint_gateway_targets(id: Optional[_builtins.str] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIsEndpointGatewayTargetsResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getIsEndpointGatewayTargets:getIsEndpointGatewayTargets', __args__, opts=opts, typ=GetIsEndpointGatewayTargetsResult, package_ref=_utilities.get_package()).value

    return AwaitableGetIsEndpointGatewayTargetsResult(
        id=pulumi.get(__ret__, 'id'),
        resources=pulumi.get(__ret__, 'resources'))
def get_is_endpoint_gateway_targets_output(id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                           opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetIsEndpointGatewayTargetsResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getIsEndpointGatewayTargets:getIsEndpointGatewayTargets', __args__, opts=opts, typ=GetIsEndpointGatewayTargetsResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetIsEndpointGatewayTargetsResult(
        id=pulumi.get(__response__, 'id'),
        resources=pulumi.get(__response__, 'resources')))
