# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['BackupRecoveryUpdateProtectionGroupRunRequestArgs', 'BackupRecoveryUpdateProtectionGroupRunRequest']

@pulumi.input_type
class BackupRecoveryUpdateProtectionGroupRunRequestArgs:
    def __init__(__self__, *,
                 group_id: pulumi.Input[_builtins.str],
                 update_protection_group_run_params: pulumi.Input[Sequence[pulumi.Input['BackupRecoveryUpdateProtectionGroupRunRequestUpdateProtectionGroupRunParamArgs']]],
                 x_ibm_tenant_id: pulumi.Input[_builtins.str],
                 backup_recovery_update_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a BackupRecoveryUpdateProtectionGroupRunRequest resource.
        :param pulumi.Input[_builtins.str] group_id: Protection group id
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        """
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "update_protection_group_run_params", update_protection_group_run_params)
        pulumi.set(__self__, "x_ibm_tenant_id", x_ibm_tenant_id)
        if backup_recovery_update_protection_group_run_request_id is not None:
            pulumi.set(__self__, "backup_recovery_update_protection_group_run_request_id", backup_recovery_update_protection_group_run_request_id)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Protection group id
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter(name="updateProtectionGroupRunParams")
    def update_protection_group_run_params(self) -> pulumi.Input[Sequence[pulumi.Input['BackupRecoveryUpdateProtectionGroupRunRequestUpdateProtectionGroupRunParamArgs']]]:
        return pulumi.get(self, "update_protection_group_run_params")

    @update_protection_group_run_params.setter
    def update_protection_group_run_params(self, value: pulumi.Input[Sequence[pulumi.Input['BackupRecoveryUpdateProtectionGroupRunRequestUpdateProtectionGroupRunParamArgs']]]):
        pulumi.set(self, "update_protection_group_run_params", value)

    @_builtins.property
    @pulumi.getter(name="xIbmTenantId")
    def x_ibm_tenant_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
        be specified.
        """
        return pulumi.get(self, "x_ibm_tenant_id")

    @x_ibm_tenant_id.setter
    def x_ibm_tenant_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "x_ibm_tenant_id", value)

    @_builtins.property
    @pulumi.getter(name="backupRecoveryUpdateProtectionGroupRunRequestId")
    def backup_recovery_update_protection_group_run_request_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "backup_recovery_update_protection_group_run_request_id")

    @backup_recovery_update_protection_group_run_request_id.setter
    def backup_recovery_update_protection_group_run_request_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "backup_recovery_update_protection_group_run_request_id", value)


@pulumi.input_type
class _BackupRecoveryUpdateProtectionGroupRunRequestState:
    def __init__(__self__, *,
                 backup_recovery_update_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None,
                 failed_runs: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryUpdateProtectionGroupRunRequestFailedRunArgs']]]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 run_id: Optional[pulumi.Input[_builtins.str]] = None,
                 successful_run_ids: Optional[pulumi.Input[_builtins.str]] = None,
                 update_protection_group_run_params: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryUpdateProtectionGroupRunRequestUpdateProtectionGroupRunParamArgs']]]] = None,
                 x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering BackupRecoveryUpdateProtectionGroupRunRequest resources.
        :param pulumi.Input[Sequence[pulumi.Input['BackupRecoveryUpdateProtectionGroupRunRequestFailedRunArgs']]] failed_runs: Specfies the list of connections for the source.
        :param pulumi.Input[_builtins.str] group_id: Protection group id
        :param pulumi.Input[_builtins.str] run_id: The unique ID.
        :param pulumi.Input[_builtins.str] successful_run_ids: Specifies a list of Protection Group ids for which the state should change.
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        """
        if backup_recovery_update_protection_group_run_request_id is not None:
            pulumi.set(__self__, "backup_recovery_update_protection_group_run_request_id", backup_recovery_update_protection_group_run_request_id)
        if failed_runs is not None:
            pulumi.set(__self__, "failed_runs", failed_runs)
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)
        if run_id is not None:
            pulumi.set(__self__, "run_id", run_id)
        if successful_run_ids is not None:
            pulumi.set(__self__, "successful_run_ids", successful_run_ids)
        if update_protection_group_run_params is not None:
            pulumi.set(__self__, "update_protection_group_run_params", update_protection_group_run_params)
        if x_ibm_tenant_id is not None:
            pulumi.set(__self__, "x_ibm_tenant_id", x_ibm_tenant_id)

    @_builtins.property
    @pulumi.getter(name="backupRecoveryUpdateProtectionGroupRunRequestId")
    def backup_recovery_update_protection_group_run_request_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "backup_recovery_update_protection_group_run_request_id")

    @backup_recovery_update_protection_group_run_request_id.setter
    def backup_recovery_update_protection_group_run_request_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "backup_recovery_update_protection_group_run_request_id", value)

    @_builtins.property
    @pulumi.getter(name="failedRuns")
    def failed_runs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryUpdateProtectionGroupRunRequestFailedRunArgs']]]]:
        """
        Specfies the list of connections for the source.
        """
        return pulumi.get(self, "failed_runs")

    @failed_runs.setter
    def failed_runs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryUpdateProtectionGroupRunRequestFailedRunArgs']]]]):
        pulumi.set(self, "failed_runs", value)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Protection group id
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter(name="runId")
    def run_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique ID.
        """
        return pulumi.get(self, "run_id")

    @run_id.setter
    def run_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "run_id", value)

    @_builtins.property
    @pulumi.getter(name="successfulRunIds")
    def successful_run_ids(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies a list of Protection Group ids for which the state should change.
        """
        return pulumi.get(self, "successful_run_ids")

    @successful_run_ids.setter
    def successful_run_ids(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "successful_run_ids", value)

    @_builtins.property
    @pulumi.getter(name="updateProtectionGroupRunParams")
    def update_protection_group_run_params(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryUpdateProtectionGroupRunRequestUpdateProtectionGroupRunParamArgs']]]]:
        return pulumi.get(self, "update_protection_group_run_params")

    @update_protection_group_run_params.setter
    def update_protection_group_run_params(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryUpdateProtectionGroupRunRequestUpdateProtectionGroupRunParamArgs']]]]):
        pulumi.set(self, "update_protection_group_run_params", value)

    @_builtins.property
    @pulumi.getter(name="xIbmTenantId")
    def x_ibm_tenant_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
        be specified.
        """
        return pulumi.get(self, "x_ibm_tenant_id")

    @x_ibm_tenant_id.setter
    def x_ibm_tenant_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "x_ibm_tenant_id", value)


@pulumi.type_token("ibm:index/backupRecoveryUpdateProtectionGroupRunRequest:BackupRecoveryUpdateProtectionGroupRunRequest")
class BackupRecoveryUpdateProtectionGroupRunRequest(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 backup_recovery_update_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 update_protection_group_run_params: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryUpdateProtectionGroupRunRequestUpdateProtectionGroupRunParamArgs', 'BackupRecoveryUpdateProtectionGroupRunRequestUpdateProtectionGroupRunParamArgsDict']]]]] = None,
                 x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a BackupRecoveryUpdateProtectionGroupRunRequest resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] group_id: Protection group id
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BackupRecoveryUpdateProtectionGroupRunRequestArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a BackupRecoveryUpdateProtectionGroupRunRequest resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param BackupRecoveryUpdateProtectionGroupRunRequestArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BackupRecoveryUpdateProtectionGroupRunRequestArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 backup_recovery_update_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 update_protection_group_run_params: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryUpdateProtectionGroupRunRequestUpdateProtectionGroupRunParamArgs', 'BackupRecoveryUpdateProtectionGroupRunRequestUpdateProtectionGroupRunParamArgsDict']]]]] = None,
                 x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BackupRecoveryUpdateProtectionGroupRunRequestArgs.__new__(BackupRecoveryUpdateProtectionGroupRunRequestArgs)

            __props__.__dict__["backup_recovery_update_protection_group_run_request_id"] = backup_recovery_update_protection_group_run_request_id
            if group_id is None and not opts.urn:
                raise TypeError("Missing required property 'group_id'")
            __props__.__dict__["group_id"] = group_id
            if update_protection_group_run_params is None and not opts.urn:
                raise TypeError("Missing required property 'update_protection_group_run_params'")
            __props__.__dict__["update_protection_group_run_params"] = update_protection_group_run_params
            if x_ibm_tenant_id is None and not opts.urn:
                raise TypeError("Missing required property 'x_ibm_tenant_id'")
            __props__.__dict__["x_ibm_tenant_id"] = x_ibm_tenant_id
            __props__.__dict__["failed_runs"] = None
            __props__.__dict__["run_id"] = None
            __props__.__dict__["successful_run_ids"] = None
        super(BackupRecoveryUpdateProtectionGroupRunRequest, __self__).__init__(
            'ibm:index/backupRecoveryUpdateProtectionGroupRunRequest:BackupRecoveryUpdateProtectionGroupRunRequest',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            backup_recovery_update_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None,
            failed_runs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryUpdateProtectionGroupRunRequestFailedRunArgs', 'BackupRecoveryUpdateProtectionGroupRunRequestFailedRunArgsDict']]]]] = None,
            group_id: Optional[pulumi.Input[_builtins.str]] = None,
            run_id: Optional[pulumi.Input[_builtins.str]] = None,
            successful_run_ids: Optional[pulumi.Input[_builtins.str]] = None,
            update_protection_group_run_params: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryUpdateProtectionGroupRunRequestUpdateProtectionGroupRunParamArgs', 'BackupRecoveryUpdateProtectionGroupRunRequestUpdateProtectionGroupRunParamArgsDict']]]]] = None,
            x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'BackupRecoveryUpdateProtectionGroupRunRequest':
        """
        Get an existing BackupRecoveryUpdateProtectionGroupRunRequest resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryUpdateProtectionGroupRunRequestFailedRunArgs', 'BackupRecoveryUpdateProtectionGroupRunRequestFailedRunArgsDict']]]] failed_runs: Specfies the list of connections for the source.
        :param pulumi.Input[_builtins.str] group_id: Protection group id
        :param pulumi.Input[_builtins.str] run_id: The unique ID.
        :param pulumi.Input[_builtins.str] successful_run_ids: Specifies a list of Protection Group ids for which the state should change.
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BackupRecoveryUpdateProtectionGroupRunRequestState.__new__(_BackupRecoveryUpdateProtectionGroupRunRequestState)

        __props__.__dict__["backup_recovery_update_protection_group_run_request_id"] = backup_recovery_update_protection_group_run_request_id
        __props__.__dict__["failed_runs"] = failed_runs
        __props__.__dict__["group_id"] = group_id
        __props__.__dict__["run_id"] = run_id
        __props__.__dict__["successful_run_ids"] = successful_run_ids
        __props__.__dict__["update_protection_group_run_params"] = update_protection_group_run_params
        __props__.__dict__["x_ibm_tenant_id"] = x_ibm_tenant_id
        return BackupRecoveryUpdateProtectionGroupRunRequest(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="backupRecoveryUpdateProtectionGroupRunRequestId")
    def backup_recovery_update_protection_group_run_request_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "backup_recovery_update_protection_group_run_request_id")

    @_builtins.property
    @pulumi.getter(name="failedRuns")
    def failed_runs(self) -> pulumi.Output[Sequence['outputs.BackupRecoveryUpdateProtectionGroupRunRequestFailedRun']]:
        """
        Specfies the list of connections for the source.
        """
        return pulumi.get(self, "failed_runs")

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Protection group id
        """
        return pulumi.get(self, "group_id")

    @_builtins.property
    @pulumi.getter(name="runId")
    def run_id(self) -> pulumi.Output[_builtins.str]:
        """
        The unique ID.
        """
        return pulumi.get(self, "run_id")

    @_builtins.property
    @pulumi.getter(name="successfulRunIds")
    def successful_run_ids(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies a list of Protection Group ids for which the state should change.
        """
        return pulumi.get(self, "successful_run_ids")

    @_builtins.property
    @pulumi.getter(name="updateProtectionGroupRunParams")
    def update_protection_group_run_params(self) -> pulumi.Output[Sequence['outputs.BackupRecoveryUpdateProtectionGroupRunRequestUpdateProtectionGroupRunParam']]:
        return pulumi.get(self, "update_protection_group_run_params")

    @_builtins.property
    @pulumi.getter(name="xIbmTenantId")
    def x_ibm_tenant_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
        be specified.
        """
        return pulumi.get(self, "x_ibm_tenant_id")

