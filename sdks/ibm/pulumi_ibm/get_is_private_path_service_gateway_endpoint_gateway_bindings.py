# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetIsPrivatePathServiceGatewayEndpointGatewayBindingsResult',
    'AwaitableGetIsPrivatePathServiceGatewayEndpointGatewayBindingsResult',
    'get_is_private_path_service_gateway_endpoint_gateway_bindings',
    'get_is_private_path_service_gateway_endpoint_gateway_bindings_output',
]

@pulumi.output_type
class GetIsPrivatePathServiceGatewayEndpointGatewayBindingsResult:
    """
    A collection of values returned by getIsPrivatePathServiceGatewayEndpointGatewayBindings.
    """
    def __init__(__self__, account=None, endpoint_gateway_bindings=None, id=None, private_path_service_gateway=None, status=None):
        if account and not isinstance(account, str):
            raise TypeError("Expected argument 'account' to be a str")
        pulumi.set(__self__, "account", account)
        if endpoint_gateway_bindings and not isinstance(endpoint_gateway_bindings, list):
            raise TypeError("Expected argument 'endpoint_gateway_bindings' to be a list")
        pulumi.set(__self__, "endpoint_gateway_bindings", endpoint_gateway_bindings)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if private_path_service_gateway and not isinstance(private_path_service_gateway, str):
            raise TypeError("Expected argument 'private_path_service_gateway' to be a str")
        pulumi.set(__self__, "private_path_service_gateway", private_path_service_gateway)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter
    def account(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "account")

    @_builtins.property
    @pulumi.getter(name="endpointGatewayBindings")
    def endpoint_gateway_bindings(self) -> Sequence['outputs.GetIsPrivatePathServiceGatewayEndpointGatewayBindingsEndpointGatewayBindingResult']:
        return pulumi.get(self, "endpoint_gateway_bindings")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="privatePathServiceGateway")
    def private_path_service_gateway(self) -> _builtins.str:
        return pulumi.get(self, "private_path_service_gateway")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "status")


class AwaitableGetIsPrivatePathServiceGatewayEndpointGatewayBindingsResult(GetIsPrivatePathServiceGatewayEndpointGatewayBindingsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIsPrivatePathServiceGatewayEndpointGatewayBindingsResult(
            account=self.account,
            endpoint_gateway_bindings=self.endpoint_gateway_bindings,
            id=self.id,
            private_path_service_gateway=self.private_path_service_gateway,
            status=self.status)


def get_is_private_path_service_gateway_endpoint_gateway_bindings(account: Optional[_builtins.str] = None,
                                                                  id: Optional[_builtins.str] = None,
                                                                  private_path_service_gateway: Optional[_builtins.str] = None,
                                                                  status: Optional[_builtins.str] = None,
                                                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIsPrivatePathServiceGatewayEndpointGatewayBindingsResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['account'] = account
    __args__['id'] = id
    __args__['privatePathServiceGateway'] = private_path_service_gateway
    __args__['status'] = status
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getIsPrivatePathServiceGatewayEndpointGatewayBindings:getIsPrivatePathServiceGatewayEndpointGatewayBindings', __args__, opts=opts, typ=GetIsPrivatePathServiceGatewayEndpointGatewayBindingsResult, package_ref=_utilities.get_package()).value

    return AwaitableGetIsPrivatePathServiceGatewayEndpointGatewayBindingsResult(
        account=pulumi.get(__ret__, 'account'),
        endpoint_gateway_bindings=pulumi.get(__ret__, 'endpoint_gateway_bindings'),
        id=pulumi.get(__ret__, 'id'),
        private_path_service_gateway=pulumi.get(__ret__, 'private_path_service_gateway'),
        status=pulumi.get(__ret__, 'status'))
def get_is_private_path_service_gateway_endpoint_gateway_bindings_output(account: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                                         id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                                         private_path_service_gateway: Optional[pulumi.Input[_builtins.str]] = None,
                                                                         status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                                         opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetIsPrivatePathServiceGatewayEndpointGatewayBindingsResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['account'] = account
    __args__['id'] = id
    __args__['privatePathServiceGateway'] = private_path_service_gateway
    __args__['status'] = status
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getIsPrivatePathServiceGatewayEndpointGatewayBindings:getIsPrivatePathServiceGatewayEndpointGatewayBindings', __args__, opts=opts, typ=GetIsPrivatePathServiceGatewayEndpointGatewayBindingsResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetIsPrivatePathServiceGatewayEndpointGatewayBindingsResult(
        account=pulumi.get(__response__, 'account'),
        endpoint_gateway_bindings=pulumi.get(__response__, 'endpoint_gateway_bindings'),
        id=pulumi.get(__response__, 'id'),
        private_path_service_gateway=pulumi.get(__response__, 'private_path_service_gateway'),
        status=pulumi.get(__response__, 'status')))
