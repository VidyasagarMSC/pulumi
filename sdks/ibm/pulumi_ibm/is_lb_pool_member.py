# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IsLbPoolMemberArgs', 'IsLbPoolMember']

@pulumi.input_type
class IsLbPoolMemberArgs:
    def __init__(__self__, *,
                 lb: pulumi.Input[_builtins.str],
                 pool: pulumi.Input[_builtins.str],
                 port: pulumi.Input[_builtins.float],
                 is_lb_pool_member_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_address: Optional[pulumi.Input[_builtins.str]] = None,
                 target_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['IsLbPoolMemberTimeoutsArgs']] = None,
                 weight: Optional[pulumi.Input[_builtins.float]] = None):
        """
        The set of arguments for constructing a IsLbPoolMember resource.
        :param pulumi.Input[_builtins.str] lb: Load balancer ID
        :param pulumi.Input[_builtins.str] pool: Loadblancer Poold ID
        :param pulumi.Input[_builtins.float] port: Load Balancer Pool port
        :param pulumi.Input[_builtins.str] target_address: Load balancer pool member target address
        :param pulumi.Input[_builtins.str] target_id: Load balancer pool member target id
        :param pulumi.Input[_builtins.float] weight: Load balcner pool member weight
        """
        pulumi.set(__self__, "lb", lb)
        pulumi.set(__self__, "pool", pool)
        pulumi.set(__self__, "port", port)
        if is_lb_pool_member_id is not None:
            pulumi.set(__self__, "is_lb_pool_member_id", is_lb_pool_member_id)
        if target_address is not None:
            pulumi.set(__self__, "target_address", target_address)
        if target_id is not None:
            pulumi.set(__self__, "target_id", target_id)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)
        if weight is not None:
            pulumi.set(__self__, "weight", weight)

    @_builtins.property
    @pulumi.getter
    def lb(self) -> pulumi.Input[_builtins.str]:
        """
        Load balancer ID
        """
        return pulumi.get(self, "lb")

    @lb.setter
    def lb(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "lb", value)

    @_builtins.property
    @pulumi.getter
    def pool(self) -> pulumi.Input[_builtins.str]:
        """
        Loadblancer Poold ID
        """
        return pulumi.get(self, "pool")

    @pool.setter
    def pool(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "pool", value)

    @_builtins.property
    @pulumi.getter
    def port(self) -> pulumi.Input[_builtins.float]:
        """
        Load Balancer Pool port
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: pulumi.Input[_builtins.float]):
        pulumi.set(self, "port", value)

    @_builtins.property
    @pulumi.getter(name="isLbPoolMemberId")
    def is_lb_pool_member_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "is_lb_pool_member_id")

    @is_lb_pool_member_id.setter
    def is_lb_pool_member_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "is_lb_pool_member_id", value)

    @_builtins.property
    @pulumi.getter(name="targetAddress")
    def target_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Load balancer pool member target address
        """
        return pulumi.get(self, "target_address")

    @target_address.setter
    def target_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_address", value)

    @_builtins.property
    @pulumi.getter(name="targetId")
    def target_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Load balancer pool member target id
        """
        return pulumi.get(self, "target_id")

    @target_id.setter
    def target_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_id", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['IsLbPoolMemberTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['IsLbPoolMemberTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)

    @_builtins.property
    @pulumi.getter
    def weight(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Load balcner pool member weight
        """
        return pulumi.get(self, "weight")

    @weight.setter
    def weight(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "weight", value)


@pulumi.input_type
class _IsLbPoolMemberState:
    def __init__(__self__, *,
                 health: Optional[pulumi.Input[_builtins.str]] = None,
                 href: Optional[pulumi.Input[_builtins.str]] = None,
                 is_lb_pool_member_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lb: Optional[pulumi.Input[_builtins.str]] = None,
                 pool: Optional[pulumi.Input[_builtins.str]] = None,
                 port: Optional[pulumi.Input[_builtins.float]] = None,
                 provisioning_status: Optional[pulumi.Input[_builtins.str]] = None,
                 related_crn: Optional[pulumi.Input[_builtins.str]] = None,
                 target_address: Optional[pulumi.Input[_builtins.str]] = None,
                 target_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['IsLbPoolMemberTimeoutsArgs']] = None,
                 weight: Optional[pulumi.Input[_builtins.float]] = None):
        """
        Input properties used for looking up and filtering IsLbPoolMember resources.
        :param pulumi.Input[_builtins.str] health: LB Pool member health
        :param pulumi.Input[_builtins.str] href: LB pool member Href value
        :param pulumi.Input[_builtins.str] lb: Load balancer ID
        :param pulumi.Input[_builtins.str] pool: Loadblancer Poold ID
        :param pulumi.Input[_builtins.float] port: Load Balancer Pool port
        :param pulumi.Input[_builtins.str] provisioning_status: Load balancer Pool member provisioning status
        :param pulumi.Input[_builtins.str] related_crn: The crn of the LB resource
        :param pulumi.Input[_builtins.str] target_address: Load balancer pool member target address
        :param pulumi.Input[_builtins.str] target_id: Load balancer pool member target id
        :param pulumi.Input[_builtins.float] weight: Load balcner pool member weight
        """
        if health is not None:
            pulumi.set(__self__, "health", health)
        if href is not None:
            pulumi.set(__self__, "href", href)
        if is_lb_pool_member_id is not None:
            pulumi.set(__self__, "is_lb_pool_member_id", is_lb_pool_member_id)
        if lb is not None:
            pulumi.set(__self__, "lb", lb)
        if pool is not None:
            pulumi.set(__self__, "pool", pool)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if provisioning_status is not None:
            pulumi.set(__self__, "provisioning_status", provisioning_status)
        if related_crn is not None:
            pulumi.set(__self__, "related_crn", related_crn)
        if target_address is not None:
            pulumi.set(__self__, "target_address", target_address)
        if target_id is not None:
            pulumi.set(__self__, "target_id", target_id)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)
        if weight is not None:
            pulumi.set(__self__, "weight", weight)

    @_builtins.property
    @pulumi.getter
    def health(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        LB Pool member health
        """
        return pulumi.get(self, "health")

    @health.setter
    def health(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "health", value)

    @_builtins.property
    @pulumi.getter
    def href(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        LB pool member Href value
        """
        return pulumi.get(self, "href")

    @href.setter
    def href(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "href", value)

    @_builtins.property
    @pulumi.getter(name="isLbPoolMemberId")
    def is_lb_pool_member_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "is_lb_pool_member_id")

    @is_lb_pool_member_id.setter
    def is_lb_pool_member_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "is_lb_pool_member_id", value)

    @_builtins.property
    @pulumi.getter
    def lb(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Load balancer ID
        """
        return pulumi.get(self, "lb")

    @lb.setter
    def lb(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lb", value)

    @_builtins.property
    @pulumi.getter
    def pool(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Loadblancer Poold ID
        """
        return pulumi.get(self, "pool")

    @pool.setter
    def pool(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pool", value)

    @_builtins.property
    @pulumi.getter
    def port(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Load Balancer Pool port
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "port", value)

    @_builtins.property
    @pulumi.getter(name="provisioningStatus")
    def provisioning_status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Load balancer Pool member provisioning status
        """
        return pulumi.get(self, "provisioning_status")

    @provisioning_status.setter
    def provisioning_status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "provisioning_status", value)

    @_builtins.property
    @pulumi.getter(name="relatedCrn")
    def related_crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The crn of the LB resource
        """
        return pulumi.get(self, "related_crn")

    @related_crn.setter
    def related_crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "related_crn", value)

    @_builtins.property
    @pulumi.getter(name="targetAddress")
    def target_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Load balancer pool member target address
        """
        return pulumi.get(self, "target_address")

    @target_address.setter
    def target_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_address", value)

    @_builtins.property
    @pulumi.getter(name="targetId")
    def target_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Load balancer pool member target id
        """
        return pulumi.get(self, "target_id")

    @target_id.setter
    def target_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_id", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['IsLbPoolMemberTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['IsLbPoolMemberTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)

    @_builtins.property
    @pulumi.getter
    def weight(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Load balcner pool member weight
        """
        return pulumi.get(self, "weight")

    @weight.setter
    def weight(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "weight", value)


@pulumi.type_token("ibm:index/isLbPoolMember:IsLbPoolMember")
class IsLbPoolMember(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 is_lb_pool_member_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lb: Optional[pulumi.Input[_builtins.str]] = None,
                 pool: Optional[pulumi.Input[_builtins.str]] = None,
                 port: Optional[pulumi.Input[_builtins.float]] = None,
                 target_address: Optional[pulumi.Input[_builtins.str]] = None,
                 target_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input[Union['IsLbPoolMemberTimeoutsArgs', 'IsLbPoolMemberTimeoutsArgsDict']]] = None,
                 weight: Optional[pulumi.Input[_builtins.float]] = None,
                 __props__=None):
        """
        Create a IsLbPoolMember resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] lb: Load balancer ID
        :param pulumi.Input[_builtins.str] pool: Loadblancer Poold ID
        :param pulumi.Input[_builtins.float] port: Load Balancer Pool port
        :param pulumi.Input[_builtins.str] target_address: Load balancer pool member target address
        :param pulumi.Input[_builtins.str] target_id: Load balancer pool member target id
        :param pulumi.Input[_builtins.float] weight: Load balcner pool member weight
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IsLbPoolMemberArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a IsLbPoolMember resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param IsLbPoolMemberArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IsLbPoolMemberArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 is_lb_pool_member_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lb: Optional[pulumi.Input[_builtins.str]] = None,
                 pool: Optional[pulumi.Input[_builtins.str]] = None,
                 port: Optional[pulumi.Input[_builtins.float]] = None,
                 target_address: Optional[pulumi.Input[_builtins.str]] = None,
                 target_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input[Union['IsLbPoolMemberTimeoutsArgs', 'IsLbPoolMemberTimeoutsArgsDict']]] = None,
                 weight: Optional[pulumi.Input[_builtins.float]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IsLbPoolMemberArgs.__new__(IsLbPoolMemberArgs)

            __props__.__dict__["is_lb_pool_member_id"] = is_lb_pool_member_id
            if lb is None and not opts.urn:
                raise TypeError("Missing required property 'lb'")
            __props__.__dict__["lb"] = lb
            if pool is None and not opts.urn:
                raise TypeError("Missing required property 'pool'")
            __props__.__dict__["pool"] = pool
            if port is None and not opts.urn:
                raise TypeError("Missing required property 'port'")
            __props__.__dict__["port"] = port
            __props__.__dict__["target_address"] = target_address
            __props__.__dict__["target_id"] = target_id
            __props__.__dict__["timeouts"] = timeouts
            __props__.__dict__["weight"] = weight
            __props__.__dict__["health"] = None
            __props__.__dict__["href"] = None
            __props__.__dict__["provisioning_status"] = None
            __props__.__dict__["related_crn"] = None
        super(IsLbPoolMember, __self__).__init__(
            'ibm:index/isLbPoolMember:IsLbPoolMember',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            health: Optional[pulumi.Input[_builtins.str]] = None,
            href: Optional[pulumi.Input[_builtins.str]] = None,
            is_lb_pool_member_id: Optional[pulumi.Input[_builtins.str]] = None,
            lb: Optional[pulumi.Input[_builtins.str]] = None,
            pool: Optional[pulumi.Input[_builtins.str]] = None,
            port: Optional[pulumi.Input[_builtins.float]] = None,
            provisioning_status: Optional[pulumi.Input[_builtins.str]] = None,
            related_crn: Optional[pulumi.Input[_builtins.str]] = None,
            target_address: Optional[pulumi.Input[_builtins.str]] = None,
            target_id: Optional[pulumi.Input[_builtins.str]] = None,
            timeouts: Optional[pulumi.Input[Union['IsLbPoolMemberTimeoutsArgs', 'IsLbPoolMemberTimeoutsArgsDict']]] = None,
            weight: Optional[pulumi.Input[_builtins.float]] = None) -> 'IsLbPoolMember':
        """
        Get an existing IsLbPoolMember resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] health: LB Pool member health
        :param pulumi.Input[_builtins.str] href: LB pool member Href value
        :param pulumi.Input[_builtins.str] lb: Load balancer ID
        :param pulumi.Input[_builtins.str] pool: Loadblancer Poold ID
        :param pulumi.Input[_builtins.float] port: Load Balancer Pool port
        :param pulumi.Input[_builtins.str] provisioning_status: Load balancer Pool member provisioning status
        :param pulumi.Input[_builtins.str] related_crn: The crn of the LB resource
        :param pulumi.Input[_builtins.str] target_address: Load balancer pool member target address
        :param pulumi.Input[_builtins.str] target_id: Load balancer pool member target id
        :param pulumi.Input[_builtins.float] weight: Load balcner pool member weight
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IsLbPoolMemberState.__new__(_IsLbPoolMemberState)

        __props__.__dict__["health"] = health
        __props__.__dict__["href"] = href
        __props__.__dict__["is_lb_pool_member_id"] = is_lb_pool_member_id
        __props__.__dict__["lb"] = lb
        __props__.__dict__["pool"] = pool
        __props__.__dict__["port"] = port
        __props__.__dict__["provisioning_status"] = provisioning_status
        __props__.__dict__["related_crn"] = related_crn
        __props__.__dict__["target_address"] = target_address
        __props__.__dict__["target_id"] = target_id
        __props__.__dict__["timeouts"] = timeouts
        __props__.__dict__["weight"] = weight
        return IsLbPoolMember(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def health(self) -> pulumi.Output[_builtins.str]:
        """
        LB Pool member health
        """
        return pulumi.get(self, "health")

    @_builtins.property
    @pulumi.getter
    def href(self) -> pulumi.Output[_builtins.str]:
        """
        LB pool member Href value
        """
        return pulumi.get(self, "href")

    @_builtins.property
    @pulumi.getter(name="isLbPoolMemberId")
    def is_lb_pool_member_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "is_lb_pool_member_id")

    @_builtins.property
    @pulumi.getter
    def lb(self) -> pulumi.Output[_builtins.str]:
        """
        Load balancer ID
        """
        return pulumi.get(self, "lb")

    @_builtins.property
    @pulumi.getter
    def pool(self) -> pulumi.Output[_builtins.str]:
        """
        Loadblancer Poold ID
        """
        return pulumi.get(self, "pool")

    @_builtins.property
    @pulumi.getter
    def port(self) -> pulumi.Output[_builtins.float]:
        """
        Load Balancer Pool port
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter(name="provisioningStatus")
    def provisioning_status(self) -> pulumi.Output[_builtins.str]:
        """
        Load balancer Pool member provisioning status
        """
        return pulumi.get(self, "provisioning_status")

    @_builtins.property
    @pulumi.getter(name="relatedCrn")
    def related_crn(self) -> pulumi.Output[_builtins.str]:
        """
        The crn of the LB resource
        """
        return pulumi.get(self, "related_crn")

    @_builtins.property
    @pulumi.getter(name="targetAddress")
    def target_address(self) -> pulumi.Output[_builtins.str]:
        """
        Load balancer pool member target address
        """
        return pulumi.get(self, "target_address")

    @_builtins.property
    @pulumi.getter(name="targetId")
    def target_id(self) -> pulumi.Output[_builtins.str]:
        """
        Load balancer pool member target id
        """
        return pulumi.get(self, "target_id")

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> pulumi.Output[Optional['outputs.IsLbPoolMemberTimeouts']]:
        return pulumi.get(self, "timeouts")

    @_builtins.property
    @pulumi.getter
    def weight(self) -> pulumi.Output[_builtins.float]:
        """
        Load balcner pool member weight
        """
        return pulumi.get(self, "weight")

