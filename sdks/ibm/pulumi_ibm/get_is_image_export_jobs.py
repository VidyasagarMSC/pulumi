# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetIsImageExportJobsResult',
    'AwaitableGetIsImageExportJobsResult',
    'get_is_image_export_jobs',
    'get_is_image_export_jobs_output',
]

@pulumi.output_type
class GetIsImageExportJobsResult:
    """
    A collection of values returned by getIsImageExportJobs.
    """
    def __init__(__self__, export_jobs=None, id=None, image=None):
        if export_jobs and not isinstance(export_jobs, list):
            raise TypeError("Expected argument 'export_jobs' to be a list")
        pulumi.set(__self__, "export_jobs", export_jobs)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if image and not isinstance(image, str):
            raise TypeError("Expected argument 'image' to be a str")
        pulumi.set(__self__, "image", image)

    @_builtins.property
    @pulumi.getter(name="exportJobs")
    def export_jobs(self) -> Sequence['outputs.GetIsImageExportJobsExportJobResult']:
        return pulumi.get(self, "export_jobs")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def image(self) -> _builtins.str:
        return pulumi.get(self, "image")


class AwaitableGetIsImageExportJobsResult(GetIsImageExportJobsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIsImageExportJobsResult(
            export_jobs=self.export_jobs,
            id=self.id,
            image=self.image)


def get_is_image_export_jobs(id: Optional[_builtins.str] = None,
                             image: Optional[_builtins.str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIsImageExportJobsResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['image'] = image
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getIsImageExportJobs:getIsImageExportJobs', __args__, opts=opts, typ=GetIsImageExportJobsResult, package_ref=_utilities.get_package()).value

    return AwaitableGetIsImageExportJobsResult(
        export_jobs=pulumi.get(__ret__, 'export_jobs'),
        id=pulumi.get(__ret__, 'id'),
        image=pulumi.get(__ret__, 'image'))
def get_is_image_export_jobs_output(id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    image: Optional[pulumi.Input[_builtins.str]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetIsImageExportJobsResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['image'] = image
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getIsImageExportJobs:getIsImageExportJobs', __args__, opts=opts, typ=GetIsImageExportJobsResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetIsImageExportJobsResult(
        export_jobs=pulumi.get(__response__, 'export_jobs'),
        id=pulumi.get(__response__, 'id'),
        image=pulumi.get(__response__, 'image')))
