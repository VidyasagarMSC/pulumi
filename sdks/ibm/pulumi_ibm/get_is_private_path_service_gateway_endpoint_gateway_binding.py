# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetIsPrivatePathServiceGatewayEndpointGatewayBindingResult',
    'AwaitableGetIsPrivatePathServiceGatewayEndpointGatewayBindingResult',
    'get_is_private_path_service_gateway_endpoint_gateway_binding',
    'get_is_private_path_service_gateway_endpoint_gateway_binding_output',
]

@pulumi.output_type
class GetIsPrivatePathServiceGatewayEndpointGatewayBindingResult:
    """
    A collection of values returned by getIsPrivatePathServiceGatewayEndpointGatewayBinding.
    """
    def __init__(__self__, accounts=None, created_at=None, endpoint_gateway_binding=None, expiration_at=None, href=None, id=None, lifecycle_state=None, private_path_service_gateway=None, resource_type=None, status=None, updated_at=None):
        if accounts and not isinstance(accounts, list):
            raise TypeError("Expected argument 'accounts' to be a list")
        pulumi.set(__self__, "accounts", accounts)
        if created_at and not isinstance(created_at, str):
            raise TypeError("Expected argument 'created_at' to be a str")
        pulumi.set(__self__, "created_at", created_at)
        if endpoint_gateway_binding and not isinstance(endpoint_gateway_binding, str):
            raise TypeError("Expected argument 'endpoint_gateway_binding' to be a str")
        pulumi.set(__self__, "endpoint_gateway_binding", endpoint_gateway_binding)
        if expiration_at and not isinstance(expiration_at, str):
            raise TypeError("Expected argument 'expiration_at' to be a str")
        pulumi.set(__self__, "expiration_at", expiration_at)
        if href and not isinstance(href, str):
            raise TypeError("Expected argument 'href' to be a str")
        pulumi.set(__self__, "href", href)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if lifecycle_state and not isinstance(lifecycle_state, str):
            raise TypeError("Expected argument 'lifecycle_state' to be a str")
        pulumi.set(__self__, "lifecycle_state", lifecycle_state)
        if private_path_service_gateway and not isinstance(private_path_service_gateway, str):
            raise TypeError("Expected argument 'private_path_service_gateway' to be a str")
        pulumi.set(__self__, "private_path_service_gateway", private_path_service_gateway)
        if resource_type and not isinstance(resource_type, str):
            raise TypeError("Expected argument 'resource_type' to be a str")
        pulumi.set(__self__, "resource_type", resource_type)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if updated_at and not isinstance(updated_at, str):
            raise TypeError("Expected argument 'updated_at' to be a str")
        pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter
    def accounts(self) -> Sequence['outputs.GetIsPrivatePathServiceGatewayEndpointGatewayBindingAccountResult']:
        return pulumi.get(self, "accounts")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> _builtins.str:
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="endpointGatewayBinding")
    def endpoint_gateway_binding(self) -> _builtins.str:
        return pulumi.get(self, "endpoint_gateway_binding")

    @_builtins.property
    @pulumi.getter(name="expirationAt")
    def expiration_at(self) -> _builtins.str:
        return pulumi.get(self, "expiration_at")

    @_builtins.property
    @pulumi.getter
    def href(self) -> _builtins.str:
        return pulumi.get(self, "href")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lifecycleState")
    def lifecycle_state(self) -> _builtins.str:
        return pulumi.get(self, "lifecycle_state")

    @_builtins.property
    @pulumi.getter(name="privatePathServiceGateway")
    def private_path_service_gateway(self) -> _builtins.str:
        return pulumi.get(self, "private_path_service_gateway")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> _builtins.str:
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> _builtins.str:
        return pulumi.get(self, "updated_at")


class AwaitableGetIsPrivatePathServiceGatewayEndpointGatewayBindingResult(GetIsPrivatePathServiceGatewayEndpointGatewayBindingResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIsPrivatePathServiceGatewayEndpointGatewayBindingResult(
            accounts=self.accounts,
            created_at=self.created_at,
            endpoint_gateway_binding=self.endpoint_gateway_binding,
            expiration_at=self.expiration_at,
            href=self.href,
            id=self.id,
            lifecycle_state=self.lifecycle_state,
            private_path_service_gateway=self.private_path_service_gateway,
            resource_type=self.resource_type,
            status=self.status,
            updated_at=self.updated_at)


def get_is_private_path_service_gateway_endpoint_gateway_binding(endpoint_gateway_binding: Optional[_builtins.str] = None,
                                                                 id: Optional[_builtins.str] = None,
                                                                 private_path_service_gateway: Optional[_builtins.str] = None,
                                                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIsPrivatePathServiceGatewayEndpointGatewayBindingResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['endpointGatewayBinding'] = endpoint_gateway_binding
    __args__['id'] = id
    __args__['privatePathServiceGateway'] = private_path_service_gateway
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getIsPrivatePathServiceGatewayEndpointGatewayBinding:getIsPrivatePathServiceGatewayEndpointGatewayBinding', __args__, opts=opts, typ=GetIsPrivatePathServiceGatewayEndpointGatewayBindingResult, package_ref=_utilities.get_package()).value

    return AwaitableGetIsPrivatePathServiceGatewayEndpointGatewayBindingResult(
        accounts=pulumi.get(__ret__, 'accounts'),
        created_at=pulumi.get(__ret__, 'created_at'),
        endpoint_gateway_binding=pulumi.get(__ret__, 'endpoint_gateway_binding'),
        expiration_at=pulumi.get(__ret__, 'expiration_at'),
        href=pulumi.get(__ret__, 'href'),
        id=pulumi.get(__ret__, 'id'),
        lifecycle_state=pulumi.get(__ret__, 'lifecycle_state'),
        private_path_service_gateway=pulumi.get(__ret__, 'private_path_service_gateway'),
        resource_type=pulumi.get(__ret__, 'resource_type'),
        status=pulumi.get(__ret__, 'status'),
        updated_at=pulumi.get(__ret__, 'updated_at'))
def get_is_private_path_service_gateway_endpoint_gateway_binding_output(endpoint_gateway_binding: Optional[pulumi.Input[_builtins.str]] = None,
                                                                        id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                                        private_path_service_gateway: Optional[pulumi.Input[_builtins.str]] = None,
                                                                        opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetIsPrivatePathServiceGatewayEndpointGatewayBindingResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['endpointGatewayBinding'] = endpoint_gateway_binding
    __args__['id'] = id
    __args__['privatePathServiceGateway'] = private_path_service_gateway
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getIsPrivatePathServiceGatewayEndpointGatewayBinding:getIsPrivatePathServiceGatewayEndpointGatewayBinding', __args__, opts=opts, typ=GetIsPrivatePathServiceGatewayEndpointGatewayBindingResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetIsPrivatePathServiceGatewayEndpointGatewayBindingResult(
        accounts=pulumi.get(__response__, 'accounts'),
        created_at=pulumi.get(__response__, 'created_at'),
        endpoint_gateway_binding=pulumi.get(__response__, 'endpoint_gateway_binding'),
        expiration_at=pulumi.get(__response__, 'expiration_at'),
        href=pulumi.get(__response__, 'href'),
        id=pulumi.get(__response__, 'id'),
        lifecycle_state=pulumi.get(__response__, 'lifecycle_state'),
        private_path_service_gateway=pulumi.get(__response__, 'private_path_service_gateway'),
        resource_type=pulumi.get(__response__, 'resource_type'),
        status=pulumi.get(__response__, 'status'),
        updated_at=pulumi.get(__response__, 'updated_at')))
