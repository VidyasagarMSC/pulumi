# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['KmsKmipClientCertArgs', 'KmsKmipClientCert']

@pulumi.input_type
class KmsKmipClientCertArgs:
    def __init__(__self__, *,
                 certificate: pulumi.Input[_builtins.str],
                 instance_id: pulumi.Input[_builtins.str],
                 adapter_id: Optional[pulumi.Input[_builtins.str]] = None,
                 endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
                 kms_kmip_client_cert_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a KmsKmipClientCert resource.
        :param pulumi.Input[_builtins.str] certificate: The PEM-encoded contents of the certificate
        :param pulumi.Input[_builtins.str] instance_id: Key protect Instance GUID
        :param pulumi.Input[_builtins.str] adapter_id: The name or UUID of the KMIP adapter that contains the cert
        :param pulumi.Input[_builtins.str] endpoint_type: public or private
        :param pulumi.Input[_builtins.str] name: The name of the KMIP client certificate
        """
        pulumi.set(__self__, "certificate", certificate)
        pulumi.set(__self__, "instance_id", instance_id)
        if adapter_id is not None:
            pulumi.set(__self__, "adapter_id", adapter_id)
        if endpoint_type is not None:
            pulumi.set(__self__, "endpoint_type", endpoint_type)
        if kms_kmip_client_cert_id is not None:
            pulumi.set(__self__, "kms_kmip_client_cert_id", kms_kmip_client_cert_id)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def certificate(self) -> pulumi.Input[_builtins.str]:
        """
        The PEM-encoded contents of the certificate
        """
        return pulumi.get(self, "certificate")

    @certificate.setter
    def certificate(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "certificate", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        Key protect Instance GUID
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="adapterId")
    def adapter_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name or UUID of the KMIP adapter that contains the cert
        """
        return pulumi.get(self, "adapter_id")

    @adapter_id.setter
    def adapter_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "adapter_id", value)

    @_builtins.property
    @pulumi.getter(name="endpointType")
    def endpoint_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        public or private
        """
        return pulumi.get(self, "endpoint_type")

    @endpoint_type.setter
    def endpoint_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "endpoint_type", value)

    @_builtins.property
    @pulumi.getter(name="kmsKmipClientCertId")
    def kms_kmip_client_cert_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "kms_kmip_client_cert_id")

    @kms_kmip_client_cert_id.setter
    def kms_kmip_client_cert_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "kms_kmip_client_cert_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the KMIP client certificate
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _KmsKmipClientCertState:
    def __init__(__self__, *,
                 adapter_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cert_id: Optional[pulumi.Input[_builtins.str]] = None,
                 certificate: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_by: Optional[pulumi.Input[_builtins.str]] = None,
                 endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 kms_kmip_client_cert_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering KmsKmipClientCert resources.
        :param pulumi.Input[_builtins.str] adapter_id: The name or UUID of the KMIP adapter that contains the cert
        :param pulumi.Input[_builtins.str] cert_id: The UUID of the KMIP cert
        :param pulumi.Input[_builtins.str] certificate: The PEM-encoded contents of the certificate
        :param pulumi.Input[_builtins.str] created_at: The date when a resource was created. The date format follows RFC 3339.
        :param pulumi.Input[_builtins.str] created_by: The unique identifier that is associated with the entity that created the adapter.
        :param pulumi.Input[_builtins.str] endpoint_type: public or private
        :param pulumi.Input[_builtins.str] instance_id: Key protect Instance GUID
        :param pulumi.Input[_builtins.str] name: The name of the KMIP client certificate
        """
        if adapter_id is not None:
            pulumi.set(__self__, "adapter_id", adapter_id)
        if cert_id is not None:
            pulumi.set(__self__, "cert_id", cert_id)
        if certificate is not None:
            pulumi.set(__self__, "certificate", certificate)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if endpoint_type is not None:
            pulumi.set(__self__, "endpoint_type", endpoint_type)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if kms_kmip_client_cert_id is not None:
            pulumi.set(__self__, "kms_kmip_client_cert_id", kms_kmip_client_cert_id)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="adapterId")
    def adapter_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name or UUID of the KMIP adapter that contains the cert
        """
        return pulumi.get(self, "adapter_id")

    @adapter_id.setter
    def adapter_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "adapter_id", value)

    @_builtins.property
    @pulumi.getter(name="certId")
    def cert_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The UUID of the KMIP cert
        """
        return pulumi.get(self, "cert_id")

    @cert_id.setter
    def cert_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cert_id", value)

    @_builtins.property
    @pulumi.getter
    def certificate(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The PEM-encoded contents of the certificate
        """
        return pulumi.get(self, "certificate")

    @certificate.setter
    def certificate(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "certificate", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date when a resource was created. The date format follows RFC 3339.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique identifier that is associated with the entity that created the adapter.
        """
        return pulumi.get(self, "created_by")

    @created_by.setter
    def created_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_by", value)

    @_builtins.property
    @pulumi.getter(name="endpointType")
    def endpoint_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        public or private
        """
        return pulumi.get(self, "endpoint_type")

    @endpoint_type.setter
    def endpoint_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "endpoint_type", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Key protect Instance GUID
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="kmsKmipClientCertId")
    def kms_kmip_client_cert_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "kms_kmip_client_cert_id")

    @kms_kmip_client_cert_id.setter
    def kms_kmip_client_cert_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "kms_kmip_client_cert_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the KMIP client certificate
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)


@pulumi.type_token("ibm:index/kmsKmipClientCert:KmsKmipClientCert")
class KmsKmipClientCert(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 adapter_id: Optional[pulumi.Input[_builtins.str]] = None,
                 certificate: Optional[pulumi.Input[_builtins.str]] = None,
                 endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 kms_kmip_client_cert_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a KmsKmipClientCert resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] adapter_id: The name or UUID of the KMIP adapter that contains the cert
        :param pulumi.Input[_builtins.str] certificate: The PEM-encoded contents of the certificate
        :param pulumi.Input[_builtins.str] endpoint_type: public or private
        :param pulumi.Input[_builtins.str] instance_id: Key protect Instance GUID
        :param pulumi.Input[_builtins.str] name: The name of the KMIP client certificate
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: KmsKmipClientCertArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a KmsKmipClientCert resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param KmsKmipClientCertArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(KmsKmipClientCertArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 adapter_id: Optional[pulumi.Input[_builtins.str]] = None,
                 certificate: Optional[pulumi.Input[_builtins.str]] = None,
                 endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 kms_kmip_client_cert_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = KmsKmipClientCertArgs.__new__(KmsKmipClientCertArgs)

            __props__.__dict__["adapter_id"] = adapter_id
            if certificate is None and not opts.urn:
                raise TypeError("Missing required property 'certificate'")
            __props__.__dict__["certificate"] = None if certificate is None else pulumi.Output.secret(certificate)
            __props__.__dict__["endpoint_type"] = endpoint_type
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["kms_kmip_client_cert_id"] = kms_kmip_client_cert_id
            __props__.__dict__["name"] = name
            __props__.__dict__["cert_id"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_by"] = None
        secret_opts = pulumi.ResourceOptions(additional_secret_outputs=["certificate"])
        opts = pulumi.ResourceOptions.merge(opts, secret_opts)
        super(KmsKmipClientCert, __self__).__init__(
            'ibm:index/kmsKmipClientCert:KmsKmipClientCert',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            adapter_id: Optional[pulumi.Input[_builtins.str]] = None,
            cert_id: Optional[pulumi.Input[_builtins.str]] = None,
            certificate: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_by: Optional[pulumi.Input[_builtins.str]] = None,
            endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            kms_kmip_client_cert_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None) -> 'KmsKmipClientCert':
        """
        Get an existing KmsKmipClientCert resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] adapter_id: The name or UUID of the KMIP adapter that contains the cert
        :param pulumi.Input[_builtins.str] cert_id: The UUID of the KMIP cert
        :param pulumi.Input[_builtins.str] certificate: The PEM-encoded contents of the certificate
        :param pulumi.Input[_builtins.str] created_at: The date when a resource was created. The date format follows RFC 3339.
        :param pulumi.Input[_builtins.str] created_by: The unique identifier that is associated with the entity that created the adapter.
        :param pulumi.Input[_builtins.str] endpoint_type: public or private
        :param pulumi.Input[_builtins.str] instance_id: Key protect Instance GUID
        :param pulumi.Input[_builtins.str] name: The name of the KMIP client certificate
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _KmsKmipClientCertState.__new__(_KmsKmipClientCertState)

        __props__.__dict__["adapter_id"] = adapter_id
        __props__.__dict__["cert_id"] = cert_id
        __props__.__dict__["certificate"] = certificate
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_by"] = created_by
        __props__.__dict__["endpoint_type"] = endpoint_type
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["kms_kmip_client_cert_id"] = kms_kmip_client_cert_id
        __props__.__dict__["name"] = name
        return KmsKmipClientCert(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="adapterId")
    def adapter_id(self) -> pulumi.Output[_builtins.str]:
        """
        The name or UUID of the KMIP adapter that contains the cert
        """
        return pulumi.get(self, "adapter_id")

    @_builtins.property
    @pulumi.getter(name="certId")
    def cert_id(self) -> pulumi.Output[_builtins.str]:
        """
        The UUID of the KMIP cert
        """
        return pulumi.get(self, "cert_id")

    @_builtins.property
    @pulumi.getter
    def certificate(self) -> pulumi.Output[_builtins.str]:
        """
        The PEM-encoded contents of the certificate
        """
        return pulumi.get(self, "certificate")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The date when a resource was created. The date format follows RFC 3339.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> pulumi.Output[_builtins.str]:
        """
        The unique identifier that is associated with the entity that created the adapter.
        """
        return pulumi.get(self, "created_by")

    @_builtins.property
    @pulumi.getter(name="endpointType")
    def endpoint_type(self) -> pulumi.Output[_builtins.str]:
        """
        public or private
        """
        return pulumi.get(self, "endpoint_type")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        Key protect Instance GUID
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter(name="kmsKmipClientCertId")
    def kms_kmip_client_cert_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "kms_kmip_client_cert_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the KMIP client certificate
        """
        return pulumi.get(self, "name")

