# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['EnterpriseArgs', 'Enterprise']

@pulumi.input_type
class EnterpriseArgs:
    def __init__(__self__, *,
                 primary_contact_iam_id: pulumi.Input[_builtins.str],
                 source_account_id: pulumi.Input[_builtins.str],
                 domain: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['EnterpriseTimeoutsArgs']] = None):
        """
        The set of arguments for constructing a Enterprise resource.
        :param pulumi.Input[_builtins.str] primary_contact_iam_id: The IAM ID of the enterprise primary contact, such as `IBMid-0123ABC`. The IAM ID must already exist.
        :param pulumi.Input[_builtins.str] source_account_id: The ID of the account that is used to create the enterprise.
        :param pulumi.Input[_builtins.str] domain: A domain or subdomain for the enterprise, such as `example.com` or `my.example.com`.
        :param pulumi.Input[_builtins.str] name: The name of the enterprise. This field must have 3 - 60 characters.
        """
        pulumi.set(__self__, "primary_contact_iam_id", primary_contact_iam_id)
        pulumi.set(__self__, "source_account_id", source_account_id)
        if domain is not None:
            pulumi.set(__self__, "domain", domain)
        if enterprise_id is not None:
            pulumi.set(__self__, "enterprise_id", enterprise_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)

    @_builtins.property
    @pulumi.getter(name="primaryContactIamId")
    def primary_contact_iam_id(self) -> pulumi.Input[_builtins.str]:
        """
        The IAM ID of the enterprise primary contact, such as `IBMid-0123ABC`. The IAM ID must already exist.
        """
        return pulumi.get(self, "primary_contact_iam_id")

    @primary_contact_iam_id.setter
    def primary_contact_iam_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "primary_contact_iam_id", value)

    @_builtins.property
    @pulumi.getter(name="sourceAccountId")
    def source_account_id(self) -> pulumi.Input[_builtins.str]:
        """
        The ID of the account that is used to create the enterprise.
        """
        return pulumi.get(self, "source_account_id")

    @source_account_id.setter
    def source_account_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "source_account_id", value)

    @_builtins.property
    @pulumi.getter
    def domain(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        A domain or subdomain for the enterprise, such as `example.com` or `my.example.com`.
        """
        return pulumi.get(self, "domain")

    @domain.setter
    def domain(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "domain", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseId")
    def enterprise_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enterprise_id")

    @enterprise_id.setter
    def enterprise_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the enterprise. This field must have 3 - 60 characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['EnterpriseTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['EnterpriseTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)


@pulumi.input_type
class _EnterpriseState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_by: Optional[pulumi.Input[_builtins.str]] = None,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 domain: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 primary_contact_email: Optional[pulumi.Input[_builtins.str]] = None,
                 primary_contact_iam_id: Optional[pulumi.Input[_builtins.str]] = None,
                 source_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 state: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['EnterpriseTimeoutsArgs']] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_by: Optional[pulumi.Input[_builtins.str]] = None,
                 url: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering Enterprise resources.
        :param pulumi.Input[_builtins.str] created_at: The time stamp at which the enterprise was created.
        :param pulumi.Input[_builtins.str] created_by: The IAM ID of the user or service that created the enterprise.
        :param pulumi.Input[_builtins.str] crn: The Cloud Resource Name (CRN) of the enterprise.
        :param pulumi.Input[_builtins.str] domain: A domain or subdomain for the enterprise, such as `example.com` or `my.example.com`.
        :param pulumi.Input[_builtins.str] enterprise_account_id: The enterprise account ID.
        :param pulumi.Input[_builtins.str] name: The name of the enterprise. This field must have 3 - 60 characters.
        :param pulumi.Input[_builtins.str] primary_contact_email: The email of the primary contact of the enterprise.
        :param pulumi.Input[_builtins.str] primary_contact_iam_id: The IAM ID of the enterprise primary contact, such as `IBMid-0123ABC`. The IAM ID must already exist.
        :param pulumi.Input[_builtins.str] source_account_id: The ID of the account that is used to create the enterprise.
        :param pulumi.Input[_builtins.str] state: The state of the enterprise.
        :param pulumi.Input[_builtins.str] updated_at: The time stamp at which the enterprise was last updated.
        :param pulumi.Input[_builtins.str] updated_by: The IAM ID of the user or service that updated the enterprise.
        :param pulumi.Input[_builtins.str] url: The URL of the enterprise.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if crn is not None:
            pulumi.set(__self__, "crn", crn)
        if domain is not None:
            pulumi.set(__self__, "domain", domain)
        if enterprise_account_id is not None:
            pulumi.set(__self__, "enterprise_account_id", enterprise_account_id)
        if enterprise_id is not None:
            pulumi.set(__self__, "enterprise_id", enterprise_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if primary_contact_email is not None:
            pulumi.set(__self__, "primary_contact_email", primary_contact_email)
        if primary_contact_iam_id is not None:
            pulumi.set(__self__, "primary_contact_iam_id", primary_contact_iam_id)
        if source_account_id is not None:
            pulumi.set(__self__, "source_account_id", source_account_id)
        if state is not None:
            pulumi.set(__self__, "state", state)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if updated_by is not None:
            pulumi.set(__self__, "updated_by", updated_by)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time stamp at which the enterprise was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The IAM ID of the user or service that created the enterprise.
        """
        return pulumi.get(self, "created_by")

    @created_by.setter
    def created_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_by", value)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Cloud Resource Name (CRN) of the enterprise.
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter
    def domain(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        A domain or subdomain for the enterprise, such as `example.com` or `my.example.com`.
        """
        return pulumi.get(self, "domain")

    @domain.setter
    def domain(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "domain", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseAccountId")
    def enterprise_account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The enterprise account ID.
        """
        return pulumi.get(self, "enterprise_account_id")

    @enterprise_account_id.setter
    def enterprise_account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_account_id", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseId")
    def enterprise_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enterprise_id")

    @enterprise_id.setter
    def enterprise_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the enterprise. This field must have 3 - 60 characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="primaryContactEmail")
    def primary_contact_email(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The email of the primary contact of the enterprise.
        """
        return pulumi.get(self, "primary_contact_email")

    @primary_contact_email.setter
    def primary_contact_email(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "primary_contact_email", value)

    @_builtins.property
    @pulumi.getter(name="primaryContactIamId")
    def primary_contact_iam_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The IAM ID of the enterprise primary contact, such as `IBMid-0123ABC`. The IAM ID must already exist.
        """
        return pulumi.get(self, "primary_contact_iam_id")

    @primary_contact_iam_id.setter
    def primary_contact_iam_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "primary_contact_iam_id", value)

    @_builtins.property
    @pulumi.getter(name="sourceAccountId")
    def source_account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the account that is used to create the enterprise.
        """
        return pulumi.get(self, "source_account_id")

    @source_account_id.setter
    def source_account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_account_id", value)

    @_builtins.property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The state of the enterprise.
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "state", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['EnterpriseTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['EnterpriseTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time stamp at which the enterprise was last updated.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The IAM ID of the user or service that updated the enterprise.
        """
        return pulumi.get(self, "updated_by")

    @updated_by.setter
    def updated_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_by", value)

    @_builtins.property
    @pulumi.getter
    def url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL of the enterprise.
        """
        return pulumi.get(self, "url")

    @url.setter
    def url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "url", value)


@pulumi.type_token("ibm:index/enterprise:Enterprise")
class Enterprise(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 domain: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 primary_contact_iam_id: Optional[pulumi.Input[_builtins.str]] = None,
                 source_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input[Union['EnterpriseTimeoutsArgs', 'EnterpriseTimeoutsArgsDict']]] = None,
                 __props__=None):
        """
        Create a Enterprise resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] domain: A domain or subdomain for the enterprise, such as `example.com` or `my.example.com`.
        :param pulumi.Input[_builtins.str] name: The name of the enterprise. This field must have 3 - 60 characters.
        :param pulumi.Input[_builtins.str] primary_contact_iam_id: The IAM ID of the enterprise primary contact, such as `IBMid-0123ABC`. The IAM ID must already exist.
        :param pulumi.Input[_builtins.str] source_account_id: The ID of the account that is used to create the enterprise.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: EnterpriseArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a Enterprise resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param EnterpriseArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(EnterpriseArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 domain: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 primary_contact_iam_id: Optional[pulumi.Input[_builtins.str]] = None,
                 source_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input[Union['EnterpriseTimeoutsArgs', 'EnterpriseTimeoutsArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = EnterpriseArgs.__new__(EnterpriseArgs)

            __props__.__dict__["domain"] = domain
            __props__.__dict__["enterprise_id"] = enterprise_id
            __props__.__dict__["name"] = name
            if primary_contact_iam_id is None and not opts.urn:
                raise TypeError("Missing required property 'primary_contact_iam_id'")
            __props__.__dict__["primary_contact_iam_id"] = primary_contact_iam_id
            if source_account_id is None and not opts.urn:
                raise TypeError("Missing required property 'source_account_id'")
            __props__.__dict__["source_account_id"] = source_account_id
            __props__.__dict__["timeouts"] = timeouts
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_by"] = None
            __props__.__dict__["crn"] = None
            __props__.__dict__["enterprise_account_id"] = None
            __props__.__dict__["primary_contact_email"] = None
            __props__.__dict__["state"] = None
            __props__.__dict__["updated_at"] = None
            __props__.__dict__["updated_by"] = None
            __props__.__dict__["url"] = None
        super(Enterprise, __self__).__init__(
            'ibm:index/enterprise:Enterprise',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_by: Optional[pulumi.Input[_builtins.str]] = None,
            crn: Optional[pulumi.Input[_builtins.str]] = None,
            domain: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_account_id: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            primary_contact_email: Optional[pulumi.Input[_builtins.str]] = None,
            primary_contact_iam_id: Optional[pulumi.Input[_builtins.str]] = None,
            source_account_id: Optional[pulumi.Input[_builtins.str]] = None,
            state: Optional[pulumi.Input[_builtins.str]] = None,
            timeouts: Optional[pulumi.Input[Union['EnterpriseTimeoutsArgs', 'EnterpriseTimeoutsArgsDict']]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            updated_by: Optional[pulumi.Input[_builtins.str]] = None,
            url: Optional[pulumi.Input[_builtins.str]] = None) -> 'Enterprise':
        """
        Get an existing Enterprise resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: The time stamp at which the enterprise was created.
        :param pulumi.Input[_builtins.str] created_by: The IAM ID of the user or service that created the enterprise.
        :param pulumi.Input[_builtins.str] crn: The Cloud Resource Name (CRN) of the enterprise.
        :param pulumi.Input[_builtins.str] domain: A domain or subdomain for the enterprise, such as `example.com` or `my.example.com`.
        :param pulumi.Input[_builtins.str] enterprise_account_id: The enterprise account ID.
        :param pulumi.Input[_builtins.str] name: The name of the enterprise. This field must have 3 - 60 characters.
        :param pulumi.Input[_builtins.str] primary_contact_email: The email of the primary contact of the enterprise.
        :param pulumi.Input[_builtins.str] primary_contact_iam_id: The IAM ID of the enterprise primary contact, such as `IBMid-0123ABC`. The IAM ID must already exist.
        :param pulumi.Input[_builtins.str] source_account_id: The ID of the account that is used to create the enterprise.
        :param pulumi.Input[_builtins.str] state: The state of the enterprise.
        :param pulumi.Input[_builtins.str] updated_at: The time stamp at which the enterprise was last updated.
        :param pulumi.Input[_builtins.str] updated_by: The IAM ID of the user or service that updated the enterprise.
        :param pulumi.Input[_builtins.str] url: The URL of the enterprise.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _EnterpriseState.__new__(_EnterpriseState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_by"] = created_by
        __props__.__dict__["crn"] = crn
        __props__.__dict__["domain"] = domain
        __props__.__dict__["enterprise_account_id"] = enterprise_account_id
        __props__.__dict__["enterprise_id"] = enterprise_id
        __props__.__dict__["name"] = name
        __props__.__dict__["primary_contact_email"] = primary_contact_email
        __props__.__dict__["primary_contact_iam_id"] = primary_contact_iam_id
        __props__.__dict__["source_account_id"] = source_account_id
        __props__.__dict__["state"] = state
        __props__.__dict__["timeouts"] = timeouts
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["updated_by"] = updated_by
        __props__.__dict__["url"] = url
        return Enterprise(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The time stamp at which the enterprise was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> pulumi.Output[_builtins.str]:
        """
        The IAM ID of the user or service that created the enterprise.
        """
        return pulumi.get(self, "created_by")

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Output[_builtins.str]:
        """
        The Cloud Resource Name (CRN) of the enterprise.
        """
        return pulumi.get(self, "crn")

    @_builtins.property
    @pulumi.getter
    def domain(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        A domain or subdomain for the enterprise, such as `example.com` or `my.example.com`.
        """
        return pulumi.get(self, "domain")

    @_builtins.property
    @pulumi.getter(name="enterpriseAccountId")
    def enterprise_account_id(self) -> pulumi.Output[_builtins.str]:
        """
        The enterprise account ID.
        """
        return pulumi.get(self, "enterprise_account_id")

    @_builtins.property
    @pulumi.getter(name="enterpriseId")
    def enterprise_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "enterprise_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the enterprise. This field must have 3 - 60 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="primaryContactEmail")
    def primary_contact_email(self) -> pulumi.Output[_builtins.str]:
        """
        The email of the primary contact of the enterprise.
        """
        return pulumi.get(self, "primary_contact_email")

    @_builtins.property
    @pulumi.getter(name="primaryContactIamId")
    def primary_contact_iam_id(self) -> pulumi.Output[_builtins.str]:
        """
        The IAM ID of the enterprise primary contact, such as `IBMid-0123ABC`. The IAM ID must already exist.
        """
        return pulumi.get(self, "primary_contact_iam_id")

    @_builtins.property
    @pulumi.getter(name="sourceAccountId")
    def source_account_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the account that is used to create the enterprise.
        """
        return pulumi.get(self, "source_account_id")

    @_builtins.property
    @pulumi.getter
    def state(self) -> pulumi.Output[_builtins.str]:
        """
        The state of the enterprise.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> pulumi.Output[Optional['outputs.EnterpriseTimeouts']]:
        return pulumi.get(self, "timeouts")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The time stamp at which the enterprise was last updated.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> pulumi.Output[_builtins.str]:
        """
        The IAM ID of the user or service that updated the enterprise.
        """
        return pulumi.get(self, "updated_by")

    @_builtins.property
    @pulumi.getter
    def url(self) -> pulumi.Output[_builtins.str]:
        """
        The URL of the enterprise.
        """
        return pulumi.get(self, "url")

