# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['CbrRuleArgs', 'CbrRule']

@pulumi.input_type
class CbrRuleArgs:
    def __init__(__self__, *,
                 resources: pulumi.Input[Sequence[pulumi.Input['CbrRuleResourceArgs']]],
                 cbr_rule_id: Optional[pulumi.Input[_builtins.str]] = None,
                 contexts: Optional[pulumi.Input[Sequence[pulumi.Input['CbrRuleContextArgs']]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enforcement_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 operations: Optional[pulumi.Input['CbrRuleOperationsArgs']] = None,
                 timeouts: Optional[pulumi.Input['CbrRuleTimeoutsArgs']] = None,
                 transaction_id: Optional[pulumi.Input[_builtins.str]] = None,
                 x_correlation_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a CbrRule resource.
        :param pulumi.Input[Sequence[pulumi.Input['CbrRuleResourceArgs']]] resources: The resources this rule apply to.
        :param pulumi.Input[Sequence[pulumi.Input['CbrRuleContextArgs']]] contexts: The contexts this rule applies to.
        :param pulumi.Input[_builtins.str] description: The description of the rule.
        :param pulumi.Input[_builtins.str] enforcement_mode: The rule enforcement mode: * `enabled` - The restrictions are enforced and reported. This is the default. * `disabled` -
               The restrictions are disabled. Nothing is enforced or reported. * `report` - The restrictions are evaluated and
               reported, but not enforced.
        :param pulumi.Input['CbrRuleOperationsArgs'] operations: The operations this rule applies to.
        :param pulumi.Input[_builtins.str] transaction_id: The `Transaction-Id` header behaves as the `X-Correlation-Id` header. It is supported for backward compatibility with
               other IBM platform services that support the `Transaction-Id` header only. If both `X-Correlation-Id` and
               `Transaction-Id` are provided, `X-Correlation-Id` has the precedence over `Transaction-Id`.
        :param pulumi.Input[_builtins.str] x_correlation_id: The supplied or generated value of this header is logged for a request and repeated in a response header for the
               corresponding response. The same value is used for downstream requests and retries of those requests. If a value of this
               headers is not supplied in a request, the service generates a random (version 4) UUID.
        """
        pulumi.set(__self__, "resources", resources)
        if cbr_rule_id is not None:
            pulumi.set(__self__, "cbr_rule_id", cbr_rule_id)
        if contexts is not None:
            pulumi.set(__self__, "contexts", contexts)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enforcement_mode is not None:
            pulumi.set(__self__, "enforcement_mode", enforcement_mode)
        if operations is not None:
            pulumi.set(__self__, "operations", operations)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)
        if transaction_id is not None:
            warnings.warn("""Deprecated""", DeprecationWarning)
            pulumi.log.warn("""transaction_id is deprecated: Deprecated""")
        if transaction_id is not None:
            pulumi.set(__self__, "transaction_id", transaction_id)
        if x_correlation_id is not None:
            pulumi.set(__self__, "x_correlation_id", x_correlation_id)

    @_builtins.property
    @pulumi.getter
    def resources(self) -> pulumi.Input[Sequence[pulumi.Input['CbrRuleResourceArgs']]]:
        """
        The resources this rule apply to.
        """
        return pulumi.get(self, "resources")

    @resources.setter
    def resources(self, value: pulumi.Input[Sequence[pulumi.Input['CbrRuleResourceArgs']]]):
        pulumi.set(self, "resources", value)

    @_builtins.property
    @pulumi.getter(name="cbrRuleId")
    def cbr_rule_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "cbr_rule_id")

    @cbr_rule_id.setter
    def cbr_rule_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cbr_rule_id", value)

    @_builtins.property
    @pulumi.getter
    def contexts(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CbrRuleContextArgs']]]]:
        """
        The contexts this rule applies to.
        """
        return pulumi.get(self, "contexts")

    @contexts.setter
    def contexts(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CbrRuleContextArgs']]]]):
        pulumi.set(self, "contexts", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the rule.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enforcementMode")
    def enforcement_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The rule enforcement mode: * `enabled` - The restrictions are enforced and reported. This is the default. * `disabled` -
        The restrictions are disabled. Nothing is enforced or reported. * `report` - The restrictions are evaluated and
        reported, but not enforced.
        """
        return pulumi.get(self, "enforcement_mode")

    @enforcement_mode.setter
    def enforcement_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enforcement_mode", value)

    @_builtins.property
    @pulumi.getter
    def operations(self) -> Optional[pulumi.Input['CbrRuleOperationsArgs']]:
        """
        The operations this rule applies to.
        """
        return pulumi.get(self, "operations")

    @operations.setter
    def operations(self, value: Optional[pulumi.Input['CbrRuleOperationsArgs']]):
        pulumi.set(self, "operations", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['CbrRuleTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['CbrRuleTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)

    @_builtins.property
    @pulumi.getter(name="transactionId")
    @_utilities.deprecated("""Deprecated""")
    def transaction_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The `Transaction-Id` header behaves as the `X-Correlation-Id` header. It is supported for backward compatibility with
        other IBM platform services that support the `Transaction-Id` header only. If both `X-Correlation-Id` and
        `Transaction-Id` are provided, `X-Correlation-Id` has the precedence over `Transaction-Id`.
        """
        return pulumi.get(self, "transaction_id")

    @transaction_id.setter
    def transaction_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "transaction_id", value)

    @_builtins.property
    @pulumi.getter(name="xCorrelationId")
    def x_correlation_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The supplied or generated value of this header is logged for a request and repeated in a response header for the
        corresponding response. The same value is used for downstream requests and retries of those requests. If a value of this
        headers is not supplied in a request, the service generates a random (version 4) UUID.
        """
        return pulumi.get(self, "x_correlation_id")

    @x_correlation_id.setter
    def x_correlation_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "x_correlation_id", value)


@pulumi.input_type
class _CbrRuleState:
    def __init__(__self__, *,
                 cbr_rule_id: Optional[pulumi.Input[_builtins.str]] = None,
                 contexts: Optional[pulumi.Input[Sequence[pulumi.Input['CbrRuleContextArgs']]]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_by_id: Optional[pulumi.Input[_builtins.str]] = None,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enforcement_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 etag: Optional[pulumi.Input[_builtins.str]] = None,
                 href: Optional[pulumi.Input[_builtins.str]] = None,
                 last_modified_at: Optional[pulumi.Input[_builtins.str]] = None,
                 last_modified_by_id: Optional[pulumi.Input[_builtins.str]] = None,
                 operations: Optional[pulumi.Input['CbrRuleOperationsArgs']] = None,
                 resources: Optional[pulumi.Input[Sequence[pulumi.Input['CbrRuleResourceArgs']]]] = None,
                 timeouts: Optional[pulumi.Input['CbrRuleTimeoutsArgs']] = None,
                 transaction_id: Optional[pulumi.Input[_builtins.str]] = None,
                 x_correlation_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering CbrRule resources.
        :param pulumi.Input[Sequence[pulumi.Input['CbrRuleContextArgs']]] contexts: The contexts this rule applies to.
        :param pulumi.Input[_builtins.str] created_at: The time the resource was created.
        :param pulumi.Input[_builtins.str] created_by_id: IAM ID of the user or service which created the resource.
        :param pulumi.Input[_builtins.str] crn: The rule CRN.
        :param pulumi.Input[_builtins.str] description: The description of the rule.
        :param pulumi.Input[_builtins.str] enforcement_mode: The rule enforcement mode: * `enabled` - The restrictions are enforced and reported. This is the default. * `disabled` -
               The restrictions are disabled. Nothing is enforced or reported. * `report` - The restrictions are evaluated and
               reported, but not enforced.
        :param pulumi.Input[_builtins.str] href: The href link to the resource.
        :param pulumi.Input[_builtins.str] last_modified_at: The last time the resource was modified.
        :param pulumi.Input[_builtins.str] last_modified_by_id: IAM ID of the user or service which modified the resource.
        :param pulumi.Input['CbrRuleOperationsArgs'] operations: The operations this rule applies to.
        :param pulumi.Input[Sequence[pulumi.Input['CbrRuleResourceArgs']]] resources: The resources this rule apply to.
        :param pulumi.Input[_builtins.str] transaction_id: The `Transaction-Id` header behaves as the `X-Correlation-Id` header. It is supported for backward compatibility with
               other IBM platform services that support the `Transaction-Id` header only. If both `X-Correlation-Id` and
               `Transaction-Id` are provided, `X-Correlation-Id` has the precedence over `Transaction-Id`.
        :param pulumi.Input[_builtins.str] x_correlation_id: The supplied or generated value of this header is logged for a request and repeated in a response header for the
               corresponding response. The same value is used for downstream requests and retries of those requests. If a value of this
               headers is not supplied in a request, the service generates a random (version 4) UUID.
        """
        if cbr_rule_id is not None:
            pulumi.set(__self__, "cbr_rule_id", cbr_rule_id)
        if contexts is not None:
            pulumi.set(__self__, "contexts", contexts)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by_id is not None:
            pulumi.set(__self__, "created_by_id", created_by_id)
        if crn is not None:
            pulumi.set(__self__, "crn", crn)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enforcement_mode is not None:
            pulumi.set(__self__, "enforcement_mode", enforcement_mode)
        if etag is not None:
            pulumi.set(__self__, "etag", etag)
        if href is not None:
            pulumi.set(__self__, "href", href)
        if last_modified_at is not None:
            pulumi.set(__self__, "last_modified_at", last_modified_at)
        if last_modified_by_id is not None:
            pulumi.set(__self__, "last_modified_by_id", last_modified_by_id)
        if operations is not None:
            pulumi.set(__self__, "operations", operations)
        if resources is not None:
            pulumi.set(__self__, "resources", resources)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)
        if transaction_id is not None:
            warnings.warn("""Deprecated""", DeprecationWarning)
            pulumi.log.warn("""transaction_id is deprecated: Deprecated""")
        if transaction_id is not None:
            pulumi.set(__self__, "transaction_id", transaction_id)
        if x_correlation_id is not None:
            pulumi.set(__self__, "x_correlation_id", x_correlation_id)

    @_builtins.property
    @pulumi.getter(name="cbrRuleId")
    def cbr_rule_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "cbr_rule_id")

    @cbr_rule_id.setter
    def cbr_rule_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cbr_rule_id", value)

    @_builtins.property
    @pulumi.getter
    def contexts(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CbrRuleContextArgs']]]]:
        """
        The contexts this rule applies to.
        """
        return pulumi.get(self, "contexts")

    @contexts.setter
    def contexts(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CbrRuleContextArgs']]]]):
        pulumi.set(self, "contexts", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time the resource was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdById")
    def created_by_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IAM ID of the user or service which created the resource.
        """
        return pulumi.get(self, "created_by_id")

    @created_by_id.setter
    def created_by_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_by_id", value)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The rule CRN.
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the rule.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enforcementMode")
    def enforcement_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The rule enforcement mode: * `enabled` - The restrictions are enforced and reported. This is the default. * `disabled` -
        The restrictions are disabled. Nothing is enforced or reported. * `report` - The restrictions are evaluated and
        reported, but not enforced.
        """
        return pulumi.get(self, "enforcement_mode")

    @enforcement_mode.setter
    def enforcement_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enforcement_mode", value)

    @_builtins.property
    @pulumi.getter
    def etag(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "etag")

    @etag.setter
    def etag(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "etag", value)

    @_builtins.property
    @pulumi.getter
    def href(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The href link to the resource.
        """
        return pulumi.get(self, "href")

    @href.setter
    def href(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "href", value)

    @_builtins.property
    @pulumi.getter(name="lastModifiedAt")
    def last_modified_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The last time the resource was modified.
        """
        return pulumi.get(self, "last_modified_at")

    @last_modified_at.setter
    def last_modified_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "last_modified_at", value)

    @_builtins.property
    @pulumi.getter(name="lastModifiedById")
    def last_modified_by_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IAM ID of the user or service which modified the resource.
        """
        return pulumi.get(self, "last_modified_by_id")

    @last_modified_by_id.setter
    def last_modified_by_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "last_modified_by_id", value)

    @_builtins.property
    @pulumi.getter
    def operations(self) -> Optional[pulumi.Input['CbrRuleOperationsArgs']]:
        """
        The operations this rule applies to.
        """
        return pulumi.get(self, "operations")

    @operations.setter
    def operations(self, value: Optional[pulumi.Input['CbrRuleOperationsArgs']]):
        pulumi.set(self, "operations", value)

    @_builtins.property
    @pulumi.getter
    def resources(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CbrRuleResourceArgs']]]]:
        """
        The resources this rule apply to.
        """
        return pulumi.get(self, "resources")

    @resources.setter
    def resources(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CbrRuleResourceArgs']]]]):
        pulumi.set(self, "resources", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['CbrRuleTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['CbrRuleTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)

    @_builtins.property
    @pulumi.getter(name="transactionId")
    @_utilities.deprecated("""Deprecated""")
    def transaction_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The `Transaction-Id` header behaves as the `X-Correlation-Id` header. It is supported for backward compatibility with
        other IBM platform services that support the `Transaction-Id` header only. If both `X-Correlation-Id` and
        `Transaction-Id` are provided, `X-Correlation-Id` has the precedence over `Transaction-Id`.
        """
        return pulumi.get(self, "transaction_id")

    @transaction_id.setter
    def transaction_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "transaction_id", value)

    @_builtins.property
    @pulumi.getter(name="xCorrelationId")
    def x_correlation_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The supplied or generated value of this header is logged for a request and repeated in a response header for the
        corresponding response. The same value is used for downstream requests and retries of those requests. If a value of this
        headers is not supplied in a request, the service generates a random (version 4) UUID.
        """
        return pulumi.get(self, "x_correlation_id")

    @x_correlation_id.setter
    def x_correlation_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "x_correlation_id", value)


@pulumi.type_token("ibm:index/cbrRule:CbrRule")
class CbrRule(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cbr_rule_id: Optional[pulumi.Input[_builtins.str]] = None,
                 contexts: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CbrRuleContextArgs', 'CbrRuleContextArgsDict']]]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enforcement_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 operations: Optional[pulumi.Input[Union['CbrRuleOperationsArgs', 'CbrRuleOperationsArgsDict']]] = None,
                 resources: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CbrRuleResourceArgs', 'CbrRuleResourceArgsDict']]]]] = None,
                 timeouts: Optional[pulumi.Input[Union['CbrRuleTimeoutsArgs', 'CbrRuleTimeoutsArgsDict']]] = None,
                 transaction_id: Optional[pulumi.Input[_builtins.str]] = None,
                 x_correlation_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a CbrRule resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CbrRuleContextArgs', 'CbrRuleContextArgsDict']]]] contexts: The contexts this rule applies to.
        :param pulumi.Input[_builtins.str] description: The description of the rule.
        :param pulumi.Input[_builtins.str] enforcement_mode: The rule enforcement mode: * `enabled` - The restrictions are enforced and reported. This is the default. * `disabled` -
               The restrictions are disabled. Nothing is enforced or reported. * `report` - The restrictions are evaluated and
               reported, but not enforced.
        :param pulumi.Input[Union['CbrRuleOperationsArgs', 'CbrRuleOperationsArgsDict']] operations: The operations this rule applies to.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CbrRuleResourceArgs', 'CbrRuleResourceArgsDict']]]] resources: The resources this rule apply to.
        :param pulumi.Input[_builtins.str] transaction_id: The `Transaction-Id` header behaves as the `X-Correlation-Id` header. It is supported for backward compatibility with
               other IBM platform services that support the `Transaction-Id` header only. If both `X-Correlation-Id` and
               `Transaction-Id` are provided, `X-Correlation-Id` has the precedence over `Transaction-Id`.
        :param pulumi.Input[_builtins.str] x_correlation_id: The supplied or generated value of this header is logged for a request and repeated in a response header for the
               corresponding response. The same value is used for downstream requests and retries of those requests. If a value of this
               headers is not supplied in a request, the service generates a random (version 4) UUID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CbrRuleArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a CbrRule resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param CbrRuleArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CbrRuleArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cbr_rule_id: Optional[pulumi.Input[_builtins.str]] = None,
                 contexts: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CbrRuleContextArgs', 'CbrRuleContextArgsDict']]]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enforcement_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 operations: Optional[pulumi.Input[Union['CbrRuleOperationsArgs', 'CbrRuleOperationsArgsDict']]] = None,
                 resources: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CbrRuleResourceArgs', 'CbrRuleResourceArgsDict']]]]] = None,
                 timeouts: Optional[pulumi.Input[Union['CbrRuleTimeoutsArgs', 'CbrRuleTimeoutsArgsDict']]] = None,
                 transaction_id: Optional[pulumi.Input[_builtins.str]] = None,
                 x_correlation_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CbrRuleArgs.__new__(CbrRuleArgs)

            __props__.__dict__["cbr_rule_id"] = cbr_rule_id
            __props__.__dict__["contexts"] = contexts
            __props__.__dict__["description"] = description
            __props__.__dict__["enforcement_mode"] = enforcement_mode
            __props__.__dict__["operations"] = operations
            if resources is None and not opts.urn:
                raise TypeError("Missing required property 'resources'")
            __props__.__dict__["resources"] = resources
            __props__.__dict__["timeouts"] = timeouts
            __props__.__dict__["transaction_id"] = transaction_id
            __props__.__dict__["x_correlation_id"] = x_correlation_id
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_by_id"] = None
            __props__.__dict__["crn"] = None
            __props__.__dict__["etag"] = None
            __props__.__dict__["href"] = None
            __props__.__dict__["last_modified_at"] = None
            __props__.__dict__["last_modified_by_id"] = None
        super(CbrRule, __self__).__init__(
            'ibm:index/cbrRule:CbrRule',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            cbr_rule_id: Optional[pulumi.Input[_builtins.str]] = None,
            contexts: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CbrRuleContextArgs', 'CbrRuleContextArgsDict']]]]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_by_id: Optional[pulumi.Input[_builtins.str]] = None,
            crn: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            enforcement_mode: Optional[pulumi.Input[_builtins.str]] = None,
            etag: Optional[pulumi.Input[_builtins.str]] = None,
            href: Optional[pulumi.Input[_builtins.str]] = None,
            last_modified_at: Optional[pulumi.Input[_builtins.str]] = None,
            last_modified_by_id: Optional[pulumi.Input[_builtins.str]] = None,
            operations: Optional[pulumi.Input[Union['CbrRuleOperationsArgs', 'CbrRuleOperationsArgsDict']]] = None,
            resources: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CbrRuleResourceArgs', 'CbrRuleResourceArgsDict']]]]] = None,
            timeouts: Optional[pulumi.Input[Union['CbrRuleTimeoutsArgs', 'CbrRuleTimeoutsArgsDict']]] = None,
            transaction_id: Optional[pulumi.Input[_builtins.str]] = None,
            x_correlation_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'CbrRule':
        """
        Get an existing CbrRule resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CbrRuleContextArgs', 'CbrRuleContextArgsDict']]]] contexts: The contexts this rule applies to.
        :param pulumi.Input[_builtins.str] created_at: The time the resource was created.
        :param pulumi.Input[_builtins.str] created_by_id: IAM ID of the user or service which created the resource.
        :param pulumi.Input[_builtins.str] crn: The rule CRN.
        :param pulumi.Input[_builtins.str] description: The description of the rule.
        :param pulumi.Input[_builtins.str] enforcement_mode: The rule enforcement mode: * `enabled` - The restrictions are enforced and reported. This is the default. * `disabled` -
               The restrictions are disabled. Nothing is enforced or reported. * `report` - The restrictions are evaluated and
               reported, but not enforced.
        :param pulumi.Input[_builtins.str] href: The href link to the resource.
        :param pulumi.Input[_builtins.str] last_modified_at: The last time the resource was modified.
        :param pulumi.Input[_builtins.str] last_modified_by_id: IAM ID of the user or service which modified the resource.
        :param pulumi.Input[Union['CbrRuleOperationsArgs', 'CbrRuleOperationsArgsDict']] operations: The operations this rule applies to.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CbrRuleResourceArgs', 'CbrRuleResourceArgsDict']]]] resources: The resources this rule apply to.
        :param pulumi.Input[_builtins.str] transaction_id: The `Transaction-Id` header behaves as the `X-Correlation-Id` header. It is supported for backward compatibility with
               other IBM platform services that support the `Transaction-Id` header only. If both `X-Correlation-Id` and
               `Transaction-Id` are provided, `X-Correlation-Id` has the precedence over `Transaction-Id`.
        :param pulumi.Input[_builtins.str] x_correlation_id: The supplied or generated value of this header is logged for a request and repeated in a response header for the
               corresponding response. The same value is used for downstream requests and retries of those requests. If a value of this
               headers is not supplied in a request, the service generates a random (version 4) UUID.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CbrRuleState.__new__(_CbrRuleState)

        __props__.__dict__["cbr_rule_id"] = cbr_rule_id
        __props__.__dict__["contexts"] = contexts
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_by_id"] = created_by_id
        __props__.__dict__["crn"] = crn
        __props__.__dict__["description"] = description
        __props__.__dict__["enforcement_mode"] = enforcement_mode
        __props__.__dict__["etag"] = etag
        __props__.__dict__["href"] = href
        __props__.__dict__["last_modified_at"] = last_modified_at
        __props__.__dict__["last_modified_by_id"] = last_modified_by_id
        __props__.__dict__["operations"] = operations
        __props__.__dict__["resources"] = resources
        __props__.__dict__["timeouts"] = timeouts
        __props__.__dict__["transaction_id"] = transaction_id
        __props__.__dict__["x_correlation_id"] = x_correlation_id
        return CbrRule(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="cbrRuleId")
    def cbr_rule_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "cbr_rule_id")

    @_builtins.property
    @pulumi.getter
    def contexts(self) -> pulumi.Output[Optional[Sequence['outputs.CbrRuleContext']]]:
        """
        The contexts this rule applies to.
        """
        return pulumi.get(self, "contexts")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The time the resource was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdById")
    def created_by_id(self) -> pulumi.Output[_builtins.str]:
        """
        IAM ID of the user or service which created the resource.
        """
        return pulumi.get(self, "created_by_id")

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Output[_builtins.str]:
        """
        The rule CRN.
        """
        return pulumi.get(self, "crn")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The description of the rule.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="enforcementMode")
    def enforcement_mode(self) -> pulumi.Output[_builtins.str]:
        """
        The rule enforcement mode: * `enabled` - The restrictions are enforced and reported. This is the default. * `disabled` -
        The restrictions are disabled. Nothing is enforced or reported. * `report` - The restrictions are evaluated and
        reported, but not enforced.
        """
        return pulumi.get(self, "enforcement_mode")

    @_builtins.property
    @pulumi.getter
    def etag(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "etag")

    @_builtins.property
    @pulumi.getter
    def href(self) -> pulumi.Output[_builtins.str]:
        """
        The href link to the resource.
        """
        return pulumi.get(self, "href")

    @_builtins.property
    @pulumi.getter(name="lastModifiedAt")
    def last_modified_at(self) -> pulumi.Output[_builtins.str]:
        """
        The last time the resource was modified.
        """
        return pulumi.get(self, "last_modified_at")

    @_builtins.property
    @pulumi.getter(name="lastModifiedById")
    def last_modified_by_id(self) -> pulumi.Output[_builtins.str]:
        """
        IAM ID of the user or service which modified the resource.
        """
        return pulumi.get(self, "last_modified_by_id")

    @_builtins.property
    @pulumi.getter
    def operations(self) -> pulumi.Output[Optional['outputs.CbrRuleOperations']]:
        """
        The operations this rule applies to.
        """
        return pulumi.get(self, "operations")

    @_builtins.property
    @pulumi.getter
    def resources(self) -> pulumi.Output[Sequence['outputs.CbrRuleResource']]:
        """
        The resources this rule apply to.
        """
        return pulumi.get(self, "resources")

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> pulumi.Output[Optional['outputs.CbrRuleTimeouts']]:
        return pulumi.get(self, "timeouts")

    @_builtins.property
    @pulumi.getter(name="transactionId")
    @_utilities.deprecated("""Deprecated""")
    def transaction_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The `Transaction-Id` header behaves as the `X-Correlation-Id` header. It is supported for backward compatibility with
        other IBM platform services that support the `Transaction-Id` header only. If both `X-Correlation-Id` and
        `Transaction-Id` are provided, `X-Correlation-Id` has the precedence over `Transaction-Id`.
        """
        return pulumi.get(self, "transaction_id")

    @_builtins.property
    @pulumi.getter(name="xCorrelationId")
    def x_correlation_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The supplied or generated value of this header is logged for a request and repeated in a response header for the
        corresponding response. The same value is used for downstream requests and retries of those requests. If a value of this
        headers is not supplied in a request, the service generates a random (version 4) UUID.
        """
        return pulumi.get(self, "x_correlation_id")

