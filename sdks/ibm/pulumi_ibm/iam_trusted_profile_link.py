# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IamTrustedProfileLinkArgs', 'IamTrustedProfileLink']

@pulumi.input_type
class IamTrustedProfileLinkArgs:
    def __init__(__self__, *,
                 cr_type: pulumi.Input[_builtins.str],
                 link: pulumi.Input['IamTrustedProfileLinkLinkArgs'],
                 profile_id: pulumi.Input[_builtins.str],
                 iam_trusted_profile_link_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a IamTrustedProfileLink resource.
        :param pulumi.Input[_builtins.str] cr_type: The compute resource type. Valid values are VSI, IKS_SA, ROKS_SA.
        :param pulumi.Input['IamTrustedProfileLinkLinkArgs'] link: Link details.
        :param pulumi.Input[_builtins.str] profile_id: ID of the trusted profile.
        :param pulumi.Input[_builtins.str] name: Optional name of the Link.
        """
        pulumi.set(__self__, "cr_type", cr_type)
        pulumi.set(__self__, "link", link)
        pulumi.set(__self__, "profile_id", profile_id)
        if iam_trusted_profile_link_id is not None:
            pulumi.set(__self__, "iam_trusted_profile_link_id", iam_trusted_profile_link_id)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="crType")
    def cr_type(self) -> pulumi.Input[_builtins.str]:
        """
        The compute resource type. Valid values are VSI, IKS_SA, ROKS_SA.
        """
        return pulumi.get(self, "cr_type")

    @cr_type.setter
    def cr_type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "cr_type", value)

    @_builtins.property
    @pulumi.getter
    def link(self) -> pulumi.Input['IamTrustedProfileLinkLinkArgs']:
        """
        Link details.
        """
        return pulumi.get(self, "link")

    @link.setter
    def link(self, value: pulumi.Input['IamTrustedProfileLinkLinkArgs']):
        pulumi.set(self, "link", value)

    @_builtins.property
    @pulumi.getter(name="profileId")
    def profile_id(self) -> pulumi.Input[_builtins.str]:
        """
        ID of the trusted profile.
        """
        return pulumi.get(self, "profile_id")

    @profile_id.setter
    def profile_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "profile_id", value)

    @_builtins.property
    @pulumi.getter(name="iamTrustedProfileLinkId")
    def iam_trusted_profile_link_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "iam_trusted_profile_link_id")

    @iam_trusted_profile_link_id.setter
    def iam_trusted_profile_link_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "iam_trusted_profile_link_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Optional name of the Link.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _IamTrustedProfileLinkState:
    def __init__(__self__, *,
                 cr_type: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 entity_tag: Optional[pulumi.Input[_builtins.str]] = None,
                 iam_trusted_profile_link_id: Optional[pulumi.Input[_builtins.str]] = None,
                 link: Optional[pulumi.Input['IamTrustedProfileLinkLinkArgs']] = None,
                 link_id: Optional[pulumi.Input[_builtins.str]] = None,
                 modified_at: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 profile_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering IamTrustedProfileLink resources.
        :param pulumi.Input[_builtins.str] cr_type: The compute resource type. Valid values are VSI, IKS_SA, ROKS_SA.
        :param pulumi.Input[_builtins.str] created_at: If set contains a date time string of the creation date in ISO format.
        :param pulumi.Input[_builtins.str] entity_tag: version of the link.
        :param pulumi.Input['IamTrustedProfileLinkLinkArgs'] link: Link details.
        :param pulumi.Input[_builtins.str] link_id: the unique identifier of the link.
        :param pulumi.Input[_builtins.str] modified_at: If set contains a date time string of the last modification date in ISO format.
        :param pulumi.Input[_builtins.str] name: Optional name of the Link.
        :param pulumi.Input[_builtins.str] profile_id: ID of the trusted profile.
        """
        if cr_type is not None:
            pulumi.set(__self__, "cr_type", cr_type)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if entity_tag is not None:
            pulumi.set(__self__, "entity_tag", entity_tag)
        if iam_trusted_profile_link_id is not None:
            pulumi.set(__self__, "iam_trusted_profile_link_id", iam_trusted_profile_link_id)
        if link is not None:
            pulumi.set(__self__, "link", link)
        if link_id is not None:
            pulumi.set(__self__, "link_id", link_id)
        if modified_at is not None:
            pulumi.set(__self__, "modified_at", modified_at)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if profile_id is not None:
            pulumi.set(__self__, "profile_id", profile_id)

    @_builtins.property
    @pulumi.getter(name="crType")
    def cr_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The compute resource type. Valid values are VSI, IKS_SA, ROKS_SA.
        """
        return pulumi.get(self, "cr_type")

    @cr_type.setter
    def cr_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cr_type", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        If set contains a date time string of the creation date in ISO format.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="entityTag")
    def entity_tag(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        version of the link.
        """
        return pulumi.get(self, "entity_tag")

    @entity_tag.setter
    def entity_tag(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "entity_tag", value)

    @_builtins.property
    @pulumi.getter(name="iamTrustedProfileLinkId")
    def iam_trusted_profile_link_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "iam_trusted_profile_link_id")

    @iam_trusted_profile_link_id.setter
    def iam_trusted_profile_link_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "iam_trusted_profile_link_id", value)

    @_builtins.property
    @pulumi.getter
    def link(self) -> Optional[pulumi.Input['IamTrustedProfileLinkLinkArgs']]:
        """
        Link details.
        """
        return pulumi.get(self, "link")

    @link.setter
    def link(self, value: Optional[pulumi.Input['IamTrustedProfileLinkLinkArgs']]):
        pulumi.set(self, "link", value)

    @_builtins.property
    @pulumi.getter(name="linkId")
    def link_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        the unique identifier of the link.
        """
        return pulumi.get(self, "link_id")

    @link_id.setter
    def link_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "link_id", value)

    @_builtins.property
    @pulumi.getter(name="modifiedAt")
    def modified_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        If set contains a date time string of the last modification date in ISO format.
        """
        return pulumi.get(self, "modified_at")

    @modified_at.setter
    def modified_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "modified_at", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Optional name of the Link.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="profileId")
    def profile_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        ID of the trusted profile.
        """
        return pulumi.get(self, "profile_id")

    @profile_id.setter
    def profile_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "profile_id", value)


@pulumi.type_token("ibm:index/iamTrustedProfileLink:IamTrustedProfileLink")
class IamTrustedProfileLink(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cr_type: Optional[pulumi.Input[_builtins.str]] = None,
                 iam_trusted_profile_link_id: Optional[pulumi.Input[_builtins.str]] = None,
                 link: Optional[pulumi.Input[Union['IamTrustedProfileLinkLinkArgs', 'IamTrustedProfileLinkLinkArgsDict']]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 profile_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a IamTrustedProfileLink resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] cr_type: The compute resource type. Valid values are VSI, IKS_SA, ROKS_SA.
        :param pulumi.Input[Union['IamTrustedProfileLinkLinkArgs', 'IamTrustedProfileLinkLinkArgsDict']] link: Link details.
        :param pulumi.Input[_builtins.str] name: Optional name of the Link.
        :param pulumi.Input[_builtins.str] profile_id: ID of the trusted profile.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IamTrustedProfileLinkArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a IamTrustedProfileLink resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param IamTrustedProfileLinkArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IamTrustedProfileLinkArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cr_type: Optional[pulumi.Input[_builtins.str]] = None,
                 iam_trusted_profile_link_id: Optional[pulumi.Input[_builtins.str]] = None,
                 link: Optional[pulumi.Input[Union['IamTrustedProfileLinkLinkArgs', 'IamTrustedProfileLinkLinkArgsDict']]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 profile_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IamTrustedProfileLinkArgs.__new__(IamTrustedProfileLinkArgs)

            if cr_type is None and not opts.urn:
                raise TypeError("Missing required property 'cr_type'")
            __props__.__dict__["cr_type"] = cr_type
            __props__.__dict__["iam_trusted_profile_link_id"] = iam_trusted_profile_link_id
            if link is None and not opts.urn:
                raise TypeError("Missing required property 'link'")
            __props__.__dict__["link"] = link
            __props__.__dict__["name"] = name
            if profile_id is None and not opts.urn:
                raise TypeError("Missing required property 'profile_id'")
            __props__.__dict__["profile_id"] = profile_id
            __props__.__dict__["created_at"] = None
            __props__.__dict__["entity_tag"] = None
            __props__.__dict__["link_id"] = None
            __props__.__dict__["modified_at"] = None
        super(IamTrustedProfileLink, __self__).__init__(
            'ibm:index/iamTrustedProfileLink:IamTrustedProfileLink',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            cr_type: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            entity_tag: Optional[pulumi.Input[_builtins.str]] = None,
            iam_trusted_profile_link_id: Optional[pulumi.Input[_builtins.str]] = None,
            link: Optional[pulumi.Input[Union['IamTrustedProfileLinkLinkArgs', 'IamTrustedProfileLinkLinkArgsDict']]] = None,
            link_id: Optional[pulumi.Input[_builtins.str]] = None,
            modified_at: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            profile_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'IamTrustedProfileLink':
        """
        Get an existing IamTrustedProfileLink resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] cr_type: The compute resource type. Valid values are VSI, IKS_SA, ROKS_SA.
        :param pulumi.Input[_builtins.str] created_at: If set contains a date time string of the creation date in ISO format.
        :param pulumi.Input[_builtins.str] entity_tag: version of the link.
        :param pulumi.Input[Union['IamTrustedProfileLinkLinkArgs', 'IamTrustedProfileLinkLinkArgsDict']] link: Link details.
        :param pulumi.Input[_builtins.str] link_id: the unique identifier of the link.
        :param pulumi.Input[_builtins.str] modified_at: If set contains a date time string of the last modification date in ISO format.
        :param pulumi.Input[_builtins.str] name: Optional name of the Link.
        :param pulumi.Input[_builtins.str] profile_id: ID of the trusted profile.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IamTrustedProfileLinkState.__new__(_IamTrustedProfileLinkState)

        __props__.__dict__["cr_type"] = cr_type
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["entity_tag"] = entity_tag
        __props__.__dict__["iam_trusted_profile_link_id"] = iam_trusted_profile_link_id
        __props__.__dict__["link"] = link
        __props__.__dict__["link_id"] = link_id
        __props__.__dict__["modified_at"] = modified_at
        __props__.__dict__["name"] = name
        __props__.__dict__["profile_id"] = profile_id
        return IamTrustedProfileLink(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="crType")
    def cr_type(self) -> pulumi.Output[_builtins.str]:
        """
        The compute resource type. Valid values are VSI, IKS_SA, ROKS_SA.
        """
        return pulumi.get(self, "cr_type")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        If set contains a date time string of the creation date in ISO format.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="entityTag")
    def entity_tag(self) -> pulumi.Output[_builtins.str]:
        """
        version of the link.
        """
        return pulumi.get(self, "entity_tag")

    @_builtins.property
    @pulumi.getter(name="iamTrustedProfileLinkId")
    def iam_trusted_profile_link_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "iam_trusted_profile_link_id")

    @_builtins.property
    @pulumi.getter
    def link(self) -> pulumi.Output['outputs.IamTrustedProfileLinkLink']:
        """
        Link details.
        """
        return pulumi.get(self, "link")

    @_builtins.property
    @pulumi.getter(name="linkId")
    def link_id(self) -> pulumi.Output[_builtins.str]:
        """
        the unique identifier of the link.
        """
        return pulumi.get(self, "link_id")

    @_builtins.property
    @pulumi.getter(name="modifiedAt")
    def modified_at(self) -> pulumi.Output[_builtins.str]:
        """
        If set contains a date time string of the last modification date in ISO format.
        """
        return pulumi.get(self, "modified_at")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Optional name of the Link.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="profileId")
    def profile_id(self) -> pulumi.Output[_builtins.str]:
        """
        ID of the trusted profile.
        """
        return pulumi.get(self, "profile_id")

