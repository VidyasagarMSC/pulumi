# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['BackupRecoveryProtectionGroupRunRequestArgs', 'BackupRecoveryProtectionGroupRunRequest']

@pulumi.input_type
class BackupRecoveryProtectionGroupRunRequestArgs:
    def __init__(__self__, *,
                 group_id: pulumi.Input[_builtins.str],
                 run_type: pulumi.Input[_builtins.str],
                 x_ibm_tenant_id: pulumi.Input[_builtins.str],
                 backup_recovery_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None,
                 objects: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryProtectionGroupRunRequestObjectArgs']]]] = None,
                 targets_config: Optional[pulumi.Input['BackupRecoveryProtectionGroupRunRequestTargetsConfigArgs']] = None):
        """
        The set of arguments for constructing a BackupRecoveryProtectionGroupRunRequest resource.
        :param pulumi.Input[_builtins.str] group_id: Protection group id
        :param pulumi.Input[_builtins.str] run_type: Type of protection run. 'kRegular' indicates an incremental (CBT) backup. Incremental backups utilizing CBT (if
               supported) are captured of the target protection objects. The first run of a kRegular schedule captures all the blocks.
               'kFull' indicates a full (no CBT) backup. A complete backup (all blocks) of the target protection objects are always
               captured and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database Log backup. Capture the database
               transaction logs to allow rolling back to a specific point in time. 'kSystem' indicates system volume backup. It
               produces an image for bare metal recovery.
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        :param pulumi.Input[Sequence[pulumi.Input['BackupRecoveryProtectionGroupRunRequestObjectArgs']]] objects: Specifies the list of objects to be protected by this Protection Group run. These can be leaf objects or non-leaf
               objects in the protection hierarchy. This must be specified only if a subset of objects from the Protection Groups needs
               to be protected.
        :param pulumi.Input['BackupRecoveryProtectionGroupRunRequestTargetsConfigArgs'] targets_config: Specifies the replication and archival targets.
        """
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "run_type", run_type)
        pulumi.set(__self__, "x_ibm_tenant_id", x_ibm_tenant_id)
        if backup_recovery_protection_group_run_request_id is not None:
            pulumi.set(__self__, "backup_recovery_protection_group_run_request_id", backup_recovery_protection_group_run_request_id)
        if objects is not None:
            pulumi.set(__self__, "objects", objects)
        if targets_config is not None:
            pulumi.set(__self__, "targets_config", targets_config)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Protection group id
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter(name="runType")
    def run_type(self) -> pulumi.Input[_builtins.str]:
        """
        Type of protection run. 'kRegular' indicates an incremental (CBT) backup. Incremental backups utilizing CBT (if
        supported) are captured of the target protection objects. The first run of a kRegular schedule captures all the blocks.
        'kFull' indicates a full (no CBT) backup. A complete backup (all blocks) of the target protection objects are always
        captured and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database Log backup. Capture the database
        transaction logs to allow rolling back to a specific point in time. 'kSystem' indicates system volume backup. It
        produces an image for bare metal recovery.
        """
        return pulumi.get(self, "run_type")

    @run_type.setter
    def run_type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "run_type", value)

    @_builtins.property
    @pulumi.getter(name="xIbmTenantId")
    def x_ibm_tenant_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
        be specified.
        """
        return pulumi.get(self, "x_ibm_tenant_id")

    @x_ibm_tenant_id.setter
    def x_ibm_tenant_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "x_ibm_tenant_id", value)

    @_builtins.property
    @pulumi.getter(name="backupRecoveryProtectionGroupRunRequestId")
    def backup_recovery_protection_group_run_request_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "backup_recovery_protection_group_run_request_id")

    @backup_recovery_protection_group_run_request_id.setter
    def backup_recovery_protection_group_run_request_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "backup_recovery_protection_group_run_request_id", value)

    @_builtins.property
    @pulumi.getter
    def objects(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryProtectionGroupRunRequestObjectArgs']]]]:
        """
        Specifies the list of objects to be protected by this Protection Group run. These can be leaf objects or non-leaf
        objects in the protection hierarchy. This must be specified only if a subset of objects from the Protection Groups needs
        to be protected.
        """
        return pulumi.get(self, "objects")

    @objects.setter
    def objects(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryProtectionGroupRunRequestObjectArgs']]]]):
        pulumi.set(self, "objects", value)

    @_builtins.property
    @pulumi.getter(name="targetsConfig")
    def targets_config(self) -> Optional[pulumi.Input['BackupRecoveryProtectionGroupRunRequestTargetsConfigArgs']]:
        """
        Specifies the replication and archival targets.
        """
        return pulumi.get(self, "targets_config")

    @targets_config.setter
    def targets_config(self, value: Optional[pulumi.Input['BackupRecoveryProtectionGroupRunRequestTargetsConfigArgs']]):
        pulumi.set(self, "targets_config", value)


@pulumi.input_type
class _BackupRecoveryProtectionGroupRunRequestState:
    def __init__(__self__, *,
                 backup_recovery_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 objects: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryProtectionGroupRunRequestObjectArgs']]]] = None,
                 run_type: Optional[pulumi.Input[_builtins.str]] = None,
                 targets_config: Optional[pulumi.Input['BackupRecoveryProtectionGroupRunRequestTargetsConfigArgs']] = None,
                 x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering BackupRecoveryProtectionGroupRunRequest resources.
        :param pulumi.Input[_builtins.str] group_id: Protection group id
        :param pulumi.Input[Sequence[pulumi.Input['BackupRecoveryProtectionGroupRunRequestObjectArgs']]] objects: Specifies the list of objects to be protected by this Protection Group run. These can be leaf objects or non-leaf
               objects in the protection hierarchy. This must be specified only if a subset of objects from the Protection Groups needs
               to be protected.
        :param pulumi.Input[_builtins.str] run_type: Type of protection run. 'kRegular' indicates an incremental (CBT) backup. Incremental backups utilizing CBT (if
               supported) are captured of the target protection objects. The first run of a kRegular schedule captures all the blocks.
               'kFull' indicates a full (no CBT) backup. A complete backup (all blocks) of the target protection objects are always
               captured and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database Log backup. Capture the database
               transaction logs to allow rolling back to a specific point in time. 'kSystem' indicates system volume backup. It
               produces an image for bare metal recovery.
        :param pulumi.Input['BackupRecoveryProtectionGroupRunRequestTargetsConfigArgs'] targets_config: Specifies the replication and archival targets.
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        """
        if backup_recovery_protection_group_run_request_id is not None:
            pulumi.set(__self__, "backup_recovery_protection_group_run_request_id", backup_recovery_protection_group_run_request_id)
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)
        if objects is not None:
            pulumi.set(__self__, "objects", objects)
        if run_type is not None:
            pulumi.set(__self__, "run_type", run_type)
        if targets_config is not None:
            pulumi.set(__self__, "targets_config", targets_config)
        if x_ibm_tenant_id is not None:
            pulumi.set(__self__, "x_ibm_tenant_id", x_ibm_tenant_id)

    @_builtins.property
    @pulumi.getter(name="backupRecoveryProtectionGroupRunRequestId")
    def backup_recovery_protection_group_run_request_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "backup_recovery_protection_group_run_request_id")

    @backup_recovery_protection_group_run_request_id.setter
    def backup_recovery_protection_group_run_request_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "backup_recovery_protection_group_run_request_id", value)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Protection group id
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter
    def objects(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryProtectionGroupRunRequestObjectArgs']]]]:
        """
        Specifies the list of objects to be protected by this Protection Group run. These can be leaf objects or non-leaf
        objects in the protection hierarchy. This must be specified only if a subset of objects from the Protection Groups needs
        to be protected.
        """
        return pulumi.get(self, "objects")

    @objects.setter
    def objects(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryProtectionGroupRunRequestObjectArgs']]]]):
        pulumi.set(self, "objects", value)

    @_builtins.property
    @pulumi.getter(name="runType")
    def run_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Type of protection run. 'kRegular' indicates an incremental (CBT) backup. Incremental backups utilizing CBT (if
        supported) are captured of the target protection objects. The first run of a kRegular schedule captures all the blocks.
        'kFull' indicates a full (no CBT) backup. A complete backup (all blocks) of the target protection objects are always
        captured and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database Log backup. Capture the database
        transaction logs to allow rolling back to a specific point in time. 'kSystem' indicates system volume backup. It
        produces an image for bare metal recovery.
        """
        return pulumi.get(self, "run_type")

    @run_type.setter
    def run_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "run_type", value)

    @_builtins.property
    @pulumi.getter(name="targetsConfig")
    def targets_config(self) -> Optional[pulumi.Input['BackupRecoveryProtectionGroupRunRequestTargetsConfigArgs']]:
        """
        Specifies the replication and archival targets.
        """
        return pulumi.get(self, "targets_config")

    @targets_config.setter
    def targets_config(self, value: Optional[pulumi.Input['BackupRecoveryProtectionGroupRunRequestTargetsConfigArgs']]):
        pulumi.set(self, "targets_config", value)

    @_builtins.property
    @pulumi.getter(name="xIbmTenantId")
    def x_ibm_tenant_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
        be specified.
        """
        return pulumi.get(self, "x_ibm_tenant_id")

    @x_ibm_tenant_id.setter
    def x_ibm_tenant_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "x_ibm_tenant_id", value)


@pulumi.type_token("ibm:index/backupRecoveryProtectionGroupRunRequest:BackupRecoveryProtectionGroupRunRequest")
class BackupRecoveryProtectionGroupRunRequest(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 backup_recovery_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 objects: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryProtectionGroupRunRequestObjectArgs', 'BackupRecoveryProtectionGroupRunRequestObjectArgsDict']]]]] = None,
                 run_type: Optional[pulumi.Input[_builtins.str]] = None,
                 targets_config: Optional[pulumi.Input[Union['BackupRecoveryProtectionGroupRunRequestTargetsConfigArgs', 'BackupRecoveryProtectionGroupRunRequestTargetsConfigArgsDict']]] = None,
                 x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a BackupRecoveryProtectionGroupRunRequest resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] group_id: Protection group id
        :param pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryProtectionGroupRunRequestObjectArgs', 'BackupRecoveryProtectionGroupRunRequestObjectArgsDict']]]] objects: Specifies the list of objects to be protected by this Protection Group run. These can be leaf objects or non-leaf
               objects in the protection hierarchy. This must be specified only if a subset of objects from the Protection Groups needs
               to be protected.
        :param pulumi.Input[_builtins.str] run_type: Type of protection run. 'kRegular' indicates an incremental (CBT) backup. Incremental backups utilizing CBT (if
               supported) are captured of the target protection objects. The first run of a kRegular schedule captures all the blocks.
               'kFull' indicates a full (no CBT) backup. A complete backup (all blocks) of the target protection objects are always
               captured and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database Log backup. Capture the database
               transaction logs to allow rolling back to a specific point in time. 'kSystem' indicates system volume backup. It
               produces an image for bare metal recovery.
        :param pulumi.Input[Union['BackupRecoveryProtectionGroupRunRequestTargetsConfigArgs', 'BackupRecoveryProtectionGroupRunRequestTargetsConfigArgsDict']] targets_config: Specifies the replication and archival targets.
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BackupRecoveryProtectionGroupRunRequestArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a BackupRecoveryProtectionGroupRunRequest resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param BackupRecoveryProtectionGroupRunRequestArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BackupRecoveryProtectionGroupRunRequestArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 backup_recovery_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 objects: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryProtectionGroupRunRequestObjectArgs', 'BackupRecoveryProtectionGroupRunRequestObjectArgsDict']]]]] = None,
                 run_type: Optional[pulumi.Input[_builtins.str]] = None,
                 targets_config: Optional[pulumi.Input[Union['BackupRecoveryProtectionGroupRunRequestTargetsConfigArgs', 'BackupRecoveryProtectionGroupRunRequestTargetsConfigArgsDict']]] = None,
                 x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BackupRecoveryProtectionGroupRunRequestArgs.__new__(BackupRecoveryProtectionGroupRunRequestArgs)

            __props__.__dict__["backup_recovery_protection_group_run_request_id"] = backup_recovery_protection_group_run_request_id
            if group_id is None and not opts.urn:
                raise TypeError("Missing required property 'group_id'")
            __props__.__dict__["group_id"] = group_id
            __props__.__dict__["objects"] = objects
            if run_type is None and not opts.urn:
                raise TypeError("Missing required property 'run_type'")
            __props__.__dict__["run_type"] = run_type
            __props__.__dict__["targets_config"] = targets_config
            if x_ibm_tenant_id is None and not opts.urn:
                raise TypeError("Missing required property 'x_ibm_tenant_id'")
            __props__.__dict__["x_ibm_tenant_id"] = x_ibm_tenant_id
        super(BackupRecoveryProtectionGroupRunRequest, __self__).__init__(
            'ibm:index/backupRecoveryProtectionGroupRunRequest:BackupRecoveryProtectionGroupRunRequest',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            backup_recovery_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None,
            group_id: Optional[pulumi.Input[_builtins.str]] = None,
            objects: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryProtectionGroupRunRequestObjectArgs', 'BackupRecoveryProtectionGroupRunRequestObjectArgsDict']]]]] = None,
            run_type: Optional[pulumi.Input[_builtins.str]] = None,
            targets_config: Optional[pulumi.Input[Union['BackupRecoveryProtectionGroupRunRequestTargetsConfigArgs', 'BackupRecoveryProtectionGroupRunRequestTargetsConfigArgsDict']]] = None,
            x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'BackupRecoveryProtectionGroupRunRequest':
        """
        Get an existing BackupRecoveryProtectionGroupRunRequest resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] group_id: Protection group id
        :param pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryProtectionGroupRunRequestObjectArgs', 'BackupRecoveryProtectionGroupRunRequestObjectArgsDict']]]] objects: Specifies the list of objects to be protected by this Protection Group run. These can be leaf objects or non-leaf
               objects in the protection hierarchy. This must be specified only if a subset of objects from the Protection Groups needs
               to be protected.
        :param pulumi.Input[_builtins.str] run_type: Type of protection run. 'kRegular' indicates an incremental (CBT) backup. Incremental backups utilizing CBT (if
               supported) are captured of the target protection objects. The first run of a kRegular schedule captures all the blocks.
               'kFull' indicates a full (no CBT) backup. A complete backup (all blocks) of the target protection objects are always
               captured and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database Log backup. Capture the database
               transaction logs to allow rolling back to a specific point in time. 'kSystem' indicates system volume backup. It
               produces an image for bare metal recovery.
        :param pulumi.Input[Union['BackupRecoveryProtectionGroupRunRequestTargetsConfigArgs', 'BackupRecoveryProtectionGroupRunRequestTargetsConfigArgsDict']] targets_config: Specifies the replication and archival targets.
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BackupRecoveryProtectionGroupRunRequestState.__new__(_BackupRecoveryProtectionGroupRunRequestState)

        __props__.__dict__["backup_recovery_protection_group_run_request_id"] = backup_recovery_protection_group_run_request_id
        __props__.__dict__["group_id"] = group_id
        __props__.__dict__["objects"] = objects
        __props__.__dict__["run_type"] = run_type
        __props__.__dict__["targets_config"] = targets_config
        __props__.__dict__["x_ibm_tenant_id"] = x_ibm_tenant_id
        return BackupRecoveryProtectionGroupRunRequest(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="backupRecoveryProtectionGroupRunRequestId")
    def backup_recovery_protection_group_run_request_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "backup_recovery_protection_group_run_request_id")

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Protection group id
        """
        return pulumi.get(self, "group_id")

    @_builtins.property
    @pulumi.getter
    def objects(self) -> pulumi.Output[Optional[Sequence['outputs.BackupRecoveryProtectionGroupRunRequestObject']]]:
        """
        Specifies the list of objects to be protected by this Protection Group run. These can be leaf objects or non-leaf
        objects in the protection hierarchy. This must be specified only if a subset of objects from the Protection Groups needs
        to be protected.
        """
        return pulumi.get(self, "objects")

    @_builtins.property
    @pulumi.getter(name="runType")
    def run_type(self) -> pulumi.Output[_builtins.str]:
        """
        Type of protection run. 'kRegular' indicates an incremental (CBT) backup. Incremental backups utilizing CBT (if
        supported) are captured of the target protection objects. The first run of a kRegular schedule captures all the blocks.
        'kFull' indicates a full (no CBT) backup. A complete backup (all blocks) of the target protection objects are always
        captured and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database Log backup. Capture the database
        transaction logs to allow rolling back to a specific point in time. 'kSystem' indicates system volume backup. It
        produces an image for bare metal recovery.
        """
        return pulumi.get(self, "run_type")

    @_builtins.property
    @pulumi.getter(name="targetsConfig")
    def targets_config(self) -> pulumi.Output[Optional['outputs.BackupRecoveryProtectionGroupRunRequestTargetsConfig']]:
        """
        Specifies the replication and archival targets.
        """
        return pulumi.get(self, "targets_config")

    @_builtins.property
    @pulumi.getter(name="xIbmTenantId")
    def x_ibm_tenant_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
        be specified.
        """
        return pulumi.get(self, "x_ibm_tenant_id")

