# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['CbrZoneAddressesArgs', 'CbrZoneAddresses']

@pulumi.input_type
class CbrZoneAddressesArgs:
    def __init__(__self__, *,
                 addresses: pulumi.Input[Sequence[pulumi.Input['CbrZoneAddressesAddressArgs']]],
                 zone_id: pulumi.Input[_builtins.str],
                 cbr_zone_addresses_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['CbrZoneAddressesTimeoutsArgs']] = None,
                 transaction_id: Optional[pulumi.Input[_builtins.str]] = None,
                 x_correlation_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a CbrZoneAddresses resource.
        :param pulumi.Input[Sequence[pulumi.Input['CbrZoneAddressesAddressArgs']]] addresses: The list of addresses added to the zone.
        :param pulumi.Input[_builtins.str] zone_id: The id of the zone containing the addresses.
        :param pulumi.Input[_builtins.str] transaction_id: The `Transaction-Id` header behaves as the `X-Correlation-Id` header. It is supported for backward compatibility with
               other IBM platform services that support the `Transaction-Id` header only. If both `X-Correlation-Id` and
               `Transaction-Id` are provided, `X-Correlation-Id` has the precedence over `Transaction-Id`.
        :param pulumi.Input[_builtins.str] x_correlation_id: The supplied or generated value of this header is logged for a request and repeated in a response header for the
               corresponding response. The same value is used for downstream requests and retries of those requests. If a value of this
               headers is not supplied in a request, the service generates a random (version 4) UUID.
        """
        pulumi.set(__self__, "addresses", addresses)
        pulumi.set(__self__, "zone_id", zone_id)
        if cbr_zone_addresses_id is not None:
            pulumi.set(__self__, "cbr_zone_addresses_id", cbr_zone_addresses_id)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)
        if transaction_id is not None:
            pulumi.set(__self__, "transaction_id", transaction_id)
        if x_correlation_id is not None:
            pulumi.set(__self__, "x_correlation_id", x_correlation_id)

    @_builtins.property
    @pulumi.getter
    def addresses(self) -> pulumi.Input[Sequence[pulumi.Input['CbrZoneAddressesAddressArgs']]]:
        """
        The list of addresses added to the zone.
        """
        return pulumi.get(self, "addresses")

    @addresses.setter
    def addresses(self, value: pulumi.Input[Sequence[pulumi.Input['CbrZoneAddressesAddressArgs']]]):
        pulumi.set(self, "addresses", value)

    @_builtins.property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> pulumi.Input[_builtins.str]:
        """
        The id of the zone containing the addresses.
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "zone_id", value)

    @_builtins.property
    @pulumi.getter(name="cbrZoneAddressesId")
    def cbr_zone_addresses_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "cbr_zone_addresses_id")

    @cbr_zone_addresses_id.setter
    def cbr_zone_addresses_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cbr_zone_addresses_id", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['CbrZoneAddressesTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['CbrZoneAddressesTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)

    @_builtins.property
    @pulumi.getter(name="transactionId")
    def transaction_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The `Transaction-Id` header behaves as the `X-Correlation-Id` header. It is supported for backward compatibility with
        other IBM platform services that support the `Transaction-Id` header only. If both `X-Correlation-Id` and
        `Transaction-Id` are provided, `X-Correlation-Id` has the precedence over `Transaction-Id`.
        """
        return pulumi.get(self, "transaction_id")

    @transaction_id.setter
    def transaction_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "transaction_id", value)

    @_builtins.property
    @pulumi.getter(name="xCorrelationId")
    def x_correlation_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The supplied or generated value of this header is logged for a request and repeated in a response header for the
        corresponding response. The same value is used for downstream requests and retries of those requests. If a value of this
        headers is not supplied in a request, the service generates a random (version 4) UUID.
        """
        return pulumi.get(self, "x_correlation_id")

    @x_correlation_id.setter
    def x_correlation_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "x_correlation_id", value)


@pulumi.input_type
class _CbrZoneAddressesState:
    def __init__(__self__, *,
                 addresses: Optional[pulumi.Input[Sequence[pulumi.Input['CbrZoneAddressesAddressArgs']]]] = None,
                 cbr_zone_addresses_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['CbrZoneAddressesTimeoutsArgs']] = None,
                 transaction_id: Optional[pulumi.Input[_builtins.str]] = None,
                 x_correlation_id: Optional[pulumi.Input[_builtins.str]] = None,
                 zone_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering CbrZoneAddresses resources.
        :param pulumi.Input[Sequence[pulumi.Input['CbrZoneAddressesAddressArgs']]] addresses: The list of addresses added to the zone.
        :param pulumi.Input[_builtins.str] transaction_id: The `Transaction-Id` header behaves as the `X-Correlation-Id` header. It is supported for backward compatibility with
               other IBM platform services that support the `Transaction-Id` header only. If both `X-Correlation-Id` and
               `Transaction-Id` are provided, `X-Correlation-Id` has the precedence over `Transaction-Id`.
        :param pulumi.Input[_builtins.str] x_correlation_id: The supplied or generated value of this header is logged for a request and repeated in a response header for the
               corresponding response. The same value is used for downstream requests and retries of those requests. If a value of this
               headers is not supplied in a request, the service generates a random (version 4) UUID.
        :param pulumi.Input[_builtins.str] zone_id: The id of the zone containing the addresses.
        """
        if addresses is not None:
            pulumi.set(__self__, "addresses", addresses)
        if cbr_zone_addresses_id is not None:
            pulumi.set(__self__, "cbr_zone_addresses_id", cbr_zone_addresses_id)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)
        if transaction_id is not None:
            pulumi.set(__self__, "transaction_id", transaction_id)
        if x_correlation_id is not None:
            pulumi.set(__self__, "x_correlation_id", x_correlation_id)
        if zone_id is not None:
            pulumi.set(__self__, "zone_id", zone_id)

    @_builtins.property
    @pulumi.getter
    def addresses(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CbrZoneAddressesAddressArgs']]]]:
        """
        The list of addresses added to the zone.
        """
        return pulumi.get(self, "addresses")

    @addresses.setter
    def addresses(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CbrZoneAddressesAddressArgs']]]]):
        pulumi.set(self, "addresses", value)

    @_builtins.property
    @pulumi.getter(name="cbrZoneAddressesId")
    def cbr_zone_addresses_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "cbr_zone_addresses_id")

    @cbr_zone_addresses_id.setter
    def cbr_zone_addresses_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cbr_zone_addresses_id", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['CbrZoneAddressesTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['CbrZoneAddressesTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)

    @_builtins.property
    @pulumi.getter(name="transactionId")
    def transaction_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The `Transaction-Id` header behaves as the `X-Correlation-Id` header. It is supported for backward compatibility with
        other IBM platform services that support the `Transaction-Id` header only. If both `X-Correlation-Id` and
        `Transaction-Id` are provided, `X-Correlation-Id` has the precedence over `Transaction-Id`.
        """
        return pulumi.get(self, "transaction_id")

    @transaction_id.setter
    def transaction_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "transaction_id", value)

    @_builtins.property
    @pulumi.getter(name="xCorrelationId")
    def x_correlation_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The supplied or generated value of this header is logged for a request and repeated in a response header for the
        corresponding response. The same value is used for downstream requests and retries of those requests. If a value of this
        headers is not supplied in a request, the service generates a random (version 4) UUID.
        """
        return pulumi.get(self, "x_correlation_id")

    @x_correlation_id.setter
    def x_correlation_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "x_correlation_id", value)

    @_builtins.property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The id of the zone containing the addresses.
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "zone_id", value)


@pulumi.type_token("ibm:index/cbrZoneAddresses:CbrZoneAddresses")
class CbrZoneAddresses(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 addresses: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CbrZoneAddressesAddressArgs', 'CbrZoneAddressesAddressArgsDict']]]]] = None,
                 cbr_zone_addresses_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input[Union['CbrZoneAddressesTimeoutsArgs', 'CbrZoneAddressesTimeoutsArgsDict']]] = None,
                 transaction_id: Optional[pulumi.Input[_builtins.str]] = None,
                 x_correlation_id: Optional[pulumi.Input[_builtins.str]] = None,
                 zone_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a CbrZoneAddresses resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CbrZoneAddressesAddressArgs', 'CbrZoneAddressesAddressArgsDict']]]] addresses: The list of addresses added to the zone.
        :param pulumi.Input[_builtins.str] transaction_id: The `Transaction-Id` header behaves as the `X-Correlation-Id` header. It is supported for backward compatibility with
               other IBM platform services that support the `Transaction-Id` header only. If both `X-Correlation-Id` and
               `Transaction-Id` are provided, `X-Correlation-Id` has the precedence over `Transaction-Id`.
        :param pulumi.Input[_builtins.str] x_correlation_id: The supplied or generated value of this header is logged for a request and repeated in a response header for the
               corresponding response. The same value is used for downstream requests and retries of those requests. If a value of this
               headers is not supplied in a request, the service generates a random (version 4) UUID.
        :param pulumi.Input[_builtins.str] zone_id: The id of the zone containing the addresses.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CbrZoneAddressesArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a CbrZoneAddresses resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param CbrZoneAddressesArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CbrZoneAddressesArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 addresses: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CbrZoneAddressesAddressArgs', 'CbrZoneAddressesAddressArgsDict']]]]] = None,
                 cbr_zone_addresses_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input[Union['CbrZoneAddressesTimeoutsArgs', 'CbrZoneAddressesTimeoutsArgsDict']]] = None,
                 transaction_id: Optional[pulumi.Input[_builtins.str]] = None,
                 x_correlation_id: Optional[pulumi.Input[_builtins.str]] = None,
                 zone_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CbrZoneAddressesArgs.__new__(CbrZoneAddressesArgs)

            if addresses is None and not opts.urn:
                raise TypeError("Missing required property 'addresses'")
            __props__.__dict__["addresses"] = addresses
            __props__.__dict__["cbr_zone_addresses_id"] = cbr_zone_addresses_id
            __props__.__dict__["timeouts"] = timeouts
            __props__.__dict__["transaction_id"] = transaction_id
            __props__.__dict__["x_correlation_id"] = x_correlation_id
            if zone_id is None and not opts.urn:
                raise TypeError("Missing required property 'zone_id'")
            __props__.__dict__["zone_id"] = zone_id
        super(CbrZoneAddresses, __self__).__init__(
            'ibm:index/cbrZoneAddresses:CbrZoneAddresses',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            addresses: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CbrZoneAddressesAddressArgs', 'CbrZoneAddressesAddressArgsDict']]]]] = None,
            cbr_zone_addresses_id: Optional[pulumi.Input[_builtins.str]] = None,
            timeouts: Optional[pulumi.Input[Union['CbrZoneAddressesTimeoutsArgs', 'CbrZoneAddressesTimeoutsArgsDict']]] = None,
            transaction_id: Optional[pulumi.Input[_builtins.str]] = None,
            x_correlation_id: Optional[pulumi.Input[_builtins.str]] = None,
            zone_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'CbrZoneAddresses':
        """
        Get an existing CbrZoneAddresses resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CbrZoneAddressesAddressArgs', 'CbrZoneAddressesAddressArgsDict']]]] addresses: The list of addresses added to the zone.
        :param pulumi.Input[_builtins.str] transaction_id: The `Transaction-Id` header behaves as the `X-Correlation-Id` header. It is supported for backward compatibility with
               other IBM platform services that support the `Transaction-Id` header only. If both `X-Correlation-Id` and
               `Transaction-Id` are provided, `X-Correlation-Id` has the precedence over `Transaction-Id`.
        :param pulumi.Input[_builtins.str] x_correlation_id: The supplied or generated value of this header is logged for a request and repeated in a response header for the
               corresponding response. The same value is used for downstream requests and retries of those requests. If a value of this
               headers is not supplied in a request, the service generates a random (version 4) UUID.
        :param pulumi.Input[_builtins.str] zone_id: The id of the zone containing the addresses.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CbrZoneAddressesState.__new__(_CbrZoneAddressesState)

        __props__.__dict__["addresses"] = addresses
        __props__.__dict__["cbr_zone_addresses_id"] = cbr_zone_addresses_id
        __props__.__dict__["timeouts"] = timeouts
        __props__.__dict__["transaction_id"] = transaction_id
        __props__.__dict__["x_correlation_id"] = x_correlation_id
        __props__.__dict__["zone_id"] = zone_id
        return CbrZoneAddresses(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def addresses(self) -> pulumi.Output[Sequence['outputs.CbrZoneAddressesAddress']]:
        """
        The list of addresses added to the zone.
        """
        return pulumi.get(self, "addresses")

    @_builtins.property
    @pulumi.getter(name="cbrZoneAddressesId")
    def cbr_zone_addresses_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "cbr_zone_addresses_id")

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> pulumi.Output[Optional['outputs.CbrZoneAddressesTimeouts']]:
        return pulumi.get(self, "timeouts")

    @_builtins.property
    @pulumi.getter(name="transactionId")
    def transaction_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The `Transaction-Id` header behaves as the `X-Correlation-Id` header. It is supported for backward compatibility with
        other IBM platform services that support the `Transaction-Id` header only. If both `X-Correlation-Id` and
        `Transaction-Id` are provided, `X-Correlation-Id` has the precedence over `Transaction-Id`.
        """
        return pulumi.get(self, "transaction_id")

    @_builtins.property
    @pulumi.getter(name="xCorrelationId")
    def x_correlation_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The supplied or generated value of this header is logged for a request and repeated in a response header for the
        corresponding response. The same value is used for downstream requests and retries of those requests. If a value of this
        headers is not supplied in a request, the service generates a random (version 4) UUID.
        """
        return pulumi.get(self, "x_correlation_id")

    @_builtins.property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> pulumi.Output[_builtins.str]:
        """
        The id of the zone containing the addresses.
        """
        return pulumi.get(self, "zone_id")

