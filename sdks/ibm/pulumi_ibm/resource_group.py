# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ResourceGroupArgs', 'ResourceGroup']

@pulumi.input_type
class ResourceGroupArgs:
    def __init__(__self__, *,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 timeouts: Optional[pulumi.Input['ResourceGroupTimeoutsArgs']] = None):
        """
        The set of arguments for constructing a ResourceGroup resource.
        :param pulumi.Input[_builtins.str] name: The name of the resource group
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if resource_group_id is not None:
            pulumi.set(__self__, "resource_group_id", resource_group_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the resource group
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="resourceGroupId")
    def resource_group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "resource_group_id")

    @resource_group_id.setter
    def resource_group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_group_id", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['ResourceGroupTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['ResourceGroupTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)


@pulumi.input_type
class _ResourceGroupState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 default: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 payment_methods_url: Optional[pulumi.Input[_builtins.str]] = None,
                 quota_id: Optional[pulumi.Input[_builtins.str]] = None,
                 quota_url: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_linkages: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 state: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 teams_url: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['ResourceGroupTimeoutsArgs']] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering ResourceGroup resources.
        :param pulumi.Input[_builtins.str] created_at: The date when the resource group was initially created.
        :param pulumi.Input[_builtins.str] crn: The full CRN associated with the resource group
        :param pulumi.Input[_builtins.bool] default: Specifies whether its default resource group or not
        :param pulumi.Input[_builtins.str] name: The name of the resource group
        :param pulumi.Input[_builtins.str] payment_methods_url: The URL to access the payment methods details that associated with the resource group.
        :param pulumi.Input[_builtins.str] quota_id: An alpha-numeric value identifying the quota ID associated with the resource group.
        :param pulumi.Input[_builtins.str] quota_url: The URL to access the quota details that associated with the resource group.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] resource_linkages: An array of the resources that linked to the resource group
        :param pulumi.Input[_builtins.str] state: State of the resource group
        :param pulumi.Input[_builtins.str] teams_url: The URL to access the team details that associated with the resource group.
        :param pulumi.Input[_builtins.str] updated_at: The date when the resource group was last updated.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if crn is not None:
            pulumi.set(__self__, "crn", crn)
        if default is not None:
            pulumi.set(__self__, "default", default)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if payment_methods_url is not None:
            pulumi.set(__self__, "payment_methods_url", payment_methods_url)
        if quota_id is not None:
            pulumi.set(__self__, "quota_id", quota_id)
        if quota_url is not None:
            pulumi.set(__self__, "quota_url", quota_url)
        if resource_group_id is not None:
            pulumi.set(__self__, "resource_group_id", resource_group_id)
        if resource_linkages is not None:
            pulumi.set(__self__, "resource_linkages", resource_linkages)
        if state is not None:
            pulumi.set(__self__, "state", state)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if teams_url is not None:
            pulumi.set(__self__, "teams_url", teams_url)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date when the resource group was initially created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The full CRN associated with the resource group
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter
    def default(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether its default resource group or not
        """
        return pulumi.get(self, "default")

    @default.setter
    def default(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "default", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the resource group
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="paymentMethodsUrl")
    def payment_methods_url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL to access the payment methods details that associated with the resource group.
        """
        return pulumi.get(self, "payment_methods_url")

    @payment_methods_url.setter
    def payment_methods_url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "payment_methods_url", value)

    @_builtins.property
    @pulumi.getter(name="quotaId")
    def quota_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        An alpha-numeric value identifying the quota ID associated with the resource group.
        """
        return pulumi.get(self, "quota_id")

    @quota_id.setter
    def quota_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "quota_id", value)

    @_builtins.property
    @pulumi.getter(name="quotaUrl")
    def quota_url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL to access the quota details that associated with the resource group.
        """
        return pulumi.get(self, "quota_url")

    @quota_url.setter
    def quota_url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "quota_url", value)

    @_builtins.property
    @pulumi.getter(name="resourceGroupId")
    def resource_group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "resource_group_id")

    @resource_group_id.setter
    def resource_group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_group_id", value)

    @_builtins.property
    @pulumi.getter(name="resourceLinkages")
    def resource_linkages(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        An array of the resources that linked to the resource group
        """
        return pulumi.get(self, "resource_linkages")

    @resource_linkages.setter
    def resource_linkages(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "resource_linkages", value)

    @_builtins.property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        State of the resource group
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "state", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter(name="teamsUrl")
    def teams_url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL to access the team details that associated with the resource group.
        """
        return pulumi.get(self, "teams_url")

    @teams_url.setter
    def teams_url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "teams_url", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['ResourceGroupTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['ResourceGroupTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date when the resource group was last updated.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("ibm:index/resourceGroup:ResourceGroup")
class ResourceGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 timeouts: Optional[pulumi.Input[Union['ResourceGroupTimeoutsArgs', 'ResourceGroupTimeoutsArgsDict']]] = None,
                 __props__=None):
        """
        Create a ResourceGroup resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] name: The name of the resource group
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[ResourceGroupArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a ResourceGroup resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param ResourceGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ResourceGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 timeouts: Optional[pulumi.Input[Union['ResourceGroupTimeoutsArgs', 'ResourceGroupTimeoutsArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ResourceGroupArgs.__new__(ResourceGroupArgs)

            __props__.__dict__["name"] = name
            __props__.__dict__["resource_group_id"] = resource_group_id
            __props__.__dict__["tags"] = tags
            __props__.__dict__["timeouts"] = timeouts
            __props__.__dict__["created_at"] = None
            __props__.__dict__["crn"] = None
            __props__.__dict__["default"] = None
            __props__.__dict__["payment_methods_url"] = None
            __props__.__dict__["quota_id"] = None
            __props__.__dict__["quota_url"] = None
            __props__.__dict__["resource_linkages"] = None
            __props__.__dict__["state"] = None
            __props__.__dict__["teams_url"] = None
            __props__.__dict__["updated_at"] = None
        super(ResourceGroup, __self__).__init__(
            'ibm:index/resourceGroup:ResourceGroup',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            crn: Optional[pulumi.Input[_builtins.str]] = None,
            default: Optional[pulumi.Input[_builtins.bool]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            payment_methods_url: Optional[pulumi.Input[_builtins.str]] = None,
            quota_id: Optional[pulumi.Input[_builtins.str]] = None,
            quota_url: Optional[pulumi.Input[_builtins.str]] = None,
            resource_group_id: Optional[pulumi.Input[_builtins.str]] = None,
            resource_linkages: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            state: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            teams_url: Optional[pulumi.Input[_builtins.str]] = None,
            timeouts: Optional[pulumi.Input[Union['ResourceGroupTimeoutsArgs', 'ResourceGroupTimeoutsArgsDict']]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'ResourceGroup':
        """
        Get an existing ResourceGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: The date when the resource group was initially created.
        :param pulumi.Input[_builtins.str] crn: The full CRN associated with the resource group
        :param pulumi.Input[_builtins.bool] default: Specifies whether its default resource group or not
        :param pulumi.Input[_builtins.str] name: The name of the resource group
        :param pulumi.Input[_builtins.str] payment_methods_url: The URL to access the payment methods details that associated with the resource group.
        :param pulumi.Input[_builtins.str] quota_id: An alpha-numeric value identifying the quota ID associated with the resource group.
        :param pulumi.Input[_builtins.str] quota_url: The URL to access the quota details that associated with the resource group.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] resource_linkages: An array of the resources that linked to the resource group
        :param pulumi.Input[_builtins.str] state: State of the resource group
        :param pulumi.Input[_builtins.str] teams_url: The URL to access the team details that associated with the resource group.
        :param pulumi.Input[_builtins.str] updated_at: The date when the resource group was last updated.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ResourceGroupState.__new__(_ResourceGroupState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["crn"] = crn
        __props__.__dict__["default"] = default
        __props__.__dict__["name"] = name
        __props__.__dict__["payment_methods_url"] = payment_methods_url
        __props__.__dict__["quota_id"] = quota_id
        __props__.__dict__["quota_url"] = quota_url
        __props__.__dict__["resource_group_id"] = resource_group_id
        __props__.__dict__["resource_linkages"] = resource_linkages
        __props__.__dict__["state"] = state
        __props__.__dict__["tags"] = tags
        __props__.__dict__["teams_url"] = teams_url
        __props__.__dict__["timeouts"] = timeouts
        __props__.__dict__["updated_at"] = updated_at
        return ResourceGroup(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The date when the resource group was initially created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Output[_builtins.str]:
        """
        The full CRN associated with the resource group
        """
        return pulumi.get(self, "crn")

    @_builtins.property
    @pulumi.getter
    def default(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether its default resource group or not
        """
        return pulumi.get(self, "default")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the resource group
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="paymentMethodsUrl")
    def payment_methods_url(self) -> pulumi.Output[_builtins.str]:
        """
        The URL to access the payment methods details that associated with the resource group.
        """
        return pulumi.get(self, "payment_methods_url")

    @_builtins.property
    @pulumi.getter(name="quotaId")
    def quota_id(self) -> pulumi.Output[_builtins.str]:
        """
        An alpha-numeric value identifying the quota ID associated with the resource group.
        """
        return pulumi.get(self, "quota_id")

    @_builtins.property
    @pulumi.getter(name="quotaUrl")
    def quota_url(self) -> pulumi.Output[_builtins.str]:
        """
        The URL to access the quota details that associated with the resource group.
        """
        return pulumi.get(self, "quota_url")

    @_builtins.property
    @pulumi.getter(name="resourceGroupId")
    def resource_group_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "resource_group_id")

    @_builtins.property
    @pulumi.getter(name="resourceLinkages")
    def resource_linkages(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        An array of the resources that linked to the resource group
        """
        return pulumi.get(self, "resource_linkages")

    @_builtins.property
    @pulumi.getter
    def state(self) -> pulumi.Output[_builtins.str]:
        """
        State of the resource group
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter(name="teamsUrl")
    def teams_url(self) -> pulumi.Output[_builtins.str]:
        """
        The URL to access the team details that associated with the resource group.
        """
        return pulumi.get(self, "teams_url")

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> pulumi.Output[Optional['outputs.ResourceGroupTimeouts']]:
        return pulumi.get(self, "timeouts")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The date when the resource group was last updated.
        """
        return pulumi.get(self, "updated_at")

