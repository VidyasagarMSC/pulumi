# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['CisPageRuleArgs', 'CisPageRule']

@pulumi.input_type
class CisPageRuleArgs:
    def __init__(__self__, *,
                 actions: pulumi.Input[Sequence[pulumi.Input['CisPageRuleActionArgs']]],
                 cis_id: pulumi.Input[_builtins.str],
                 domain_id: pulumi.Input[_builtins.str],
                 targets: pulumi.Input[Sequence[pulumi.Input['CisPageRuleTargetArgs']]],
                 cis_page_rule_id: Optional[pulumi.Input[_builtins.str]] = None,
                 priority: Optional[pulumi.Input[_builtins.float]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a CisPageRule resource.
        :param pulumi.Input[Sequence[pulumi.Input['CisPageRuleActionArgs']]] actions: Page rule actions
        :param pulumi.Input[_builtins.str] cis_id: CIS instance crn
        :param pulumi.Input[_builtins.str] domain_id: Associated CIS domain
        :param pulumi.Input[Sequence[pulumi.Input['CisPageRuleTargetArgs']]] targets: Page rule targets
        :param pulumi.Input[_builtins.float] priority: Page rule priority
        :param pulumi.Input[_builtins.str] status: Page Rule status
        """
        pulumi.set(__self__, "actions", actions)
        pulumi.set(__self__, "cis_id", cis_id)
        pulumi.set(__self__, "domain_id", domain_id)
        pulumi.set(__self__, "targets", targets)
        if cis_page_rule_id is not None:
            pulumi.set(__self__, "cis_page_rule_id", cis_page_rule_id)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter
    def actions(self) -> pulumi.Input[Sequence[pulumi.Input['CisPageRuleActionArgs']]]:
        """
        Page rule actions
        """
        return pulumi.get(self, "actions")

    @actions.setter
    def actions(self, value: pulumi.Input[Sequence[pulumi.Input['CisPageRuleActionArgs']]]):
        pulumi.set(self, "actions", value)

    @_builtins.property
    @pulumi.getter(name="cisId")
    def cis_id(self) -> pulumi.Input[_builtins.str]:
        """
        CIS instance crn
        """
        return pulumi.get(self, "cis_id")

    @cis_id.setter
    def cis_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "cis_id", value)

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> pulumi.Input[_builtins.str]:
        """
        Associated CIS domain
        """
        return pulumi.get(self, "domain_id")

    @domain_id.setter
    def domain_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "domain_id", value)

    @_builtins.property
    @pulumi.getter
    def targets(self) -> pulumi.Input[Sequence[pulumi.Input['CisPageRuleTargetArgs']]]:
        """
        Page rule targets
        """
        return pulumi.get(self, "targets")

    @targets.setter
    def targets(self, value: pulumi.Input[Sequence[pulumi.Input['CisPageRuleTargetArgs']]]):
        pulumi.set(self, "targets", value)

    @_builtins.property
    @pulumi.getter(name="cisPageRuleId")
    def cis_page_rule_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "cis_page_rule_id")

    @cis_page_rule_id.setter
    def cis_page_rule_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cis_page_rule_id", value)

    @_builtins.property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Page rule priority
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "priority", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Page Rule status
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)


@pulumi.input_type
class _CisPageRuleState:
    def __init__(__self__, *,
                 actions: Optional[pulumi.Input[Sequence[pulumi.Input['CisPageRuleActionArgs']]]] = None,
                 cis_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_page_rule_id: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 priority: Optional[pulumi.Input[_builtins.float]] = None,
                 rule_id: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 targets: Optional[pulumi.Input[Sequence[pulumi.Input['CisPageRuleTargetArgs']]]] = None):
        """
        Input properties used for looking up and filtering CisPageRule resources.
        :param pulumi.Input[Sequence[pulumi.Input['CisPageRuleActionArgs']]] actions: Page rule actions
        :param pulumi.Input[_builtins.str] cis_id: CIS instance crn
        :param pulumi.Input[_builtins.str] domain_id: Associated CIS domain
        :param pulumi.Input[_builtins.float] priority: Page rule priority
        :param pulumi.Input[_builtins.str] status: Page Rule status
        :param pulumi.Input[Sequence[pulumi.Input['CisPageRuleTargetArgs']]] targets: Page rule targets
        """
        if actions is not None:
            pulumi.set(__self__, "actions", actions)
        if cis_id is not None:
            pulumi.set(__self__, "cis_id", cis_id)
        if cis_page_rule_id is not None:
            pulumi.set(__self__, "cis_page_rule_id", cis_page_rule_id)
        if domain_id is not None:
            pulumi.set(__self__, "domain_id", domain_id)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)
        if rule_id is not None:
            pulumi.set(__self__, "rule_id", rule_id)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if targets is not None:
            pulumi.set(__self__, "targets", targets)

    @_builtins.property
    @pulumi.getter
    def actions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CisPageRuleActionArgs']]]]:
        """
        Page rule actions
        """
        return pulumi.get(self, "actions")

    @actions.setter
    def actions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CisPageRuleActionArgs']]]]):
        pulumi.set(self, "actions", value)

    @_builtins.property
    @pulumi.getter(name="cisId")
    def cis_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        CIS instance crn
        """
        return pulumi.get(self, "cis_id")

    @cis_id.setter
    def cis_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cis_id", value)

    @_builtins.property
    @pulumi.getter(name="cisPageRuleId")
    def cis_page_rule_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "cis_page_rule_id")

    @cis_page_rule_id.setter
    def cis_page_rule_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cis_page_rule_id", value)

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Associated CIS domain
        """
        return pulumi.get(self, "domain_id")

    @domain_id.setter
    def domain_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "domain_id", value)

    @_builtins.property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Page rule priority
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "priority", value)

    @_builtins.property
    @pulumi.getter(name="ruleId")
    def rule_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "rule_id")

    @rule_id.setter
    def rule_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "rule_id", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Page Rule status
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CisPageRuleTargetArgs']]]]:
        """
        Page rule targets
        """
        return pulumi.get(self, "targets")

    @targets.setter
    def targets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CisPageRuleTargetArgs']]]]):
        pulumi.set(self, "targets", value)


@pulumi.type_token("ibm:index/cisPageRule:CisPageRule")
class CisPageRule(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 actions: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CisPageRuleActionArgs', 'CisPageRuleActionArgsDict']]]]] = None,
                 cis_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_page_rule_id: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 priority: Optional[pulumi.Input[_builtins.float]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 targets: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CisPageRuleTargetArgs', 'CisPageRuleTargetArgsDict']]]]] = None,
                 __props__=None):
        """
        Create a CisPageRule resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CisPageRuleActionArgs', 'CisPageRuleActionArgsDict']]]] actions: Page rule actions
        :param pulumi.Input[_builtins.str] cis_id: CIS instance crn
        :param pulumi.Input[_builtins.str] domain_id: Associated CIS domain
        :param pulumi.Input[_builtins.float] priority: Page rule priority
        :param pulumi.Input[_builtins.str] status: Page Rule status
        :param pulumi.Input[Sequence[pulumi.Input[Union['CisPageRuleTargetArgs', 'CisPageRuleTargetArgsDict']]]] targets: Page rule targets
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CisPageRuleArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a CisPageRule resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param CisPageRuleArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CisPageRuleArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 actions: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CisPageRuleActionArgs', 'CisPageRuleActionArgsDict']]]]] = None,
                 cis_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_page_rule_id: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 priority: Optional[pulumi.Input[_builtins.float]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 targets: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CisPageRuleTargetArgs', 'CisPageRuleTargetArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CisPageRuleArgs.__new__(CisPageRuleArgs)

            if actions is None and not opts.urn:
                raise TypeError("Missing required property 'actions'")
            __props__.__dict__["actions"] = actions
            if cis_id is None and not opts.urn:
                raise TypeError("Missing required property 'cis_id'")
            __props__.__dict__["cis_id"] = cis_id
            __props__.__dict__["cis_page_rule_id"] = cis_page_rule_id
            if domain_id is None and not opts.urn:
                raise TypeError("Missing required property 'domain_id'")
            __props__.__dict__["domain_id"] = domain_id
            __props__.__dict__["priority"] = priority
            __props__.__dict__["status"] = status
            if targets is None and not opts.urn:
                raise TypeError("Missing required property 'targets'")
            __props__.__dict__["targets"] = targets
            __props__.__dict__["rule_id"] = None
        super(CisPageRule, __self__).__init__(
            'ibm:index/cisPageRule:CisPageRule',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            actions: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CisPageRuleActionArgs', 'CisPageRuleActionArgsDict']]]]] = None,
            cis_id: Optional[pulumi.Input[_builtins.str]] = None,
            cis_page_rule_id: Optional[pulumi.Input[_builtins.str]] = None,
            domain_id: Optional[pulumi.Input[_builtins.str]] = None,
            priority: Optional[pulumi.Input[_builtins.float]] = None,
            rule_id: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            targets: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CisPageRuleTargetArgs', 'CisPageRuleTargetArgsDict']]]]] = None) -> 'CisPageRule':
        """
        Get an existing CisPageRule resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CisPageRuleActionArgs', 'CisPageRuleActionArgsDict']]]] actions: Page rule actions
        :param pulumi.Input[_builtins.str] cis_id: CIS instance crn
        :param pulumi.Input[_builtins.str] domain_id: Associated CIS domain
        :param pulumi.Input[_builtins.float] priority: Page rule priority
        :param pulumi.Input[_builtins.str] status: Page Rule status
        :param pulumi.Input[Sequence[pulumi.Input[Union['CisPageRuleTargetArgs', 'CisPageRuleTargetArgsDict']]]] targets: Page rule targets
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CisPageRuleState.__new__(_CisPageRuleState)

        __props__.__dict__["actions"] = actions
        __props__.__dict__["cis_id"] = cis_id
        __props__.__dict__["cis_page_rule_id"] = cis_page_rule_id
        __props__.__dict__["domain_id"] = domain_id
        __props__.__dict__["priority"] = priority
        __props__.__dict__["rule_id"] = rule_id
        __props__.__dict__["status"] = status
        __props__.__dict__["targets"] = targets
        return CisPageRule(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def actions(self) -> pulumi.Output[Sequence['outputs.CisPageRuleAction']]:
        """
        Page rule actions
        """
        return pulumi.get(self, "actions")

    @_builtins.property
    @pulumi.getter(name="cisId")
    def cis_id(self) -> pulumi.Output[_builtins.str]:
        """
        CIS instance crn
        """
        return pulumi.get(self, "cis_id")

    @_builtins.property
    @pulumi.getter(name="cisPageRuleId")
    def cis_page_rule_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "cis_page_rule_id")

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> pulumi.Output[_builtins.str]:
        """
        Associated CIS domain
        """
        return pulumi.get(self, "domain_id")

    @_builtins.property
    @pulumi.getter
    def priority(self) -> pulumi.Output[Optional[_builtins.float]]:
        """
        Page rule priority
        """
        return pulumi.get(self, "priority")

    @_builtins.property
    @pulumi.getter(name="ruleId")
    def rule_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "rule_id")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Page Rule status
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> pulumi.Output[Sequence['outputs.CisPageRuleTarget']]:
        """
        Page rule targets
        """
        return pulumi.get(self, "targets")

