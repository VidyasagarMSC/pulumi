# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['IsPrivatePathServiceGatewayRevokeAccountArgs', 'IsPrivatePathServiceGatewayRevokeAccount']

@pulumi.input_type
class IsPrivatePathServiceGatewayRevokeAccountArgs:
    def __init__(__self__, *,
                 account: pulumi.Input[_builtins.str],
                 private_path_service_gateway: pulumi.Input[_builtins.str],
                 is_private_path_service_gateway_revoke_account_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a IsPrivatePathServiceGatewayRevokeAccount resource.
        :param pulumi.Input[_builtins.str] account: The account for this access policy.
        :param pulumi.Input[_builtins.str] private_path_service_gateway: The private path service gateway identifier.
        """
        pulumi.set(__self__, "account", account)
        pulumi.set(__self__, "private_path_service_gateway", private_path_service_gateway)
        if is_private_path_service_gateway_revoke_account_id is not None:
            pulumi.set(__self__, "is_private_path_service_gateway_revoke_account_id", is_private_path_service_gateway_revoke_account_id)

    @_builtins.property
    @pulumi.getter
    def account(self) -> pulumi.Input[_builtins.str]:
        """
        The account for this access policy.
        """
        return pulumi.get(self, "account")

    @account.setter
    def account(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "account", value)

    @_builtins.property
    @pulumi.getter(name="privatePathServiceGateway")
    def private_path_service_gateway(self) -> pulumi.Input[_builtins.str]:
        """
        The private path service gateway identifier.
        """
        return pulumi.get(self, "private_path_service_gateway")

    @private_path_service_gateway.setter
    def private_path_service_gateway(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "private_path_service_gateway", value)

    @_builtins.property
    @pulumi.getter(name="isPrivatePathServiceGatewayRevokeAccountId")
    def is_private_path_service_gateway_revoke_account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "is_private_path_service_gateway_revoke_account_id")

    @is_private_path_service_gateway_revoke_account_id.setter
    def is_private_path_service_gateway_revoke_account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "is_private_path_service_gateway_revoke_account_id", value)


@pulumi.input_type
class _IsPrivatePathServiceGatewayRevokeAccountState:
    def __init__(__self__, *,
                 account: Optional[pulumi.Input[_builtins.str]] = None,
                 is_private_path_service_gateway_revoke_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 private_path_service_gateway: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering IsPrivatePathServiceGatewayRevokeAccount resources.
        :param pulumi.Input[_builtins.str] account: The account for this access policy.
        :param pulumi.Input[_builtins.str] private_path_service_gateway: The private path service gateway identifier.
        """
        if account is not None:
            pulumi.set(__self__, "account", account)
        if is_private_path_service_gateway_revoke_account_id is not None:
            pulumi.set(__self__, "is_private_path_service_gateway_revoke_account_id", is_private_path_service_gateway_revoke_account_id)
        if private_path_service_gateway is not None:
            pulumi.set(__self__, "private_path_service_gateway", private_path_service_gateway)

    @_builtins.property
    @pulumi.getter
    def account(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The account for this access policy.
        """
        return pulumi.get(self, "account")

    @account.setter
    def account(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "account", value)

    @_builtins.property
    @pulumi.getter(name="isPrivatePathServiceGatewayRevokeAccountId")
    def is_private_path_service_gateway_revoke_account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "is_private_path_service_gateway_revoke_account_id")

    @is_private_path_service_gateway_revoke_account_id.setter
    def is_private_path_service_gateway_revoke_account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "is_private_path_service_gateway_revoke_account_id", value)

    @_builtins.property
    @pulumi.getter(name="privatePathServiceGateway")
    def private_path_service_gateway(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The private path service gateway identifier.
        """
        return pulumi.get(self, "private_path_service_gateway")

    @private_path_service_gateway.setter
    def private_path_service_gateway(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "private_path_service_gateway", value)


@pulumi.type_token("ibm:index/isPrivatePathServiceGatewayRevokeAccount:IsPrivatePathServiceGatewayRevokeAccount")
class IsPrivatePathServiceGatewayRevokeAccount(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account: Optional[pulumi.Input[_builtins.str]] = None,
                 is_private_path_service_gateway_revoke_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 private_path_service_gateway: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a IsPrivatePathServiceGatewayRevokeAccount resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] account: The account for this access policy.
        :param pulumi.Input[_builtins.str] private_path_service_gateway: The private path service gateway identifier.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IsPrivatePathServiceGatewayRevokeAccountArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a IsPrivatePathServiceGatewayRevokeAccount resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param IsPrivatePathServiceGatewayRevokeAccountArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IsPrivatePathServiceGatewayRevokeAccountArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account: Optional[pulumi.Input[_builtins.str]] = None,
                 is_private_path_service_gateway_revoke_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 private_path_service_gateway: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IsPrivatePathServiceGatewayRevokeAccountArgs.__new__(IsPrivatePathServiceGatewayRevokeAccountArgs)

            if account is None and not opts.urn:
                raise TypeError("Missing required property 'account'")
            __props__.__dict__["account"] = account
            __props__.__dict__["is_private_path_service_gateway_revoke_account_id"] = is_private_path_service_gateway_revoke_account_id
            if private_path_service_gateway is None and not opts.urn:
                raise TypeError("Missing required property 'private_path_service_gateway'")
            __props__.__dict__["private_path_service_gateway"] = private_path_service_gateway
        super(IsPrivatePathServiceGatewayRevokeAccount, __self__).__init__(
            'ibm:index/isPrivatePathServiceGatewayRevokeAccount:IsPrivatePathServiceGatewayRevokeAccount',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account: Optional[pulumi.Input[_builtins.str]] = None,
            is_private_path_service_gateway_revoke_account_id: Optional[pulumi.Input[_builtins.str]] = None,
            private_path_service_gateway: Optional[pulumi.Input[_builtins.str]] = None) -> 'IsPrivatePathServiceGatewayRevokeAccount':
        """
        Get an existing IsPrivatePathServiceGatewayRevokeAccount resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] account: The account for this access policy.
        :param pulumi.Input[_builtins.str] private_path_service_gateway: The private path service gateway identifier.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IsPrivatePathServiceGatewayRevokeAccountState.__new__(_IsPrivatePathServiceGatewayRevokeAccountState)

        __props__.__dict__["account"] = account
        __props__.__dict__["is_private_path_service_gateway_revoke_account_id"] = is_private_path_service_gateway_revoke_account_id
        __props__.__dict__["private_path_service_gateway"] = private_path_service_gateway
        return IsPrivatePathServiceGatewayRevokeAccount(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def account(self) -> pulumi.Output[_builtins.str]:
        """
        The account for this access policy.
        """
        return pulumi.get(self, "account")

    @_builtins.property
    @pulumi.getter(name="isPrivatePathServiceGatewayRevokeAccountId")
    def is_private_path_service_gateway_revoke_account_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "is_private_path_service_gateway_revoke_account_id")

    @_builtins.property
    @pulumi.getter(name="privatePathServiceGateway")
    def private_path_service_gateway(self) -> pulumi.Output[_builtins.str]:
        """
        The private path service gateway identifier.
        """
        return pulumi.get(self, "private_path_service_gateway")

