# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['SccProviderTypeInstanceArgs', 'SccProviderTypeInstance']

@pulumi.input_type
class SccProviderTypeInstanceArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[_builtins.str],
                 provider_type_id: pulumi.Input[_builtins.str],
                 attributes: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 scc_provider_type_instance_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a SccProviderTypeInstance resource.
        :param pulumi.Input[_builtins.str] instance_id: The ID of the Security and Compliance Center instance.
        :param pulumi.Input[_builtins.str] provider_type_id: The provider type ID.
        :param pulumi.Input[_builtins.str] name: The name of the provider type instance.
        """
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "provider_type_id", provider_type_id)
        if attributes is not None:
            pulumi.set(__self__, "attributes", attributes)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if scc_provider_type_instance_id is not None:
            pulumi.set(__self__, "scc_provider_type_instance_id", scc_provider_type_instance_id)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        The ID of the Security and Compliance Center instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="providerTypeId")
    def provider_type_id(self) -> pulumi.Input[_builtins.str]:
        """
        The provider type ID.
        """
        return pulumi.get(self, "provider_type_id")

    @provider_type_id.setter
    def provider_type_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "provider_type_id", value)

    @_builtins.property
    @pulumi.getter
    def attributes(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        return pulumi.get(self, "attributes")

    @attributes.setter
    def attributes(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "attributes", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the provider type instance.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="sccProviderTypeInstanceId")
    def scc_provider_type_instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "scc_provider_type_instance_id")

    @scc_provider_type_instance_id.setter
    def scc_provider_type_instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "scc_provider_type_instance_id", value)


@pulumi.input_type
class _SccProviderTypeInstanceState:
    def __init__(__self__, *,
                 attributes: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 provider_type_id: Optional[pulumi.Input[_builtins.str]] = None,
                 provider_type_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 scc_provider_type_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering SccProviderTypeInstance resources.
        :param pulumi.Input[_builtins.str] created_at: Time at which resource was created.
        :param pulumi.Input[_builtins.str] instance_id: The ID of the Security and Compliance Center instance.
        :param pulumi.Input[_builtins.str] name: The name of the provider type instance.
        :param pulumi.Input[_builtins.str] provider_type_id: The provider type ID.
        :param pulumi.Input[_builtins.str] provider_type_instance_id: The unique identifier of the provider type instance.
        :param pulumi.Input[_builtins.str] type: The type of the provider type.
        :param pulumi.Input[_builtins.str] updated_at: Time at which resource was updated.
        """
        if attributes is not None:
            pulumi.set(__self__, "attributes", attributes)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if provider_type_id is not None:
            pulumi.set(__self__, "provider_type_id", provider_type_id)
        if provider_type_instance_id is not None:
            pulumi.set(__self__, "provider_type_instance_id", provider_type_instance_id)
        if scc_provider_type_instance_id is not None:
            pulumi.set(__self__, "scc_provider_type_instance_id", scc_provider_type_instance_id)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter
    def attributes(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        return pulumi.get(self, "attributes")

    @attributes.setter
    def attributes(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "attributes", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Time at which resource was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the Security and Compliance Center instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the provider type instance.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="providerTypeId")
    def provider_type_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The provider type ID.
        """
        return pulumi.get(self, "provider_type_id")

    @provider_type_id.setter
    def provider_type_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "provider_type_id", value)

    @_builtins.property
    @pulumi.getter(name="providerTypeInstanceId")
    def provider_type_instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique identifier of the provider type instance.
        """
        return pulumi.get(self, "provider_type_instance_id")

    @provider_type_instance_id.setter
    def provider_type_instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "provider_type_instance_id", value)

    @_builtins.property
    @pulumi.getter(name="sccProviderTypeInstanceId")
    def scc_provider_type_instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "scc_provider_type_instance_id")

    @scc_provider_type_instance_id.setter
    def scc_provider_type_instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "scc_provider_type_instance_id", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The type of the provider type.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Time at which resource was updated.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("ibm:index/sccProviderTypeInstance:SccProviderTypeInstance")
class SccProviderTypeInstance(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 attributes: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 provider_type_id: Optional[pulumi.Input[_builtins.str]] = None,
                 scc_provider_type_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a SccProviderTypeInstance resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] instance_id: The ID of the Security and Compliance Center instance.
        :param pulumi.Input[_builtins.str] name: The name of the provider type instance.
        :param pulumi.Input[_builtins.str] provider_type_id: The provider type ID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SccProviderTypeInstanceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a SccProviderTypeInstance resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param SccProviderTypeInstanceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SccProviderTypeInstanceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 attributes: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 provider_type_id: Optional[pulumi.Input[_builtins.str]] = None,
                 scc_provider_type_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SccProviderTypeInstanceArgs.__new__(SccProviderTypeInstanceArgs)

            __props__.__dict__["attributes"] = attributes
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["name"] = name
            if provider_type_id is None and not opts.urn:
                raise TypeError("Missing required property 'provider_type_id'")
            __props__.__dict__["provider_type_id"] = provider_type_id
            __props__.__dict__["scc_provider_type_instance_id"] = scc_provider_type_instance_id
            __props__.__dict__["created_at"] = None
            __props__.__dict__["provider_type_instance_id"] = None
            __props__.__dict__["type"] = None
            __props__.__dict__["updated_at"] = None
        super(SccProviderTypeInstance, __self__).__init__(
            'ibm:index/sccProviderTypeInstance:SccProviderTypeInstance',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            attributes: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            provider_type_id: Optional[pulumi.Input[_builtins.str]] = None,
            provider_type_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            scc_provider_type_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'SccProviderTypeInstance':
        """
        Get an existing SccProviderTypeInstance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: Time at which resource was created.
        :param pulumi.Input[_builtins.str] instance_id: The ID of the Security and Compliance Center instance.
        :param pulumi.Input[_builtins.str] name: The name of the provider type instance.
        :param pulumi.Input[_builtins.str] provider_type_id: The provider type ID.
        :param pulumi.Input[_builtins.str] provider_type_instance_id: The unique identifier of the provider type instance.
        :param pulumi.Input[_builtins.str] type: The type of the provider type.
        :param pulumi.Input[_builtins.str] updated_at: Time at which resource was updated.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SccProviderTypeInstanceState.__new__(_SccProviderTypeInstanceState)

        __props__.__dict__["attributes"] = attributes
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["name"] = name
        __props__.__dict__["provider_type_id"] = provider_type_id
        __props__.__dict__["provider_type_instance_id"] = provider_type_instance_id
        __props__.__dict__["scc_provider_type_instance_id"] = scc_provider_type_instance_id
        __props__.__dict__["type"] = type
        __props__.__dict__["updated_at"] = updated_at
        return SccProviderTypeInstance(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def attributes(self) -> pulumi.Output[Optional[Mapping[str, _builtins.str]]]:
        return pulumi.get(self, "attributes")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Time at which resource was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the Security and Compliance Center instance.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the provider type instance.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="providerTypeId")
    def provider_type_id(self) -> pulumi.Output[_builtins.str]:
        """
        The provider type ID.
        """
        return pulumi.get(self, "provider_type_id")

    @_builtins.property
    @pulumi.getter(name="providerTypeInstanceId")
    def provider_type_instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        The unique identifier of the provider type instance.
        """
        return pulumi.get(self, "provider_type_instance_id")

    @_builtins.property
    @pulumi.getter(name="sccProviderTypeInstanceId")
    def scc_provider_type_instance_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "scc_provider_type_instance_id")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        The type of the provider type.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Time at which resource was updated.
        """
        return pulumi.get(self, "updated_at")

