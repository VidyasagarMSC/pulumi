# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['CisEdgeFunctionsActionArgs', 'CisEdgeFunctionsAction']

@pulumi.input_type
class CisEdgeFunctionsActionArgs:
    def __init__(__self__, *,
                 action_name: pulumi.Input[_builtins.str],
                 cis_id: pulumi.Input[_builtins.str],
                 domain_id: pulumi.Input[_builtins.str],
                 script: pulumi.Input[_builtins.str],
                 cis_edge_functions_action_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a CisEdgeFunctionsAction resource.
        :param pulumi.Input[_builtins.str] action_name: Edge function action script name
        :param pulumi.Input[_builtins.str] cis_id: CIS Intance CRN
        :param pulumi.Input[_builtins.str] domain_id: CIS Domain ID
        :param pulumi.Input[_builtins.str] script: Edge function action script
        """
        pulumi.set(__self__, "action_name", action_name)
        pulumi.set(__self__, "cis_id", cis_id)
        pulumi.set(__self__, "domain_id", domain_id)
        pulumi.set(__self__, "script", script)
        if cis_edge_functions_action_id is not None:
            pulumi.set(__self__, "cis_edge_functions_action_id", cis_edge_functions_action_id)

    @_builtins.property
    @pulumi.getter(name="actionName")
    def action_name(self) -> pulumi.Input[_builtins.str]:
        """
        Edge function action script name
        """
        return pulumi.get(self, "action_name")

    @action_name.setter
    def action_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "action_name", value)

    @_builtins.property
    @pulumi.getter(name="cisId")
    def cis_id(self) -> pulumi.Input[_builtins.str]:
        """
        CIS Intance CRN
        """
        return pulumi.get(self, "cis_id")

    @cis_id.setter
    def cis_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "cis_id", value)

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> pulumi.Input[_builtins.str]:
        """
        CIS Domain ID
        """
        return pulumi.get(self, "domain_id")

    @domain_id.setter
    def domain_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "domain_id", value)

    @_builtins.property
    @pulumi.getter
    def script(self) -> pulumi.Input[_builtins.str]:
        """
        Edge function action script
        """
        return pulumi.get(self, "script")

    @script.setter
    def script(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "script", value)

    @_builtins.property
    @pulumi.getter(name="cisEdgeFunctionsActionId")
    def cis_edge_functions_action_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "cis_edge_functions_action_id")

    @cis_edge_functions_action_id.setter
    def cis_edge_functions_action_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cis_edge_functions_action_id", value)


@pulumi.input_type
class _CisEdgeFunctionsActionState:
    def __init__(__self__, *,
                 action_name: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_edge_functions_action_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_id: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 script: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering CisEdgeFunctionsAction resources.
        :param pulumi.Input[_builtins.str] action_name: Edge function action script name
        :param pulumi.Input[_builtins.str] cis_id: CIS Intance CRN
        :param pulumi.Input[_builtins.str] domain_id: CIS Domain ID
        :param pulumi.Input[_builtins.str] script: Edge function action script
        """
        if action_name is not None:
            pulumi.set(__self__, "action_name", action_name)
        if cis_edge_functions_action_id is not None:
            pulumi.set(__self__, "cis_edge_functions_action_id", cis_edge_functions_action_id)
        if cis_id is not None:
            pulumi.set(__self__, "cis_id", cis_id)
        if domain_id is not None:
            pulumi.set(__self__, "domain_id", domain_id)
        if script is not None:
            pulumi.set(__self__, "script", script)

    @_builtins.property
    @pulumi.getter(name="actionName")
    def action_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Edge function action script name
        """
        return pulumi.get(self, "action_name")

    @action_name.setter
    def action_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "action_name", value)

    @_builtins.property
    @pulumi.getter(name="cisEdgeFunctionsActionId")
    def cis_edge_functions_action_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "cis_edge_functions_action_id")

    @cis_edge_functions_action_id.setter
    def cis_edge_functions_action_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cis_edge_functions_action_id", value)

    @_builtins.property
    @pulumi.getter(name="cisId")
    def cis_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        CIS Intance CRN
        """
        return pulumi.get(self, "cis_id")

    @cis_id.setter
    def cis_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cis_id", value)

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        CIS Domain ID
        """
        return pulumi.get(self, "domain_id")

    @domain_id.setter
    def domain_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "domain_id", value)

    @_builtins.property
    @pulumi.getter
    def script(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Edge function action script
        """
        return pulumi.get(self, "script")

    @script.setter
    def script(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "script", value)


@pulumi.type_token("ibm:index/cisEdgeFunctionsAction:CisEdgeFunctionsAction")
class CisEdgeFunctionsAction(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action_name: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_edge_functions_action_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_id: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 script: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a CisEdgeFunctionsAction resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action_name: Edge function action script name
        :param pulumi.Input[_builtins.str] cis_id: CIS Intance CRN
        :param pulumi.Input[_builtins.str] domain_id: CIS Domain ID
        :param pulumi.Input[_builtins.str] script: Edge function action script
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CisEdgeFunctionsActionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a CisEdgeFunctionsAction resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param CisEdgeFunctionsActionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CisEdgeFunctionsActionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action_name: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_edge_functions_action_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_id: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 script: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CisEdgeFunctionsActionArgs.__new__(CisEdgeFunctionsActionArgs)

            if action_name is None and not opts.urn:
                raise TypeError("Missing required property 'action_name'")
            __props__.__dict__["action_name"] = action_name
            __props__.__dict__["cis_edge_functions_action_id"] = cis_edge_functions_action_id
            if cis_id is None and not opts.urn:
                raise TypeError("Missing required property 'cis_id'")
            __props__.__dict__["cis_id"] = cis_id
            if domain_id is None and not opts.urn:
                raise TypeError("Missing required property 'domain_id'")
            __props__.__dict__["domain_id"] = domain_id
            if script is None and not opts.urn:
                raise TypeError("Missing required property 'script'")
            __props__.__dict__["script"] = script
        super(CisEdgeFunctionsAction, __self__).__init__(
            'ibm:index/cisEdgeFunctionsAction:CisEdgeFunctionsAction',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action_name: Optional[pulumi.Input[_builtins.str]] = None,
            cis_edge_functions_action_id: Optional[pulumi.Input[_builtins.str]] = None,
            cis_id: Optional[pulumi.Input[_builtins.str]] = None,
            domain_id: Optional[pulumi.Input[_builtins.str]] = None,
            script: Optional[pulumi.Input[_builtins.str]] = None) -> 'CisEdgeFunctionsAction':
        """
        Get an existing CisEdgeFunctionsAction resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action_name: Edge function action script name
        :param pulumi.Input[_builtins.str] cis_id: CIS Intance CRN
        :param pulumi.Input[_builtins.str] domain_id: CIS Domain ID
        :param pulumi.Input[_builtins.str] script: Edge function action script
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CisEdgeFunctionsActionState.__new__(_CisEdgeFunctionsActionState)

        __props__.__dict__["action_name"] = action_name
        __props__.__dict__["cis_edge_functions_action_id"] = cis_edge_functions_action_id
        __props__.__dict__["cis_id"] = cis_id
        __props__.__dict__["domain_id"] = domain_id
        __props__.__dict__["script"] = script
        return CisEdgeFunctionsAction(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="actionName")
    def action_name(self) -> pulumi.Output[_builtins.str]:
        """
        Edge function action script name
        """
        return pulumi.get(self, "action_name")

    @_builtins.property
    @pulumi.getter(name="cisEdgeFunctionsActionId")
    def cis_edge_functions_action_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "cis_edge_functions_action_id")

    @_builtins.property
    @pulumi.getter(name="cisId")
    def cis_id(self) -> pulumi.Output[_builtins.str]:
        """
        CIS Intance CRN
        """
        return pulumi.get(self, "cis_id")

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> pulumi.Output[_builtins.str]:
        """
        CIS Domain ID
        """
        return pulumi.get(self, "domain_id")

    @_builtins.property
    @pulumi.getter
    def script(self) -> pulumi.Output[_builtins.str]:
        """
        Edge function action script
        """
        return pulumi.get(self, "script")

