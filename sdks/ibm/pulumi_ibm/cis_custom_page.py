# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['CisCustomPageArgs', 'CisCustomPage']

@pulumi.input_type
class CisCustomPageArgs:
    def __init__(__self__, *,
                 cis_id: pulumi.Input[_builtins.str],
                 domain_id: pulumi.Input[_builtins.str],
                 page_id: pulumi.Input[_builtins.str],
                 url: pulumi.Input[_builtins.str],
                 cis_custom_page_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a CisCustomPage resource.
        :param pulumi.Input[_builtins.str] cis_id: CIS instance crn
        :param pulumi.Input[_builtins.str] domain_id: Associated CIS domain
        :param pulumi.Input[_builtins.str] page_id: Custom page identifier
        :param pulumi.Input[_builtins.str] url: Custom page url
        """
        pulumi.set(__self__, "cis_id", cis_id)
        pulumi.set(__self__, "domain_id", domain_id)
        pulumi.set(__self__, "page_id", page_id)
        pulumi.set(__self__, "url", url)
        if cis_custom_page_id is not None:
            pulumi.set(__self__, "cis_custom_page_id", cis_custom_page_id)

    @_builtins.property
    @pulumi.getter(name="cisId")
    def cis_id(self) -> pulumi.Input[_builtins.str]:
        """
        CIS instance crn
        """
        return pulumi.get(self, "cis_id")

    @cis_id.setter
    def cis_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "cis_id", value)

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> pulumi.Input[_builtins.str]:
        """
        Associated CIS domain
        """
        return pulumi.get(self, "domain_id")

    @domain_id.setter
    def domain_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "domain_id", value)

    @_builtins.property
    @pulumi.getter(name="pageId")
    def page_id(self) -> pulumi.Input[_builtins.str]:
        """
        Custom page identifier
        """
        return pulumi.get(self, "page_id")

    @page_id.setter
    def page_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "page_id", value)

    @_builtins.property
    @pulumi.getter
    def url(self) -> pulumi.Input[_builtins.str]:
        """
        Custom page url
        """
        return pulumi.get(self, "url")

    @url.setter
    def url(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "url", value)

    @_builtins.property
    @pulumi.getter(name="cisCustomPageId")
    def cis_custom_page_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "cis_custom_page_id")

    @cis_custom_page_id.setter
    def cis_custom_page_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cis_custom_page_id", value)


@pulumi.input_type
class _CisCustomPageState:
    def __init__(__self__, *,
                 cis_custom_page_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_id: Optional[pulumi.Input[_builtins.str]] = None,
                 created_on: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 modified_on: Optional[pulumi.Input[_builtins.str]] = None,
                 page_id: Optional[pulumi.Input[_builtins.str]] = None,
                 preview_target: Optional[pulumi.Input[_builtins.str]] = None,
                 required_tokens: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 state: Optional[pulumi.Input[_builtins.str]] = None,
                 url: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering CisCustomPage resources.
        :param pulumi.Input[_builtins.str] cis_id: CIS instance crn
        :param pulumi.Input[_builtins.str] created_on: Custom page created date
        :param pulumi.Input[_builtins.str] description: Free text
        :param pulumi.Input[_builtins.str] domain_id: Associated CIS domain
        :param pulumi.Input[_builtins.str] modified_on: Custom page modified date
        :param pulumi.Input[_builtins.str] page_id: Custom page identifier
        :param pulumi.Input[_builtins.str] preview_target: Custom page preview target
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] required_tokens: Custom page state
        :param pulumi.Input[_builtins.str] state: Custom page state
        :param pulumi.Input[_builtins.str] url: Custom page url
        """
        if cis_custom_page_id is not None:
            pulumi.set(__self__, "cis_custom_page_id", cis_custom_page_id)
        if cis_id is not None:
            pulumi.set(__self__, "cis_id", cis_id)
        if created_on is not None:
            pulumi.set(__self__, "created_on", created_on)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if domain_id is not None:
            pulumi.set(__self__, "domain_id", domain_id)
        if modified_on is not None:
            pulumi.set(__self__, "modified_on", modified_on)
        if page_id is not None:
            pulumi.set(__self__, "page_id", page_id)
        if preview_target is not None:
            pulumi.set(__self__, "preview_target", preview_target)
        if required_tokens is not None:
            pulumi.set(__self__, "required_tokens", required_tokens)
        if state is not None:
            pulumi.set(__self__, "state", state)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="cisCustomPageId")
    def cis_custom_page_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "cis_custom_page_id")

    @cis_custom_page_id.setter
    def cis_custom_page_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cis_custom_page_id", value)

    @_builtins.property
    @pulumi.getter(name="cisId")
    def cis_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        CIS instance crn
        """
        return pulumi.get(self, "cis_id")

    @cis_id.setter
    def cis_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cis_id", value)

    @_builtins.property
    @pulumi.getter(name="createdOn")
    def created_on(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Custom page created date
        """
        return pulumi.get(self, "created_on")

    @created_on.setter
    def created_on(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_on", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Free text
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Associated CIS domain
        """
        return pulumi.get(self, "domain_id")

    @domain_id.setter
    def domain_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "domain_id", value)

    @_builtins.property
    @pulumi.getter(name="modifiedOn")
    def modified_on(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Custom page modified date
        """
        return pulumi.get(self, "modified_on")

    @modified_on.setter
    def modified_on(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "modified_on", value)

    @_builtins.property
    @pulumi.getter(name="pageId")
    def page_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Custom page identifier
        """
        return pulumi.get(self, "page_id")

    @page_id.setter
    def page_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "page_id", value)

    @_builtins.property
    @pulumi.getter(name="previewTarget")
    def preview_target(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Custom page preview target
        """
        return pulumi.get(self, "preview_target")

    @preview_target.setter
    def preview_target(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "preview_target", value)

    @_builtins.property
    @pulumi.getter(name="requiredTokens")
    def required_tokens(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Custom page state
        """
        return pulumi.get(self, "required_tokens")

    @required_tokens.setter
    def required_tokens(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "required_tokens", value)

    @_builtins.property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Custom page state
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "state", value)

    @_builtins.property
    @pulumi.getter
    def url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Custom page url
        """
        return pulumi.get(self, "url")

    @url.setter
    def url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "url", value)


@pulumi.type_token("ibm:index/cisCustomPage:CisCustomPage")
class CisCustomPage(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cis_custom_page_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_id: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 page_id: Optional[pulumi.Input[_builtins.str]] = None,
                 url: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a CisCustomPage resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] cis_id: CIS instance crn
        :param pulumi.Input[_builtins.str] domain_id: Associated CIS domain
        :param pulumi.Input[_builtins.str] page_id: Custom page identifier
        :param pulumi.Input[_builtins.str] url: Custom page url
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CisCustomPageArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a CisCustomPage resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param CisCustomPageArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CisCustomPageArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cis_custom_page_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_id: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 page_id: Optional[pulumi.Input[_builtins.str]] = None,
                 url: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CisCustomPageArgs.__new__(CisCustomPageArgs)

            __props__.__dict__["cis_custom_page_id"] = cis_custom_page_id
            if cis_id is None and not opts.urn:
                raise TypeError("Missing required property 'cis_id'")
            __props__.__dict__["cis_id"] = cis_id
            if domain_id is None and not opts.urn:
                raise TypeError("Missing required property 'domain_id'")
            __props__.__dict__["domain_id"] = domain_id
            if page_id is None and not opts.urn:
                raise TypeError("Missing required property 'page_id'")
            __props__.__dict__["page_id"] = page_id
            if url is None and not opts.urn:
                raise TypeError("Missing required property 'url'")
            __props__.__dict__["url"] = url
            __props__.__dict__["created_on"] = None
            __props__.__dict__["description"] = None
            __props__.__dict__["modified_on"] = None
            __props__.__dict__["preview_target"] = None
            __props__.__dict__["required_tokens"] = None
            __props__.__dict__["state"] = None
        super(CisCustomPage, __self__).__init__(
            'ibm:index/cisCustomPage:CisCustomPage',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            cis_custom_page_id: Optional[pulumi.Input[_builtins.str]] = None,
            cis_id: Optional[pulumi.Input[_builtins.str]] = None,
            created_on: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            domain_id: Optional[pulumi.Input[_builtins.str]] = None,
            modified_on: Optional[pulumi.Input[_builtins.str]] = None,
            page_id: Optional[pulumi.Input[_builtins.str]] = None,
            preview_target: Optional[pulumi.Input[_builtins.str]] = None,
            required_tokens: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            state: Optional[pulumi.Input[_builtins.str]] = None,
            url: Optional[pulumi.Input[_builtins.str]] = None) -> 'CisCustomPage':
        """
        Get an existing CisCustomPage resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] cis_id: CIS instance crn
        :param pulumi.Input[_builtins.str] created_on: Custom page created date
        :param pulumi.Input[_builtins.str] description: Free text
        :param pulumi.Input[_builtins.str] domain_id: Associated CIS domain
        :param pulumi.Input[_builtins.str] modified_on: Custom page modified date
        :param pulumi.Input[_builtins.str] page_id: Custom page identifier
        :param pulumi.Input[_builtins.str] preview_target: Custom page preview target
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] required_tokens: Custom page state
        :param pulumi.Input[_builtins.str] state: Custom page state
        :param pulumi.Input[_builtins.str] url: Custom page url
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CisCustomPageState.__new__(_CisCustomPageState)

        __props__.__dict__["cis_custom_page_id"] = cis_custom_page_id
        __props__.__dict__["cis_id"] = cis_id
        __props__.__dict__["created_on"] = created_on
        __props__.__dict__["description"] = description
        __props__.__dict__["domain_id"] = domain_id
        __props__.__dict__["modified_on"] = modified_on
        __props__.__dict__["page_id"] = page_id
        __props__.__dict__["preview_target"] = preview_target
        __props__.__dict__["required_tokens"] = required_tokens
        __props__.__dict__["state"] = state
        __props__.__dict__["url"] = url
        return CisCustomPage(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="cisCustomPageId")
    def cis_custom_page_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "cis_custom_page_id")

    @_builtins.property
    @pulumi.getter(name="cisId")
    def cis_id(self) -> pulumi.Output[_builtins.str]:
        """
        CIS instance crn
        """
        return pulumi.get(self, "cis_id")

    @_builtins.property
    @pulumi.getter(name="createdOn")
    def created_on(self) -> pulumi.Output[_builtins.str]:
        """
        Custom page created date
        """
        return pulumi.get(self, "created_on")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        Free text
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> pulumi.Output[_builtins.str]:
        """
        Associated CIS domain
        """
        return pulumi.get(self, "domain_id")

    @_builtins.property
    @pulumi.getter(name="modifiedOn")
    def modified_on(self) -> pulumi.Output[_builtins.str]:
        """
        Custom page modified date
        """
        return pulumi.get(self, "modified_on")

    @_builtins.property
    @pulumi.getter(name="pageId")
    def page_id(self) -> pulumi.Output[_builtins.str]:
        """
        Custom page identifier
        """
        return pulumi.get(self, "page_id")

    @_builtins.property
    @pulumi.getter(name="previewTarget")
    def preview_target(self) -> pulumi.Output[_builtins.str]:
        """
        Custom page preview target
        """
        return pulumi.get(self, "preview_target")

    @_builtins.property
    @pulumi.getter(name="requiredTokens")
    def required_tokens(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        Custom page state
        """
        return pulumi.get(self, "required_tokens")

    @_builtins.property
    @pulumi.getter
    def state(self) -> pulumi.Output[_builtins.str]:
        """
        Custom page state
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter
    def url(self) -> pulumi.Output[_builtins.str]:
        """
        Custom page url
        """
        return pulumi.get(self, "url")

