# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ProjectEnvironmentInitArgs', 'ProjectEnvironment']

@pulumi.input_type
class ProjectEnvironmentInitArgs:
    def __init__(__self__, *,
                 definition: pulumi.Input['ProjectEnvironmentDefinitionArgs'],
                 project_id: pulumi.Input[_builtins.str],
                 ibm_project_environment_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a ProjectEnvironment resource.
        :param pulumi.Input['ProjectEnvironmentDefinitionArgs'] definition: The environment definition.
        :param pulumi.Input[_builtins.str] project_id: The unique project ID.
        """
        pulumi.set(__self__, "definition", definition)
        pulumi.set(__self__, "project_id", project_id)
        if ibm_project_environment_id is not None:
            pulumi.set(__self__, "ibm_project_environment_id", ibm_project_environment_id)

    @_builtins.property
    @pulumi.getter
    def definition(self) -> pulumi.Input['ProjectEnvironmentDefinitionArgs']:
        """
        The environment definition.
        """
        return pulumi.get(self, "definition")

    @definition.setter
    def definition(self, value: pulumi.Input['ProjectEnvironmentDefinitionArgs']):
        pulumi.set(self, "definition", value)

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Input[_builtins.str]:
        """
        The unique project ID.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "project_id", value)

    @_builtins.property
    @pulumi.getter(name="ibmProjectEnvironmentId")
    def ibm_project_environment_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "ibm_project_environment_id")

    @ibm_project_environment_id.setter
    def ibm_project_environment_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ibm_project_environment_id", value)


@pulumi.input_type
class _ProjectEnvironmentState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 definition: Optional[pulumi.Input['ProjectEnvironmentDefinitionArgs']] = None,
                 href: Optional[pulumi.Input[_builtins.str]] = None,
                 ibm_project_environment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 modified_at: Optional[pulumi.Input[_builtins.str]] = None,
                 project_environment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 projects: Optional[pulumi.Input[Sequence[pulumi.Input['ProjectEnvironmentProjectArgs']]]] = None,
                 target_account: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering ProjectEnvironment resources.
        :param pulumi.Input[_builtins.str] created_at: A date and time value in the format YYYY-MM-DDTHH:mm:ssZ or YYYY-MM-DDTHH:mm:ss.sssZ to match the date and time format
               as specified by RFC 3339.
        :param pulumi.Input['ProjectEnvironmentDefinitionArgs'] definition: The environment definition.
        :param pulumi.Input[_builtins.str] href: A URL.
        :param pulumi.Input[_builtins.str] modified_at: A date and time value in the format YYYY-MM-DDTHH:mm:ssZ or YYYY-MM-DDTHH:mm:ss.sssZ to match the date and time format
               as specified by RFC 3339.
        :param pulumi.Input[_builtins.str] project_environment_id: The environment ID as a friendly name.
        :param pulumi.Input[_builtins.str] project_id: The unique project ID.
        :param pulumi.Input[Sequence[pulumi.Input['ProjectEnvironmentProjectArgs']]] projects: The project that is referenced by this resource.
        :param pulumi.Input[_builtins.str] target_account: The target account ID derived from the authentication block values. The target account exists only if the environment
               currently has an authorization block.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if definition is not None:
            pulumi.set(__self__, "definition", definition)
        if href is not None:
            pulumi.set(__self__, "href", href)
        if ibm_project_environment_id is not None:
            pulumi.set(__self__, "ibm_project_environment_id", ibm_project_environment_id)
        if modified_at is not None:
            pulumi.set(__self__, "modified_at", modified_at)
        if project_environment_id is not None:
            pulumi.set(__self__, "project_environment_id", project_environment_id)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if projects is not None:
            pulumi.set(__self__, "projects", projects)
        if target_account is not None:
            pulumi.set(__self__, "target_account", target_account)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        A date and time value in the format YYYY-MM-DDTHH:mm:ssZ or YYYY-MM-DDTHH:mm:ss.sssZ to match the date and time format
        as specified by RFC 3339.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def definition(self) -> Optional[pulumi.Input['ProjectEnvironmentDefinitionArgs']]:
        """
        The environment definition.
        """
        return pulumi.get(self, "definition")

    @definition.setter
    def definition(self, value: Optional[pulumi.Input['ProjectEnvironmentDefinitionArgs']]):
        pulumi.set(self, "definition", value)

    @_builtins.property
    @pulumi.getter
    def href(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        A URL.
        """
        return pulumi.get(self, "href")

    @href.setter
    def href(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "href", value)

    @_builtins.property
    @pulumi.getter(name="ibmProjectEnvironmentId")
    def ibm_project_environment_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "ibm_project_environment_id")

    @ibm_project_environment_id.setter
    def ibm_project_environment_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ibm_project_environment_id", value)

    @_builtins.property
    @pulumi.getter(name="modifiedAt")
    def modified_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        A date and time value in the format YYYY-MM-DDTHH:mm:ssZ or YYYY-MM-DDTHH:mm:ss.sssZ to match the date and time format
        as specified by RFC 3339.
        """
        return pulumi.get(self, "modified_at")

    @modified_at.setter
    def modified_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "modified_at", value)

    @_builtins.property
    @pulumi.getter(name="projectEnvironmentId")
    def project_environment_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The environment ID as a friendly name.
        """
        return pulumi.get(self, "project_environment_id")

    @project_environment_id.setter
    def project_environment_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "project_environment_id", value)

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique project ID.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "project_id", value)

    @_builtins.property
    @pulumi.getter
    def projects(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ProjectEnvironmentProjectArgs']]]]:
        """
        The project that is referenced by this resource.
        """
        return pulumi.get(self, "projects")

    @projects.setter
    def projects(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ProjectEnvironmentProjectArgs']]]]):
        pulumi.set(self, "projects", value)

    @_builtins.property
    @pulumi.getter(name="targetAccount")
    def target_account(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The target account ID derived from the authentication block values. The target account exists only if the environment
        currently has an authorization block.
        """
        return pulumi.get(self, "target_account")

    @target_account.setter
    def target_account(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_account", value)


@pulumi.type_token("ibm:index/projectEnvironment:ProjectEnvironment")
class ProjectEnvironment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 definition: Optional[pulumi.Input[Union['ProjectEnvironmentDefinitionArgs', 'ProjectEnvironmentDefinitionArgsDict']]] = None,
                 ibm_project_environment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a ProjectEnvironment resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['ProjectEnvironmentDefinitionArgs', 'ProjectEnvironmentDefinitionArgsDict']] definition: The environment definition.
        :param pulumi.Input[_builtins.str] project_id: The unique project ID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ProjectEnvironmentInitArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a ProjectEnvironment resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param ProjectEnvironmentInitArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ProjectEnvironmentInitArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 definition: Optional[pulumi.Input[Union['ProjectEnvironmentDefinitionArgs', 'ProjectEnvironmentDefinitionArgsDict']]] = None,
                 ibm_project_environment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ProjectEnvironmentInitArgs.__new__(ProjectEnvironmentInitArgs)

            if definition is None and not opts.urn:
                raise TypeError("Missing required property 'definition'")
            __props__.__dict__["definition"] = definition
            __props__.__dict__["ibm_project_environment_id"] = ibm_project_environment_id
            if project_id is None and not opts.urn:
                raise TypeError("Missing required property 'project_id'")
            __props__.__dict__["project_id"] = project_id
            __props__.__dict__["created_at"] = None
            __props__.__dict__["href"] = None
            __props__.__dict__["modified_at"] = None
            __props__.__dict__["project_environment_id"] = None
            __props__.__dict__["projects"] = None
            __props__.__dict__["target_account"] = None
        super(ProjectEnvironment, __self__).__init__(
            'ibm:index/projectEnvironment:ProjectEnvironment',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            definition: Optional[pulumi.Input[Union['ProjectEnvironmentDefinitionArgs', 'ProjectEnvironmentDefinitionArgsDict']]] = None,
            href: Optional[pulumi.Input[_builtins.str]] = None,
            ibm_project_environment_id: Optional[pulumi.Input[_builtins.str]] = None,
            modified_at: Optional[pulumi.Input[_builtins.str]] = None,
            project_environment_id: Optional[pulumi.Input[_builtins.str]] = None,
            project_id: Optional[pulumi.Input[_builtins.str]] = None,
            projects: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ProjectEnvironmentProjectArgs', 'ProjectEnvironmentProjectArgsDict']]]]] = None,
            target_account: Optional[pulumi.Input[_builtins.str]] = None) -> 'ProjectEnvironment':
        """
        Get an existing ProjectEnvironment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: A date and time value in the format YYYY-MM-DDTHH:mm:ssZ or YYYY-MM-DDTHH:mm:ss.sssZ to match the date and time format
               as specified by RFC 3339.
        :param pulumi.Input[Union['ProjectEnvironmentDefinitionArgs', 'ProjectEnvironmentDefinitionArgsDict']] definition: The environment definition.
        :param pulumi.Input[_builtins.str] href: A URL.
        :param pulumi.Input[_builtins.str] modified_at: A date and time value in the format YYYY-MM-DDTHH:mm:ssZ or YYYY-MM-DDTHH:mm:ss.sssZ to match the date and time format
               as specified by RFC 3339.
        :param pulumi.Input[_builtins.str] project_environment_id: The environment ID as a friendly name.
        :param pulumi.Input[_builtins.str] project_id: The unique project ID.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ProjectEnvironmentProjectArgs', 'ProjectEnvironmentProjectArgsDict']]]] projects: The project that is referenced by this resource.
        :param pulumi.Input[_builtins.str] target_account: The target account ID derived from the authentication block values. The target account exists only if the environment
               currently has an authorization block.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ProjectEnvironmentState.__new__(_ProjectEnvironmentState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["definition"] = definition
        __props__.__dict__["href"] = href
        __props__.__dict__["ibm_project_environment_id"] = ibm_project_environment_id
        __props__.__dict__["modified_at"] = modified_at
        __props__.__dict__["project_environment_id"] = project_environment_id
        __props__.__dict__["project_id"] = project_id
        __props__.__dict__["projects"] = projects
        __props__.__dict__["target_account"] = target_account
        return ProjectEnvironment(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        A date and time value in the format YYYY-MM-DDTHH:mm:ssZ or YYYY-MM-DDTHH:mm:ss.sssZ to match the date and time format
        as specified by RFC 3339.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def definition(self) -> pulumi.Output['outputs.ProjectEnvironmentDefinition']:
        """
        The environment definition.
        """
        return pulumi.get(self, "definition")

    @_builtins.property
    @pulumi.getter
    def href(self) -> pulumi.Output[_builtins.str]:
        """
        A URL.
        """
        return pulumi.get(self, "href")

    @_builtins.property
    @pulumi.getter(name="ibmProjectEnvironmentId")
    def ibm_project_environment_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "ibm_project_environment_id")

    @_builtins.property
    @pulumi.getter(name="modifiedAt")
    def modified_at(self) -> pulumi.Output[_builtins.str]:
        """
        A date and time value in the format YYYY-MM-DDTHH:mm:ssZ or YYYY-MM-DDTHH:mm:ss.sssZ to match the date and time format
        as specified by RFC 3339.
        """
        return pulumi.get(self, "modified_at")

    @_builtins.property
    @pulumi.getter(name="projectEnvironmentId")
    def project_environment_id(self) -> pulumi.Output[_builtins.str]:
        """
        The environment ID as a friendly name.
        """
        return pulumi.get(self, "project_environment_id")

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[_builtins.str]:
        """
        The unique project ID.
        """
        return pulumi.get(self, "project_id")

    @_builtins.property
    @pulumi.getter
    def projects(self) -> pulumi.Output[Sequence['outputs.ProjectEnvironmentProject']]:
        """
        The project that is referenced by this resource.
        """
        return pulumi.get(self, "projects")

    @_builtins.property
    @pulumi.getter(name="targetAccount")
    def target_account(self) -> pulumi.Output[_builtins.str]:
        """
        The target account ID derived from the authentication block values. The target account exists only if the environment
        currently has an authorization block.
        """
        return pulumi.get(self, "target_account")

