# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['BackupRecoveryRestorePointsArgs', 'BackupRecoveryRestorePoints']

@pulumi.input_type
class BackupRecoveryRestorePointsArgs:
    def __init__(__self__, *,
                 end_time_usecs: pulumi.Input[_builtins.float],
                 environment: pulumi.Input[_builtins.str],
                 protection_group_ids: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]],
                 start_time_usecs: pulumi.Input[_builtins.float],
                 x_ibm_tenant_id: pulumi.Input[_builtins.str],
                 backup_recovery_restore_points_id: Optional[pulumi.Input[_builtins.str]] = None,
                 source_id: Optional[pulumi.Input[_builtins.float]] = None):
        """
        The set of arguments for constructing a BackupRecoveryRestorePoints resource.
        :param pulumi.Input[_builtins.float] end_time_usecs: Specifies the end time specified as a Unix epoch Timestamp in microseconds.
        :param pulumi.Input[_builtins.str] environment: Specifies the protection source environment type.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] protection_group_ids: Specifies the jobs for which to get the full snapshot information.
        :param pulumi.Input[_builtins.float] start_time_usecs: Specifies the start time specified as a Unix epoch Timestamp in microseconds.
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        :param pulumi.Input[_builtins.float] source_id: Specifies the id of the Protection Source which is to be restored.
        """
        pulumi.set(__self__, "end_time_usecs", end_time_usecs)
        pulumi.set(__self__, "environment", environment)
        pulumi.set(__self__, "protection_group_ids", protection_group_ids)
        pulumi.set(__self__, "start_time_usecs", start_time_usecs)
        pulumi.set(__self__, "x_ibm_tenant_id", x_ibm_tenant_id)
        if backup_recovery_restore_points_id is not None:
            pulumi.set(__self__, "backup_recovery_restore_points_id", backup_recovery_restore_points_id)
        if source_id is not None:
            pulumi.set(__self__, "source_id", source_id)

    @_builtins.property
    @pulumi.getter(name="endTimeUsecs")
    def end_time_usecs(self) -> pulumi.Input[_builtins.float]:
        """
        Specifies the end time specified as a Unix epoch Timestamp in microseconds.
        """
        return pulumi.get(self, "end_time_usecs")

    @end_time_usecs.setter
    def end_time_usecs(self, value: pulumi.Input[_builtins.float]):
        pulumi.set(self, "end_time_usecs", value)

    @_builtins.property
    @pulumi.getter
    def environment(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the protection source environment type.
        """
        return pulumi.get(self, "environment")

    @environment.setter
    def environment(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "environment", value)

    @_builtins.property
    @pulumi.getter(name="protectionGroupIds")
    def protection_group_ids(self) -> pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]:
        """
        Specifies the jobs for which to get the full snapshot information.
        """
        return pulumi.get(self, "protection_group_ids")

    @protection_group_ids.setter
    def protection_group_ids(self, value: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]):
        pulumi.set(self, "protection_group_ids", value)

    @_builtins.property
    @pulumi.getter(name="startTimeUsecs")
    def start_time_usecs(self) -> pulumi.Input[_builtins.float]:
        """
        Specifies the start time specified as a Unix epoch Timestamp in microseconds.
        """
        return pulumi.get(self, "start_time_usecs")

    @start_time_usecs.setter
    def start_time_usecs(self, value: pulumi.Input[_builtins.float]):
        pulumi.set(self, "start_time_usecs", value)

    @_builtins.property
    @pulumi.getter(name="xIbmTenantId")
    def x_ibm_tenant_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
        be specified.
        """
        return pulumi.get(self, "x_ibm_tenant_id")

    @x_ibm_tenant_id.setter
    def x_ibm_tenant_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "x_ibm_tenant_id", value)

    @_builtins.property
    @pulumi.getter(name="backupRecoveryRestorePointsId")
    def backup_recovery_restore_points_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "backup_recovery_restore_points_id")

    @backup_recovery_restore_points_id.setter
    def backup_recovery_restore_points_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "backup_recovery_restore_points_id", value)

    @_builtins.property
    @pulumi.getter(name="sourceId")
    def source_id(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Specifies the id of the Protection Source which is to be restored.
        """
        return pulumi.get(self, "source_id")

    @source_id.setter
    def source_id(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "source_id", value)


@pulumi.input_type
class _BackupRecoveryRestorePointsState:
    def __init__(__self__, *,
                 backup_recovery_restore_points_id: Optional[pulumi.Input[_builtins.str]] = None,
                 end_time_usecs: Optional[pulumi.Input[_builtins.float]] = None,
                 environment: Optional[pulumi.Input[_builtins.str]] = None,
                 full_snapshot_infos: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryRestorePointsFullSnapshotInfoArgs']]]] = None,
                 protection_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 source_id: Optional[pulumi.Input[_builtins.float]] = None,
                 start_time_usecs: Optional[pulumi.Input[_builtins.float]] = None,
                 time_range_infos: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryRestorePointsTimeRangeInfoArgs']]]] = None,
                 x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering BackupRecoveryRestorePoints resources.
        :param pulumi.Input[_builtins.float] end_time_usecs: Specifies the end time specified as a Unix epoch Timestamp in microseconds.
        :param pulumi.Input[_builtins.str] environment: Specifies the protection source environment type.
        :param pulumi.Input[Sequence[pulumi.Input['BackupRecoveryRestorePointsFullSnapshotInfoArgs']]] full_snapshot_infos: Specifies the info related to the recovery object.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] protection_group_ids: Specifies the jobs for which to get the full snapshot information.
        :param pulumi.Input[_builtins.float] source_id: Specifies the id of the Protection Source which is to be restored.
        :param pulumi.Input[_builtins.float] start_time_usecs: Specifies the start time specified as a Unix epoch Timestamp in microseconds.
        :param pulumi.Input[Sequence[pulumi.Input['BackupRecoveryRestorePointsTimeRangeInfoArgs']]] time_range_infos: Information about a set of disjoint, possibly annotated time ranges.
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        """
        if backup_recovery_restore_points_id is not None:
            pulumi.set(__self__, "backup_recovery_restore_points_id", backup_recovery_restore_points_id)
        if end_time_usecs is not None:
            pulumi.set(__self__, "end_time_usecs", end_time_usecs)
        if environment is not None:
            pulumi.set(__self__, "environment", environment)
        if full_snapshot_infos is not None:
            pulumi.set(__self__, "full_snapshot_infos", full_snapshot_infos)
        if protection_group_ids is not None:
            pulumi.set(__self__, "protection_group_ids", protection_group_ids)
        if source_id is not None:
            pulumi.set(__self__, "source_id", source_id)
        if start_time_usecs is not None:
            pulumi.set(__self__, "start_time_usecs", start_time_usecs)
        if time_range_infos is not None:
            pulumi.set(__self__, "time_range_infos", time_range_infos)
        if x_ibm_tenant_id is not None:
            pulumi.set(__self__, "x_ibm_tenant_id", x_ibm_tenant_id)

    @_builtins.property
    @pulumi.getter(name="backupRecoveryRestorePointsId")
    def backup_recovery_restore_points_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "backup_recovery_restore_points_id")

    @backup_recovery_restore_points_id.setter
    def backup_recovery_restore_points_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "backup_recovery_restore_points_id", value)

    @_builtins.property
    @pulumi.getter(name="endTimeUsecs")
    def end_time_usecs(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Specifies the end time specified as a Unix epoch Timestamp in microseconds.
        """
        return pulumi.get(self, "end_time_usecs")

    @end_time_usecs.setter
    def end_time_usecs(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "end_time_usecs", value)

    @_builtins.property
    @pulumi.getter
    def environment(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the protection source environment type.
        """
        return pulumi.get(self, "environment")

    @environment.setter
    def environment(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "environment", value)

    @_builtins.property
    @pulumi.getter(name="fullSnapshotInfos")
    def full_snapshot_infos(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryRestorePointsFullSnapshotInfoArgs']]]]:
        """
        Specifies the info related to the recovery object.
        """
        return pulumi.get(self, "full_snapshot_infos")

    @full_snapshot_infos.setter
    def full_snapshot_infos(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryRestorePointsFullSnapshotInfoArgs']]]]):
        pulumi.set(self, "full_snapshot_infos", value)

    @_builtins.property
    @pulumi.getter(name="protectionGroupIds")
    def protection_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the jobs for which to get the full snapshot information.
        """
        return pulumi.get(self, "protection_group_ids")

    @protection_group_ids.setter
    def protection_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "protection_group_ids", value)

    @_builtins.property
    @pulumi.getter(name="sourceId")
    def source_id(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Specifies the id of the Protection Source which is to be restored.
        """
        return pulumi.get(self, "source_id")

    @source_id.setter
    def source_id(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "source_id", value)

    @_builtins.property
    @pulumi.getter(name="startTimeUsecs")
    def start_time_usecs(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Specifies the start time specified as a Unix epoch Timestamp in microseconds.
        """
        return pulumi.get(self, "start_time_usecs")

    @start_time_usecs.setter
    def start_time_usecs(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "start_time_usecs", value)

    @_builtins.property
    @pulumi.getter(name="timeRangeInfos")
    def time_range_infos(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryRestorePointsTimeRangeInfoArgs']]]]:
        """
        Information about a set of disjoint, possibly annotated time ranges.
        """
        return pulumi.get(self, "time_range_infos")

    @time_range_infos.setter
    def time_range_infos(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryRestorePointsTimeRangeInfoArgs']]]]):
        pulumi.set(self, "time_range_infos", value)

    @_builtins.property
    @pulumi.getter(name="xIbmTenantId")
    def x_ibm_tenant_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
        be specified.
        """
        return pulumi.get(self, "x_ibm_tenant_id")

    @x_ibm_tenant_id.setter
    def x_ibm_tenant_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "x_ibm_tenant_id", value)


@pulumi.type_token("ibm:index/backupRecoveryRestorePoints:BackupRecoveryRestorePoints")
class BackupRecoveryRestorePoints(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 backup_recovery_restore_points_id: Optional[pulumi.Input[_builtins.str]] = None,
                 end_time_usecs: Optional[pulumi.Input[_builtins.float]] = None,
                 environment: Optional[pulumi.Input[_builtins.str]] = None,
                 protection_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 source_id: Optional[pulumi.Input[_builtins.float]] = None,
                 start_time_usecs: Optional[pulumi.Input[_builtins.float]] = None,
                 x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a BackupRecoveryRestorePoints resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.float] end_time_usecs: Specifies the end time specified as a Unix epoch Timestamp in microseconds.
        :param pulumi.Input[_builtins.str] environment: Specifies the protection source environment type.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] protection_group_ids: Specifies the jobs for which to get the full snapshot information.
        :param pulumi.Input[_builtins.float] source_id: Specifies the id of the Protection Source which is to be restored.
        :param pulumi.Input[_builtins.float] start_time_usecs: Specifies the start time specified as a Unix epoch Timestamp in microseconds.
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BackupRecoveryRestorePointsArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a BackupRecoveryRestorePoints resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param BackupRecoveryRestorePointsArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BackupRecoveryRestorePointsArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 backup_recovery_restore_points_id: Optional[pulumi.Input[_builtins.str]] = None,
                 end_time_usecs: Optional[pulumi.Input[_builtins.float]] = None,
                 environment: Optional[pulumi.Input[_builtins.str]] = None,
                 protection_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 source_id: Optional[pulumi.Input[_builtins.float]] = None,
                 start_time_usecs: Optional[pulumi.Input[_builtins.float]] = None,
                 x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BackupRecoveryRestorePointsArgs.__new__(BackupRecoveryRestorePointsArgs)

            __props__.__dict__["backup_recovery_restore_points_id"] = backup_recovery_restore_points_id
            if end_time_usecs is None and not opts.urn:
                raise TypeError("Missing required property 'end_time_usecs'")
            __props__.__dict__["end_time_usecs"] = end_time_usecs
            if environment is None and not opts.urn:
                raise TypeError("Missing required property 'environment'")
            __props__.__dict__["environment"] = environment
            if protection_group_ids is None and not opts.urn:
                raise TypeError("Missing required property 'protection_group_ids'")
            __props__.__dict__["protection_group_ids"] = protection_group_ids
            __props__.__dict__["source_id"] = source_id
            if start_time_usecs is None and not opts.urn:
                raise TypeError("Missing required property 'start_time_usecs'")
            __props__.__dict__["start_time_usecs"] = start_time_usecs
            if x_ibm_tenant_id is None and not opts.urn:
                raise TypeError("Missing required property 'x_ibm_tenant_id'")
            __props__.__dict__["x_ibm_tenant_id"] = x_ibm_tenant_id
            __props__.__dict__["full_snapshot_infos"] = None
            __props__.__dict__["time_range_infos"] = None
        super(BackupRecoveryRestorePoints, __self__).__init__(
            'ibm:index/backupRecoveryRestorePoints:BackupRecoveryRestorePoints',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            backup_recovery_restore_points_id: Optional[pulumi.Input[_builtins.str]] = None,
            end_time_usecs: Optional[pulumi.Input[_builtins.float]] = None,
            environment: Optional[pulumi.Input[_builtins.str]] = None,
            full_snapshot_infos: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryRestorePointsFullSnapshotInfoArgs', 'BackupRecoveryRestorePointsFullSnapshotInfoArgsDict']]]]] = None,
            protection_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            source_id: Optional[pulumi.Input[_builtins.float]] = None,
            start_time_usecs: Optional[pulumi.Input[_builtins.float]] = None,
            time_range_infos: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryRestorePointsTimeRangeInfoArgs', 'BackupRecoveryRestorePointsTimeRangeInfoArgsDict']]]]] = None,
            x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'BackupRecoveryRestorePoints':
        """
        Get an existing BackupRecoveryRestorePoints resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.float] end_time_usecs: Specifies the end time specified as a Unix epoch Timestamp in microseconds.
        :param pulumi.Input[_builtins.str] environment: Specifies the protection source environment type.
        :param pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryRestorePointsFullSnapshotInfoArgs', 'BackupRecoveryRestorePointsFullSnapshotInfoArgsDict']]]] full_snapshot_infos: Specifies the info related to the recovery object.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] protection_group_ids: Specifies the jobs for which to get the full snapshot information.
        :param pulumi.Input[_builtins.float] source_id: Specifies the id of the Protection Source which is to be restored.
        :param pulumi.Input[_builtins.float] start_time_usecs: Specifies the start time specified as a Unix epoch Timestamp in microseconds.
        :param pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryRestorePointsTimeRangeInfoArgs', 'BackupRecoveryRestorePointsTimeRangeInfoArgsDict']]]] time_range_infos: Information about a set of disjoint, possibly annotated time ranges.
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BackupRecoveryRestorePointsState.__new__(_BackupRecoveryRestorePointsState)

        __props__.__dict__["backup_recovery_restore_points_id"] = backup_recovery_restore_points_id
        __props__.__dict__["end_time_usecs"] = end_time_usecs
        __props__.__dict__["environment"] = environment
        __props__.__dict__["full_snapshot_infos"] = full_snapshot_infos
        __props__.__dict__["protection_group_ids"] = protection_group_ids
        __props__.__dict__["source_id"] = source_id
        __props__.__dict__["start_time_usecs"] = start_time_usecs
        __props__.__dict__["time_range_infos"] = time_range_infos
        __props__.__dict__["x_ibm_tenant_id"] = x_ibm_tenant_id
        return BackupRecoveryRestorePoints(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="backupRecoveryRestorePointsId")
    def backup_recovery_restore_points_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "backup_recovery_restore_points_id")

    @_builtins.property
    @pulumi.getter(name="endTimeUsecs")
    def end_time_usecs(self) -> pulumi.Output[_builtins.float]:
        """
        Specifies the end time specified as a Unix epoch Timestamp in microseconds.
        """
        return pulumi.get(self, "end_time_usecs")

    @_builtins.property
    @pulumi.getter
    def environment(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the protection source environment type.
        """
        return pulumi.get(self, "environment")

    @_builtins.property
    @pulumi.getter(name="fullSnapshotInfos")
    def full_snapshot_infos(self) -> pulumi.Output[Sequence['outputs.BackupRecoveryRestorePointsFullSnapshotInfo']]:
        """
        Specifies the info related to the recovery object.
        """
        return pulumi.get(self, "full_snapshot_infos")

    @_builtins.property
    @pulumi.getter(name="protectionGroupIds")
    def protection_group_ids(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        Specifies the jobs for which to get the full snapshot information.
        """
        return pulumi.get(self, "protection_group_ids")

    @_builtins.property
    @pulumi.getter(name="sourceId")
    def source_id(self) -> pulumi.Output[Optional[_builtins.float]]:
        """
        Specifies the id of the Protection Source which is to be restored.
        """
        return pulumi.get(self, "source_id")

    @_builtins.property
    @pulumi.getter(name="startTimeUsecs")
    def start_time_usecs(self) -> pulumi.Output[_builtins.float]:
        """
        Specifies the start time specified as a Unix epoch Timestamp in microseconds.
        """
        return pulumi.get(self, "start_time_usecs")

    @_builtins.property
    @pulumi.getter(name="timeRangeInfos")
    def time_range_infos(self) -> pulumi.Output[Sequence['outputs.BackupRecoveryRestorePointsTimeRangeInfo']]:
        """
        Information about a set of disjoint, possibly annotated time ranges.
        """
        return pulumi.get(self, "time_range_infos")

    @_builtins.property
    @pulumi.getter(name="xIbmTenantId")
    def x_ibm_tenant_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
        be specified.
        """
        return pulumi.get(self, "x_ibm_tenant_id")

