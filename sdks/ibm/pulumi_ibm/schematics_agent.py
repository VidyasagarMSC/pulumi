# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SchematicsAgentArgs', 'SchematicsAgent']

@pulumi.input_type
class SchematicsAgentArgs:
    def __init__(__self__, *,
                 agent_infrastructure: pulumi.Input['SchematicsAgentAgentInfrastructureArgs'],
                 agent_location: pulumi.Input[_builtins.str],
                 resource_group: pulumi.Input[_builtins.str],
                 schematics_location: pulumi.Input[_builtins.str],
                 version: pulumi.Input[_builtins.str],
                 agent_inputs: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentInputArgs']]]] = None,
                 agent_metadatas: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentMetadataArgs']]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 run_destroy_resources: Optional[pulumi.Input[_builtins.float]] = None,
                 schematics_agent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 timeouts: Optional[pulumi.Input['SchematicsAgentTimeoutsArgs']] = None,
                 user_state: Optional[pulumi.Input['SchematicsAgentUserStateArgs']] = None):
        """
        The set of arguments for constructing a SchematicsAgent resource.
        :param pulumi.Input['SchematicsAgentAgentInfrastructureArgs'] agent_infrastructure: The infrastructure parameters used by the agent.
        :param pulumi.Input[_builtins.str] agent_location: The location where agent is deployed in the user environment.
        :param pulumi.Input[_builtins.str] resource_group: The resource-group name for the agent. By default, agent will be registered in Default Resource Group.
        :param pulumi.Input[_builtins.str] schematics_location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] version: Agent version.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentInputArgs']]] agent_inputs: Additional input variables for the agent.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentMetadataArgs']]] agent_metadatas: The metadata of an agent.
        :param pulumi.Input[_builtins.str] description: Agent description.
        :param pulumi.Input[_builtins.str] name: The name of the agent (must be unique, for an account).
        :param pulumi.Input[_builtins.float] run_destroy_resources: Argument which helps to run destroy resources job. Increment the value to destroy resources associated with agent
               deployment.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: Tags for the agent.
        :param pulumi.Input['SchematicsAgentUserStateArgs'] user_state: User defined status of the agent.
        """
        pulumi.set(__self__, "agent_infrastructure", agent_infrastructure)
        pulumi.set(__self__, "agent_location", agent_location)
        pulumi.set(__self__, "resource_group", resource_group)
        pulumi.set(__self__, "schematics_location", schematics_location)
        pulumi.set(__self__, "version", version)
        if agent_inputs is not None:
            pulumi.set(__self__, "agent_inputs", agent_inputs)
        if agent_metadatas is not None:
            pulumi.set(__self__, "agent_metadatas", agent_metadatas)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if run_destroy_resources is not None:
            pulumi.set(__self__, "run_destroy_resources", run_destroy_resources)
        if schematics_agent_id is not None:
            pulumi.set(__self__, "schematics_agent_id", schematics_agent_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)
        if user_state is not None:
            pulumi.set(__self__, "user_state", user_state)

    @_builtins.property
    @pulumi.getter(name="agentInfrastructure")
    def agent_infrastructure(self) -> pulumi.Input['SchematicsAgentAgentInfrastructureArgs']:
        """
        The infrastructure parameters used by the agent.
        """
        return pulumi.get(self, "agent_infrastructure")

    @agent_infrastructure.setter
    def agent_infrastructure(self, value: pulumi.Input['SchematicsAgentAgentInfrastructureArgs']):
        pulumi.set(self, "agent_infrastructure", value)

    @_builtins.property
    @pulumi.getter(name="agentLocation")
    def agent_location(self) -> pulumi.Input[_builtins.str]:
        """
        The location where agent is deployed in the user environment.
        """
        return pulumi.get(self, "agent_location")

    @agent_location.setter
    def agent_location(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "agent_location", value)

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> pulumi.Input[_builtins.str]:
        """
        The resource-group name for the agent. By default, agent will be registered in Default Resource Group.
        """
        return pulumi.get(self, "resource_group")

    @resource_group.setter
    def resource_group(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "resource_group", value)

    @_builtins.property
    @pulumi.getter(name="schematicsLocation")
    def schematics_location(self) -> pulumi.Input[_builtins.str]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "schematics_location")

    @schematics_location.setter
    def schematics_location(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "schematics_location", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Input[_builtins.str]:
        """
        Agent version.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "version", value)

    @_builtins.property
    @pulumi.getter(name="agentInputs")
    def agent_inputs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentInputArgs']]]]:
        """
        Additional input variables for the agent.
        """
        return pulumi.get(self, "agent_inputs")

    @agent_inputs.setter
    def agent_inputs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentInputArgs']]]]):
        pulumi.set(self, "agent_inputs", value)

    @_builtins.property
    @pulumi.getter(name="agentMetadatas")
    def agent_metadatas(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentMetadataArgs']]]]:
        """
        The metadata of an agent.
        """
        return pulumi.get(self, "agent_metadatas")

    @agent_metadatas.setter
    def agent_metadatas(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentMetadataArgs']]]]):
        pulumi.set(self, "agent_metadatas", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Agent description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the agent (must be unique, for an account).
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="runDestroyResources")
    def run_destroy_resources(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Argument which helps to run destroy resources job. Increment the value to destroy resources associated with agent
        deployment.
        """
        return pulumi.get(self, "run_destroy_resources")

    @run_destroy_resources.setter
    def run_destroy_resources(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "run_destroy_resources", value)

    @_builtins.property
    @pulumi.getter(name="schematicsAgentId")
    def schematics_agent_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "schematics_agent_id")

    @schematics_agent_id.setter
    def schematics_agent_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "schematics_agent_id", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Tags for the agent.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['SchematicsAgentTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['SchematicsAgentTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)

    @_builtins.property
    @pulumi.getter(name="userState")
    def user_state(self) -> Optional[pulumi.Input['SchematicsAgentUserStateArgs']]:
        """
        User defined status of the agent.
        """
        return pulumi.get(self, "user_state")

    @user_state.setter
    def user_state(self, value: Optional[pulumi.Input['SchematicsAgentUserStateArgs']]):
        pulumi.set(self, "user_state", value)


@pulumi.input_type
class _SchematicsAgentState:
    def __init__(__self__, *,
                 agent_crn: Optional[pulumi.Input[_builtins.str]] = None,
                 agent_infrastructure: Optional[pulumi.Input['SchematicsAgentAgentInfrastructureArgs']] = None,
                 agent_inputs: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentInputArgs']]]] = None,
                 agent_kpis: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentKpiArgs']]]] = None,
                 agent_location: Optional[pulumi.Input[_builtins.str]] = None,
                 agent_metadatas: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentMetadataArgs']]]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 creation_by: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 recent_deploy_jobs: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentRecentDeployJobArgs']]]] = None,
                 recent_health_jobs: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentRecentHealthJobArgs']]]] = None,
                 recent_prs_jobs: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentRecentPrsJobArgs']]]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 run_destroy_resources: Optional[pulumi.Input[_builtins.float]] = None,
                 schematics_agent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 schematics_location: Optional[pulumi.Input[_builtins.str]] = None,
                 system_states: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentSystemStateArgs']]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 timeouts: Optional[pulumi.Input['SchematicsAgentTimeoutsArgs']] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_by: Optional[pulumi.Input[_builtins.str]] = None,
                 user_state: Optional[pulumi.Input['SchematicsAgentUserStateArgs']] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering SchematicsAgent resources.
        :param pulumi.Input[_builtins.str] agent_crn: The agent crn, obtained from the Schematics agent deployment configuration.
        :param pulumi.Input['SchematicsAgentAgentInfrastructureArgs'] agent_infrastructure: The infrastructure parameters used by the agent.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentInputArgs']]] agent_inputs: Additional input variables for the agent.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentKpiArgs']]] agent_kpis: Schematics Agent key performance indicators.
        :param pulumi.Input[_builtins.str] agent_location: The location where agent is deployed in the user environment.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentMetadataArgs']]] agent_metadatas: The metadata of an agent.
        :param pulumi.Input[_builtins.str] created_at: The agent creation date-time.
        :param pulumi.Input[_builtins.str] creation_by: The email address of an user who created the agent.
        :param pulumi.Input[_builtins.str] description: Agent description.
        :param pulumi.Input[_builtins.str] name: The name of the agent (must be unique, for an account).
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsAgentRecentDeployJobArgs']]] recent_deploy_jobs: Post-installations checks for Agent health.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsAgentRecentHealthJobArgs']]] recent_health_jobs: Agent health check.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsAgentRecentPrsJobArgs']]] recent_prs_jobs: Run a pre-requisite scanner for deploying agent.
        :param pulumi.Input[_builtins.str] resource_group: The resource-group name for the agent. By default, agent will be registered in Default Resource Group.
        :param pulumi.Input[_builtins.float] run_destroy_resources: Argument which helps to run destroy resources job. Increment the value to destroy resources associated with agent
               deployment.
        :param pulumi.Input[_builtins.str] schematics_location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsAgentSystemStateArgs']]] system_states: Computed state of the agent.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: Tags for the agent.
        :param pulumi.Input[_builtins.str] updated_at: The agent registration updation time.
        :param pulumi.Input[_builtins.str] updated_by: Email address of user who updated the agent registration.
        :param pulumi.Input['SchematicsAgentUserStateArgs'] user_state: User defined status of the agent.
        :param pulumi.Input[_builtins.str] version: Agent version.
        """
        if agent_crn is not None:
            pulumi.set(__self__, "agent_crn", agent_crn)
        if agent_infrastructure is not None:
            pulumi.set(__self__, "agent_infrastructure", agent_infrastructure)
        if agent_inputs is not None:
            pulumi.set(__self__, "agent_inputs", agent_inputs)
        if agent_kpis is not None:
            pulumi.set(__self__, "agent_kpis", agent_kpis)
        if agent_location is not None:
            pulumi.set(__self__, "agent_location", agent_location)
        if agent_metadatas is not None:
            pulumi.set(__self__, "agent_metadatas", agent_metadatas)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if creation_by is not None:
            pulumi.set(__self__, "creation_by", creation_by)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if recent_deploy_jobs is not None:
            pulumi.set(__self__, "recent_deploy_jobs", recent_deploy_jobs)
        if recent_health_jobs is not None:
            pulumi.set(__self__, "recent_health_jobs", recent_health_jobs)
        if recent_prs_jobs is not None:
            pulumi.set(__self__, "recent_prs_jobs", recent_prs_jobs)
        if resource_group is not None:
            pulumi.set(__self__, "resource_group", resource_group)
        if run_destroy_resources is not None:
            pulumi.set(__self__, "run_destroy_resources", run_destroy_resources)
        if schematics_agent_id is not None:
            pulumi.set(__self__, "schematics_agent_id", schematics_agent_id)
        if schematics_location is not None:
            pulumi.set(__self__, "schematics_location", schematics_location)
        if system_states is not None:
            pulumi.set(__self__, "system_states", system_states)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if updated_by is not None:
            pulumi.set(__self__, "updated_by", updated_by)
        if user_state is not None:
            pulumi.set(__self__, "user_state", user_state)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="agentCrn")
    def agent_crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The agent crn, obtained from the Schematics agent deployment configuration.
        """
        return pulumi.get(self, "agent_crn")

    @agent_crn.setter
    def agent_crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "agent_crn", value)

    @_builtins.property
    @pulumi.getter(name="agentInfrastructure")
    def agent_infrastructure(self) -> Optional[pulumi.Input['SchematicsAgentAgentInfrastructureArgs']]:
        """
        The infrastructure parameters used by the agent.
        """
        return pulumi.get(self, "agent_infrastructure")

    @agent_infrastructure.setter
    def agent_infrastructure(self, value: Optional[pulumi.Input['SchematicsAgentAgentInfrastructureArgs']]):
        pulumi.set(self, "agent_infrastructure", value)

    @_builtins.property
    @pulumi.getter(name="agentInputs")
    def agent_inputs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentInputArgs']]]]:
        """
        Additional input variables for the agent.
        """
        return pulumi.get(self, "agent_inputs")

    @agent_inputs.setter
    def agent_inputs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentInputArgs']]]]):
        pulumi.set(self, "agent_inputs", value)

    @_builtins.property
    @pulumi.getter(name="agentKpis")
    def agent_kpis(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentKpiArgs']]]]:
        """
        Schematics Agent key performance indicators.
        """
        return pulumi.get(self, "agent_kpis")

    @agent_kpis.setter
    def agent_kpis(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentKpiArgs']]]]):
        pulumi.set(self, "agent_kpis", value)

    @_builtins.property
    @pulumi.getter(name="agentLocation")
    def agent_location(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The location where agent is deployed in the user environment.
        """
        return pulumi.get(self, "agent_location")

    @agent_location.setter
    def agent_location(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "agent_location", value)

    @_builtins.property
    @pulumi.getter(name="agentMetadatas")
    def agent_metadatas(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentMetadataArgs']]]]:
        """
        The metadata of an agent.
        """
        return pulumi.get(self, "agent_metadatas")

    @agent_metadatas.setter
    def agent_metadatas(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentAgentMetadataArgs']]]]):
        pulumi.set(self, "agent_metadatas", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The agent creation date-time.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="creationBy")
    def creation_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The email address of an user who created the agent.
        """
        return pulumi.get(self, "creation_by")

    @creation_by.setter
    def creation_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "creation_by", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Agent description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the agent (must be unique, for an account).
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="recentDeployJobs")
    def recent_deploy_jobs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentRecentDeployJobArgs']]]]:
        """
        Post-installations checks for Agent health.
        """
        return pulumi.get(self, "recent_deploy_jobs")

    @recent_deploy_jobs.setter
    def recent_deploy_jobs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentRecentDeployJobArgs']]]]):
        pulumi.set(self, "recent_deploy_jobs", value)

    @_builtins.property
    @pulumi.getter(name="recentHealthJobs")
    def recent_health_jobs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentRecentHealthJobArgs']]]]:
        """
        Agent health check.
        """
        return pulumi.get(self, "recent_health_jobs")

    @recent_health_jobs.setter
    def recent_health_jobs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentRecentHealthJobArgs']]]]):
        pulumi.set(self, "recent_health_jobs", value)

    @_builtins.property
    @pulumi.getter(name="recentPrsJobs")
    def recent_prs_jobs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentRecentPrsJobArgs']]]]:
        """
        Run a pre-requisite scanner for deploying agent.
        """
        return pulumi.get(self, "recent_prs_jobs")

    @recent_prs_jobs.setter
    def recent_prs_jobs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentRecentPrsJobArgs']]]]):
        pulumi.set(self, "recent_prs_jobs", value)

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The resource-group name for the agent. By default, agent will be registered in Default Resource Group.
        """
        return pulumi.get(self, "resource_group")

    @resource_group.setter
    def resource_group(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_group", value)

    @_builtins.property
    @pulumi.getter(name="runDestroyResources")
    def run_destroy_resources(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Argument which helps to run destroy resources job. Increment the value to destroy resources associated with agent
        deployment.
        """
        return pulumi.get(self, "run_destroy_resources")

    @run_destroy_resources.setter
    def run_destroy_resources(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "run_destroy_resources", value)

    @_builtins.property
    @pulumi.getter(name="schematicsAgentId")
    def schematics_agent_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "schematics_agent_id")

    @schematics_agent_id.setter
    def schematics_agent_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "schematics_agent_id", value)

    @_builtins.property
    @pulumi.getter(name="schematicsLocation")
    def schematics_location(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "schematics_location")

    @schematics_location.setter
    def schematics_location(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "schematics_location", value)

    @_builtins.property
    @pulumi.getter(name="systemStates")
    def system_states(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentSystemStateArgs']]]]:
        """
        Computed state of the agent.
        """
        return pulumi.get(self, "system_states")

    @system_states.setter
    def system_states(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsAgentSystemStateArgs']]]]):
        pulumi.set(self, "system_states", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Tags for the agent.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['SchematicsAgentTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['SchematicsAgentTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The agent registration updation time.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Email address of user who updated the agent registration.
        """
        return pulumi.get(self, "updated_by")

    @updated_by.setter
    def updated_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_by", value)

    @_builtins.property
    @pulumi.getter(name="userState")
    def user_state(self) -> Optional[pulumi.Input['SchematicsAgentUserStateArgs']]:
        """
        User defined status of the agent.
        """
        return pulumi.get(self, "user_state")

    @user_state.setter
    def user_state(self, value: Optional[pulumi.Input['SchematicsAgentUserStateArgs']]):
        pulumi.set(self, "user_state", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Agent version.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "version", value)


@pulumi.type_token("ibm:index/schematicsAgent:SchematicsAgent")
class SchematicsAgent(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 agent_infrastructure: Optional[pulumi.Input[Union['SchematicsAgentAgentInfrastructureArgs', 'SchematicsAgentAgentInfrastructureArgsDict']]] = None,
                 agent_inputs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentAgentInputArgs', 'SchematicsAgentAgentInputArgsDict']]]]] = None,
                 agent_location: Optional[pulumi.Input[_builtins.str]] = None,
                 agent_metadatas: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentAgentMetadataArgs', 'SchematicsAgentAgentMetadataArgsDict']]]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 run_destroy_resources: Optional[pulumi.Input[_builtins.float]] = None,
                 schematics_agent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 schematics_location: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 timeouts: Optional[pulumi.Input[Union['SchematicsAgentTimeoutsArgs', 'SchematicsAgentTimeoutsArgsDict']]] = None,
                 user_state: Optional[pulumi.Input[Union['SchematicsAgentUserStateArgs', 'SchematicsAgentUserStateArgsDict']]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a SchematicsAgent resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['SchematicsAgentAgentInfrastructureArgs', 'SchematicsAgentAgentInfrastructureArgsDict']] agent_infrastructure: The infrastructure parameters used by the agent.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentAgentInputArgs', 'SchematicsAgentAgentInputArgsDict']]]] agent_inputs: Additional input variables for the agent.
        :param pulumi.Input[_builtins.str] agent_location: The location where agent is deployed in the user environment.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentAgentMetadataArgs', 'SchematicsAgentAgentMetadataArgsDict']]]] agent_metadatas: The metadata of an agent.
        :param pulumi.Input[_builtins.str] description: Agent description.
        :param pulumi.Input[_builtins.str] name: The name of the agent (must be unique, for an account).
        :param pulumi.Input[_builtins.str] resource_group: The resource-group name for the agent. By default, agent will be registered in Default Resource Group.
        :param pulumi.Input[_builtins.float] run_destroy_resources: Argument which helps to run destroy resources job. Increment the value to destroy resources associated with agent
               deployment.
        :param pulumi.Input[_builtins.str] schematics_location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: Tags for the agent.
        :param pulumi.Input[Union['SchematicsAgentUserStateArgs', 'SchematicsAgentUserStateArgsDict']] user_state: User defined status of the agent.
        :param pulumi.Input[_builtins.str] version: Agent version.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SchematicsAgentArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a SchematicsAgent resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param SchematicsAgentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SchematicsAgentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 agent_infrastructure: Optional[pulumi.Input[Union['SchematicsAgentAgentInfrastructureArgs', 'SchematicsAgentAgentInfrastructureArgsDict']]] = None,
                 agent_inputs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentAgentInputArgs', 'SchematicsAgentAgentInputArgsDict']]]]] = None,
                 agent_location: Optional[pulumi.Input[_builtins.str]] = None,
                 agent_metadatas: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentAgentMetadataArgs', 'SchematicsAgentAgentMetadataArgsDict']]]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 run_destroy_resources: Optional[pulumi.Input[_builtins.float]] = None,
                 schematics_agent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 schematics_location: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 timeouts: Optional[pulumi.Input[Union['SchematicsAgentTimeoutsArgs', 'SchematicsAgentTimeoutsArgsDict']]] = None,
                 user_state: Optional[pulumi.Input[Union['SchematicsAgentUserStateArgs', 'SchematicsAgentUserStateArgsDict']]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SchematicsAgentArgs.__new__(SchematicsAgentArgs)

            if agent_infrastructure is None and not opts.urn:
                raise TypeError("Missing required property 'agent_infrastructure'")
            __props__.__dict__["agent_infrastructure"] = agent_infrastructure
            __props__.__dict__["agent_inputs"] = agent_inputs
            if agent_location is None and not opts.urn:
                raise TypeError("Missing required property 'agent_location'")
            __props__.__dict__["agent_location"] = agent_location
            __props__.__dict__["agent_metadatas"] = agent_metadatas
            __props__.__dict__["description"] = description
            __props__.__dict__["name"] = name
            if resource_group is None and not opts.urn:
                raise TypeError("Missing required property 'resource_group'")
            __props__.__dict__["resource_group"] = resource_group
            __props__.__dict__["run_destroy_resources"] = run_destroy_resources
            __props__.__dict__["schematics_agent_id"] = schematics_agent_id
            if schematics_location is None and not opts.urn:
                raise TypeError("Missing required property 'schematics_location'")
            __props__.__dict__["schematics_location"] = schematics_location
            __props__.__dict__["tags"] = tags
            __props__.__dict__["timeouts"] = timeouts
            __props__.__dict__["user_state"] = user_state
            if version is None and not opts.urn:
                raise TypeError("Missing required property 'version'")
            __props__.__dict__["version"] = version
            __props__.__dict__["agent_crn"] = None
            __props__.__dict__["agent_kpis"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["creation_by"] = None
            __props__.__dict__["recent_deploy_jobs"] = None
            __props__.__dict__["recent_health_jobs"] = None
            __props__.__dict__["recent_prs_jobs"] = None
            __props__.__dict__["system_states"] = None
            __props__.__dict__["updated_at"] = None
            __props__.__dict__["updated_by"] = None
        super(SchematicsAgent, __self__).__init__(
            'ibm:index/schematicsAgent:SchematicsAgent',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            agent_crn: Optional[pulumi.Input[_builtins.str]] = None,
            agent_infrastructure: Optional[pulumi.Input[Union['SchematicsAgentAgentInfrastructureArgs', 'SchematicsAgentAgentInfrastructureArgsDict']]] = None,
            agent_inputs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentAgentInputArgs', 'SchematicsAgentAgentInputArgsDict']]]]] = None,
            agent_kpis: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentAgentKpiArgs', 'SchematicsAgentAgentKpiArgsDict']]]]] = None,
            agent_location: Optional[pulumi.Input[_builtins.str]] = None,
            agent_metadatas: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentAgentMetadataArgs', 'SchematicsAgentAgentMetadataArgsDict']]]]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            creation_by: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            recent_deploy_jobs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentRecentDeployJobArgs', 'SchematicsAgentRecentDeployJobArgsDict']]]]] = None,
            recent_health_jobs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentRecentHealthJobArgs', 'SchematicsAgentRecentHealthJobArgsDict']]]]] = None,
            recent_prs_jobs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentRecentPrsJobArgs', 'SchematicsAgentRecentPrsJobArgsDict']]]]] = None,
            resource_group: Optional[pulumi.Input[_builtins.str]] = None,
            run_destroy_resources: Optional[pulumi.Input[_builtins.float]] = None,
            schematics_agent_id: Optional[pulumi.Input[_builtins.str]] = None,
            schematics_location: Optional[pulumi.Input[_builtins.str]] = None,
            system_states: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentSystemStateArgs', 'SchematicsAgentSystemStateArgsDict']]]]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            timeouts: Optional[pulumi.Input[Union['SchematicsAgentTimeoutsArgs', 'SchematicsAgentTimeoutsArgsDict']]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            updated_by: Optional[pulumi.Input[_builtins.str]] = None,
            user_state: Optional[pulumi.Input[Union['SchematicsAgentUserStateArgs', 'SchematicsAgentUserStateArgsDict']]] = None,
            version: Optional[pulumi.Input[_builtins.str]] = None) -> 'SchematicsAgent':
        """
        Get an existing SchematicsAgent resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] agent_crn: The agent crn, obtained from the Schematics agent deployment configuration.
        :param pulumi.Input[Union['SchematicsAgentAgentInfrastructureArgs', 'SchematicsAgentAgentInfrastructureArgsDict']] agent_infrastructure: The infrastructure parameters used by the agent.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentAgentInputArgs', 'SchematicsAgentAgentInputArgsDict']]]] agent_inputs: Additional input variables for the agent.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentAgentKpiArgs', 'SchematicsAgentAgentKpiArgsDict']]]] agent_kpis: Schematics Agent key performance indicators.
        :param pulumi.Input[_builtins.str] agent_location: The location where agent is deployed in the user environment.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentAgentMetadataArgs', 'SchematicsAgentAgentMetadataArgsDict']]]] agent_metadatas: The metadata of an agent.
        :param pulumi.Input[_builtins.str] created_at: The agent creation date-time.
        :param pulumi.Input[_builtins.str] creation_by: The email address of an user who created the agent.
        :param pulumi.Input[_builtins.str] description: Agent description.
        :param pulumi.Input[_builtins.str] name: The name of the agent (must be unique, for an account).
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentRecentDeployJobArgs', 'SchematicsAgentRecentDeployJobArgsDict']]]] recent_deploy_jobs: Post-installations checks for Agent health.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentRecentHealthJobArgs', 'SchematicsAgentRecentHealthJobArgsDict']]]] recent_health_jobs: Agent health check.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentRecentPrsJobArgs', 'SchematicsAgentRecentPrsJobArgsDict']]]] recent_prs_jobs: Run a pre-requisite scanner for deploying agent.
        :param pulumi.Input[_builtins.str] resource_group: The resource-group name for the agent. By default, agent will be registered in Default Resource Group.
        :param pulumi.Input[_builtins.float] run_destroy_resources: Argument which helps to run destroy resources job. Increment the value to destroy resources associated with agent
               deployment.
        :param pulumi.Input[_builtins.str] schematics_location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsAgentSystemStateArgs', 'SchematicsAgentSystemStateArgsDict']]]] system_states: Computed state of the agent.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: Tags for the agent.
        :param pulumi.Input[_builtins.str] updated_at: The agent registration updation time.
        :param pulumi.Input[_builtins.str] updated_by: Email address of user who updated the agent registration.
        :param pulumi.Input[Union['SchematicsAgentUserStateArgs', 'SchematicsAgentUserStateArgsDict']] user_state: User defined status of the agent.
        :param pulumi.Input[_builtins.str] version: Agent version.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SchematicsAgentState.__new__(_SchematicsAgentState)

        __props__.__dict__["agent_crn"] = agent_crn
        __props__.__dict__["agent_infrastructure"] = agent_infrastructure
        __props__.__dict__["agent_inputs"] = agent_inputs
        __props__.__dict__["agent_kpis"] = agent_kpis
        __props__.__dict__["agent_location"] = agent_location
        __props__.__dict__["agent_metadatas"] = agent_metadatas
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["creation_by"] = creation_by
        __props__.__dict__["description"] = description
        __props__.__dict__["name"] = name
        __props__.__dict__["recent_deploy_jobs"] = recent_deploy_jobs
        __props__.__dict__["recent_health_jobs"] = recent_health_jobs
        __props__.__dict__["recent_prs_jobs"] = recent_prs_jobs
        __props__.__dict__["resource_group"] = resource_group
        __props__.__dict__["run_destroy_resources"] = run_destroy_resources
        __props__.__dict__["schematics_agent_id"] = schematics_agent_id
        __props__.__dict__["schematics_location"] = schematics_location
        __props__.__dict__["system_states"] = system_states
        __props__.__dict__["tags"] = tags
        __props__.__dict__["timeouts"] = timeouts
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["updated_by"] = updated_by
        __props__.__dict__["user_state"] = user_state
        __props__.__dict__["version"] = version
        return SchematicsAgent(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="agentCrn")
    def agent_crn(self) -> pulumi.Output[_builtins.str]:
        """
        The agent crn, obtained from the Schematics agent deployment configuration.
        """
        return pulumi.get(self, "agent_crn")

    @_builtins.property
    @pulumi.getter(name="agentInfrastructure")
    def agent_infrastructure(self) -> pulumi.Output['outputs.SchematicsAgentAgentInfrastructure']:
        """
        The infrastructure parameters used by the agent.
        """
        return pulumi.get(self, "agent_infrastructure")

    @_builtins.property
    @pulumi.getter(name="agentInputs")
    def agent_inputs(self) -> pulumi.Output[Optional[Sequence['outputs.SchematicsAgentAgentInput']]]:
        """
        Additional input variables for the agent.
        """
        return pulumi.get(self, "agent_inputs")

    @_builtins.property
    @pulumi.getter(name="agentKpis")
    def agent_kpis(self) -> pulumi.Output[Sequence['outputs.SchematicsAgentAgentKpi']]:
        """
        Schematics Agent key performance indicators.
        """
        return pulumi.get(self, "agent_kpis")

    @_builtins.property
    @pulumi.getter(name="agentLocation")
    def agent_location(self) -> pulumi.Output[_builtins.str]:
        """
        The location where agent is deployed in the user environment.
        """
        return pulumi.get(self, "agent_location")

    @_builtins.property
    @pulumi.getter(name="agentMetadatas")
    def agent_metadatas(self) -> pulumi.Output[Optional[Sequence['outputs.SchematicsAgentAgentMetadata']]]:
        """
        The metadata of an agent.
        """
        return pulumi.get(self, "agent_metadatas")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The agent creation date-time.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="creationBy")
    def creation_by(self) -> pulumi.Output[_builtins.str]:
        """
        The email address of an user who created the agent.
        """
        return pulumi.get(self, "creation_by")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Agent description.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the agent (must be unique, for an account).
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="recentDeployJobs")
    def recent_deploy_jobs(self) -> pulumi.Output[Sequence['outputs.SchematicsAgentRecentDeployJob']]:
        """
        Post-installations checks for Agent health.
        """
        return pulumi.get(self, "recent_deploy_jobs")

    @_builtins.property
    @pulumi.getter(name="recentHealthJobs")
    def recent_health_jobs(self) -> pulumi.Output[Sequence['outputs.SchematicsAgentRecentHealthJob']]:
        """
        Agent health check.
        """
        return pulumi.get(self, "recent_health_jobs")

    @_builtins.property
    @pulumi.getter(name="recentPrsJobs")
    def recent_prs_jobs(self) -> pulumi.Output[Sequence['outputs.SchematicsAgentRecentPrsJob']]:
        """
        Run a pre-requisite scanner for deploying agent.
        """
        return pulumi.get(self, "recent_prs_jobs")

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> pulumi.Output[_builtins.str]:
        """
        The resource-group name for the agent. By default, agent will be registered in Default Resource Group.
        """
        return pulumi.get(self, "resource_group")

    @_builtins.property
    @pulumi.getter(name="runDestroyResources")
    def run_destroy_resources(self) -> pulumi.Output[Optional[_builtins.float]]:
        """
        Argument which helps to run destroy resources job. Increment the value to destroy resources associated with agent
        deployment.
        """
        return pulumi.get(self, "run_destroy_resources")

    @_builtins.property
    @pulumi.getter(name="schematicsAgentId")
    def schematics_agent_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "schematics_agent_id")

    @_builtins.property
    @pulumi.getter(name="schematicsLocation")
    def schematics_location(self) -> pulumi.Output[_builtins.str]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "schematics_location")

    @_builtins.property
    @pulumi.getter(name="systemStates")
    def system_states(self) -> pulumi.Output[Sequence['outputs.SchematicsAgentSystemState']]:
        """
        Computed state of the agent.
        """
        return pulumi.get(self, "system_states")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Tags for the agent.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> pulumi.Output[Optional['outputs.SchematicsAgentTimeouts']]:
        return pulumi.get(self, "timeouts")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The agent registration updation time.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> pulumi.Output[_builtins.str]:
        """
        Email address of user who updated the agent registration.
        """
        return pulumi.get(self, "updated_by")

    @_builtins.property
    @pulumi.getter(name="userState")
    def user_state(self) -> pulumi.Output[Optional['outputs.SchematicsAgentUserState']]:
        """
        User defined status of the agent.
        """
        return pulumi.get(self, "user_state")

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Output[_builtins.str]:
        """
        Agent version.
        """
        return pulumi.get(self, "version")

