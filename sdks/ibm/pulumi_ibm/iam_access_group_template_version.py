# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IamAccessGroupTemplateVersionArgs', 'IamAccessGroupTemplateVersion']

@pulumi.input_type
class IamAccessGroupTemplateVersionArgs:
    def __init__(__self__, *,
                 template_id: pulumi.Input[_builtins.str],
                 committed: Optional[pulumi.Input[_builtins.bool]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 group: Optional[pulumi.Input['IamAccessGroupTemplateVersionGroupArgs']] = None,
                 iam_access_group_template_version_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_template_references: Optional[pulumi.Input[Sequence[pulumi.Input['IamAccessGroupTemplateVersionPolicyTemplateReferenceArgs']]]] = None,
                 transaction_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a IamAccessGroupTemplateVersion resource.
        :param pulumi.Input[_builtins.str] template_id: ID of the template that you want to create a new version of.
        :param pulumi.Input[_builtins.bool] committed: A boolean indicating whether the access group template is committed. You must commit a template before you can assign it
               to child accounts.
        :param pulumi.Input[_builtins.str] description: The description of the access group template.
        :param pulumi.Input['IamAccessGroupTemplateVersionGroupArgs'] group: Access Group Component.
        :param pulumi.Input[_builtins.str] name: The name of the access group template.
        :param pulumi.Input[Sequence[pulumi.Input['IamAccessGroupTemplateVersionPolicyTemplateReferenceArgs']]] policy_template_references: References to policy templates assigned to the access group template.
        :param pulumi.Input[_builtins.str] transaction_id: An optional transaction id for the request.
        """
        pulumi.set(__self__, "template_id", template_id)
        if committed is not None:
            pulumi.set(__self__, "committed", committed)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if group is not None:
            pulumi.set(__self__, "group", group)
        if iam_access_group_template_version_id is not None:
            pulumi.set(__self__, "iam_access_group_template_version_id", iam_access_group_template_version_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if policy_template_references is not None:
            pulumi.set(__self__, "policy_template_references", policy_template_references)
        if transaction_id is not None:
            pulumi.set(__self__, "transaction_id", transaction_id)

    @_builtins.property
    @pulumi.getter(name="templateId")
    def template_id(self) -> pulumi.Input[_builtins.str]:
        """
        ID of the template that you want to create a new version of.
        """
        return pulumi.get(self, "template_id")

    @template_id.setter
    def template_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "template_id", value)

    @_builtins.property
    @pulumi.getter
    def committed(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        A boolean indicating whether the access group template is committed. You must commit a template before you can assign it
        to child accounts.
        """
        return pulumi.get(self, "committed")

    @committed.setter
    def committed(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "committed", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the access group template.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def group(self) -> Optional[pulumi.Input['IamAccessGroupTemplateVersionGroupArgs']]:
        """
        Access Group Component.
        """
        return pulumi.get(self, "group")

    @group.setter
    def group(self, value: Optional[pulumi.Input['IamAccessGroupTemplateVersionGroupArgs']]):
        pulumi.set(self, "group", value)

    @_builtins.property
    @pulumi.getter(name="iamAccessGroupTemplateVersionId")
    def iam_access_group_template_version_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "iam_access_group_template_version_id")

    @iam_access_group_template_version_id.setter
    def iam_access_group_template_version_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "iam_access_group_template_version_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the access group template.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="policyTemplateReferences")
    def policy_template_references(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IamAccessGroupTemplateVersionPolicyTemplateReferenceArgs']]]]:
        """
        References to policy templates assigned to the access group template.
        """
        return pulumi.get(self, "policy_template_references")

    @policy_template_references.setter
    def policy_template_references(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IamAccessGroupTemplateVersionPolicyTemplateReferenceArgs']]]]):
        pulumi.set(self, "policy_template_references", value)

    @_builtins.property
    @pulumi.getter(name="transactionId")
    def transaction_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        An optional transaction id for the request.
        """
        return pulumi.get(self, "transaction_id")

    @transaction_id.setter
    def transaction_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "transaction_id", value)


@pulumi.input_type
class _IamAccessGroupTemplateVersionState:
    def __init__(__self__, *,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 committed: Optional[pulumi.Input[_builtins.bool]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_by_id: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 group: Optional[pulumi.Input['IamAccessGroupTemplateVersionGroupArgs']] = None,
                 href: Optional[pulumi.Input[_builtins.str]] = None,
                 iam_access_group_template_version_id: Optional[pulumi.Input[_builtins.str]] = None,
                 last_modified_at: Optional[pulumi.Input[_builtins.str]] = None,
                 last_modified_by_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_template_references: Optional[pulumi.Input[Sequence[pulumi.Input['IamAccessGroupTemplateVersionPolicyTemplateReferenceArgs']]]] = None,
                 template_id: Optional[pulumi.Input[_builtins.str]] = None,
                 transaction_id: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering IamAccessGroupTemplateVersion resources.
        :param pulumi.Input[_builtins.str] account_id: The ID of the account to which the access group template is assigned.
        :param pulumi.Input[_builtins.bool] committed: A boolean indicating whether the access group template is committed. You must commit a template before you can assign it
               to child accounts.
        :param pulumi.Input[_builtins.str] created_at: The date and time when the access group template was created.
        :param pulumi.Input[_builtins.str] created_by_id: The ID of the user who created the access group template.
        :param pulumi.Input[_builtins.str] description: The description of the access group template.
        :param pulumi.Input['IamAccessGroupTemplateVersionGroupArgs'] group: Access Group Component.
        :param pulumi.Input[_builtins.str] href: The URL of the access group template resource.
        :param pulumi.Input[_builtins.str] last_modified_at: The date and time when the access group template was last modified.
        :param pulumi.Input[_builtins.str] last_modified_by_id: The ID of the user who last modified the access group template.
        :param pulumi.Input[_builtins.str] name: The name of the access group template.
        :param pulumi.Input[Sequence[pulumi.Input['IamAccessGroupTemplateVersionPolicyTemplateReferenceArgs']]] policy_template_references: References to policy templates assigned to the access group template.
        :param pulumi.Input[_builtins.str] template_id: ID of the template that you want to create a new version of.
        :param pulumi.Input[_builtins.str] transaction_id: An optional transaction id for the request.
        :param pulumi.Input[_builtins.str] version: The version of the access group template.
        """
        if account_id is not None:
            pulumi.set(__self__, "account_id", account_id)
        if committed is not None:
            pulumi.set(__self__, "committed", committed)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by_id is not None:
            pulumi.set(__self__, "created_by_id", created_by_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if group is not None:
            pulumi.set(__self__, "group", group)
        if href is not None:
            pulumi.set(__self__, "href", href)
        if iam_access_group_template_version_id is not None:
            pulumi.set(__self__, "iam_access_group_template_version_id", iam_access_group_template_version_id)
        if last_modified_at is not None:
            pulumi.set(__self__, "last_modified_at", last_modified_at)
        if last_modified_by_id is not None:
            pulumi.set(__self__, "last_modified_by_id", last_modified_by_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if policy_template_references is not None:
            pulumi.set(__self__, "policy_template_references", policy_template_references)
        if template_id is not None:
            pulumi.set(__self__, "template_id", template_id)
        if transaction_id is not None:
            pulumi.set(__self__, "transaction_id", transaction_id)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the account to which the access group template is assigned.
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "account_id", value)

    @_builtins.property
    @pulumi.getter
    def committed(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        A boolean indicating whether the access group template is committed. You must commit a template before you can assign it
        to child accounts.
        """
        return pulumi.get(self, "committed")

    @committed.setter
    def committed(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "committed", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date and time when the access group template was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdById")
    def created_by_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the user who created the access group template.
        """
        return pulumi.get(self, "created_by_id")

    @created_by_id.setter
    def created_by_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_by_id", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the access group template.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def group(self) -> Optional[pulumi.Input['IamAccessGroupTemplateVersionGroupArgs']]:
        """
        Access Group Component.
        """
        return pulumi.get(self, "group")

    @group.setter
    def group(self, value: Optional[pulumi.Input['IamAccessGroupTemplateVersionGroupArgs']]):
        pulumi.set(self, "group", value)

    @_builtins.property
    @pulumi.getter
    def href(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL of the access group template resource.
        """
        return pulumi.get(self, "href")

    @href.setter
    def href(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "href", value)

    @_builtins.property
    @pulumi.getter(name="iamAccessGroupTemplateVersionId")
    def iam_access_group_template_version_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "iam_access_group_template_version_id")

    @iam_access_group_template_version_id.setter
    def iam_access_group_template_version_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "iam_access_group_template_version_id", value)

    @_builtins.property
    @pulumi.getter(name="lastModifiedAt")
    def last_modified_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date and time when the access group template was last modified.
        """
        return pulumi.get(self, "last_modified_at")

    @last_modified_at.setter
    def last_modified_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "last_modified_at", value)

    @_builtins.property
    @pulumi.getter(name="lastModifiedById")
    def last_modified_by_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the user who last modified the access group template.
        """
        return pulumi.get(self, "last_modified_by_id")

    @last_modified_by_id.setter
    def last_modified_by_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "last_modified_by_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the access group template.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="policyTemplateReferences")
    def policy_template_references(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IamAccessGroupTemplateVersionPolicyTemplateReferenceArgs']]]]:
        """
        References to policy templates assigned to the access group template.
        """
        return pulumi.get(self, "policy_template_references")

    @policy_template_references.setter
    def policy_template_references(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IamAccessGroupTemplateVersionPolicyTemplateReferenceArgs']]]]):
        pulumi.set(self, "policy_template_references", value)

    @_builtins.property
    @pulumi.getter(name="templateId")
    def template_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        ID of the template that you want to create a new version of.
        """
        return pulumi.get(self, "template_id")

    @template_id.setter
    def template_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "template_id", value)

    @_builtins.property
    @pulumi.getter(name="transactionId")
    def transaction_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        An optional transaction id for the request.
        """
        return pulumi.get(self, "transaction_id")

    @transaction_id.setter
    def transaction_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "transaction_id", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The version of the access group template.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "version", value)


@pulumi.type_token("ibm:index/iamAccessGroupTemplateVersion:IamAccessGroupTemplateVersion")
class IamAccessGroupTemplateVersion(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 committed: Optional[pulumi.Input[_builtins.bool]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 group: Optional[pulumi.Input[Union['IamAccessGroupTemplateVersionGroupArgs', 'IamAccessGroupTemplateVersionGroupArgsDict']]] = None,
                 iam_access_group_template_version_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_template_references: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IamAccessGroupTemplateVersionPolicyTemplateReferenceArgs', 'IamAccessGroupTemplateVersionPolicyTemplateReferenceArgsDict']]]]] = None,
                 template_id: Optional[pulumi.Input[_builtins.str]] = None,
                 transaction_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a IamAccessGroupTemplateVersion resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.bool] committed: A boolean indicating whether the access group template is committed. You must commit a template before you can assign it
               to child accounts.
        :param pulumi.Input[_builtins.str] description: The description of the access group template.
        :param pulumi.Input[Union['IamAccessGroupTemplateVersionGroupArgs', 'IamAccessGroupTemplateVersionGroupArgsDict']] group: Access Group Component.
        :param pulumi.Input[_builtins.str] name: The name of the access group template.
        :param pulumi.Input[Sequence[pulumi.Input[Union['IamAccessGroupTemplateVersionPolicyTemplateReferenceArgs', 'IamAccessGroupTemplateVersionPolicyTemplateReferenceArgsDict']]]] policy_template_references: References to policy templates assigned to the access group template.
        :param pulumi.Input[_builtins.str] template_id: ID of the template that you want to create a new version of.
        :param pulumi.Input[_builtins.str] transaction_id: An optional transaction id for the request.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IamAccessGroupTemplateVersionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a IamAccessGroupTemplateVersion resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param IamAccessGroupTemplateVersionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IamAccessGroupTemplateVersionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 committed: Optional[pulumi.Input[_builtins.bool]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 group: Optional[pulumi.Input[Union['IamAccessGroupTemplateVersionGroupArgs', 'IamAccessGroupTemplateVersionGroupArgsDict']]] = None,
                 iam_access_group_template_version_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_template_references: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IamAccessGroupTemplateVersionPolicyTemplateReferenceArgs', 'IamAccessGroupTemplateVersionPolicyTemplateReferenceArgsDict']]]]] = None,
                 template_id: Optional[pulumi.Input[_builtins.str]] = None,
                 transaction_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IamAccessGroupTemplateVersionArgs.__new__(IamAccessGroupTemplateVersionArgs)

            __props__.__dict__["committed"] = committed
            __props__.__dict__["description"] = description
            __props__.__dict__["group"] = group
            __props__.__dict__["iam_access_group_template_version_id"] = iam_access_group_template_version_id
            __props__.__dict__["name"] = name
            __props__.__dict__["policy_template_references"] = policy_template_references
            if template_id is None and not opts.urn:
                raise TypeError("Missing required property 'template_id'")
            __props__.__dict__["template_id"] = template_id
            __props__.__dict__["transaction_id"] = transaction_id
            __props__.__dict__["account_id"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_by_id"] = None
            __props__.__dict__["href"] = None
            __props__.__dict__["last_modified_at"] = None
            __props__.__dict__["last_modified_by_id"] = None
            __props__.__dict__["version"] = None
        super(IamAccessGroupTemplateVersion, __self__).__init__(
            'ibm:index/iamAccessGroupTemplateVersion:IamAccessGroupTemplateVersion',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_id: Optional[pulumi.Input[_builtins.str]] = None,
            committed: Optional[pulumi.Input[_builtins.bool]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_by_id: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            group: Optional[pulumi.Input[Union['IamAccessGroupTemplateVersionGroupArgs', 'IamAccessGroupTemplateVersionGroupArgsDict']]] = None,
            href: Optional[pulumi.Input[_builtins.str]] = None,
            iam_access_group_template_version_id: Optional[pulumi.Input[_builtins.str]] = None,
            last_modified_at: Optional[pulumi.Input[_builtins.str]] = None,
            last_modified_by_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            policy_template_references: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IamAccessGroupTemplateVersionPolicyTemplateReferenceArgs', 'IamAccessGroupTemplateVersionPolicyTemplateReferenceArgsDict']]]]] = None,
            template_id: Optional[pulumi.Input[_builtins.str]] = None,
            transaction_id: Optional[pulumi.Input[_builtins.str]] = None,
            version: Optional[pulumi.Input[_builtins.str]] = None) -> 'IamAccessGroupTemplateVersion':
        """
        Get an existing IamAccessGroupTemplateVersion resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] account_id: The ID of the account to which the access group template is assigned.
        :param pulumi.Input[_builtins.bool] committed: A boolean indicating whether the access group template is committed. You must commit a template before you can assign it
               to child accounts.
        :param pulumi.Input[_builtins.str] created_at: The date and time when the access group template was created.
        :param pulumi.Input[_builtins.str] created_by_id: The ID of the user who created the access group template.
        :param pulumi.Input[_builtins.str] description: The description of the access group template.
        :param pulumi.Input[Union['IamAccessGroupTemplateVersionGroupArgs', 'IamAccessGroupTemplateVersionGroupArgsDict']] group: Access Group Component.
        :param pulumi.Input[_builtins.str] href: The URL of the access group template resource.
        :param pulumi.Input[_builtins.str] last_modified_at: The date and time when the access group template was last modified.
        :param pulumi.Input[_builtins.str] last_modified_by_id: The ID of the user who last modified the access group template.
        :param pulumi.Input[_builtins.str] name: The name of the access group template.
        :param pulumi.Input[Sequence[pulumi.Input[Union['IamAccessGroupTemplateVersionPolicyTemplateReferenceArgs', 'IamAccessGroupTemplateVersionPolicyTemplateReferenceArgsDict']]]] policy_template_references: References to policy templates assigned to the access group template.
        :param pulumi.Input[_builtins.str] template_id: ID of the template that you want to create a new version of.
        :param pulumi.Input[_builtins.str] transaction_id: An optional transaction id for the request.
        :param pulumi.Input[_builtins.str] version: The version of the access group template.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IamAccessGroupTemplateVersionState.__new__(_IamAccessGroupTemplateVersionState)

        __props__.__dict__["account_id"] = account_id
        __props__.__dict__["committed"] = committed
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_by_id"] = created_by_id
        __props__.__dict__["description"] = description
        __props__.__dict__["group"] = group
        __props__.__dict__["href"] = href
        __props__.__dict__["iam_access_group_template_version_id"] = iam_access_group_template_version_id
        __props__.__dict__["last_modified_at"] = last_modified_at
        __props__.__dict__["last_modified_by_id"] = last_modified_by_id
        __props__.__dict__["name"] = name
        __props__.__dict__["policy_template_references"] = policy_template_references
        __props__.__dict__["template_id"] = template_id
        __props__.__dict__["transaction_id"] = transaction_id
        __props__.__dict__["version"] = version
        return IamAccessGroupTemplateVersion(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the account to which the access group template is assigned.
        """
        return pulumi.get(self, "account_id")

    @_builtins.property
    @pulumi.getter
    def committed(self) -> pulumi.Output[_builtins.bool]:
        """
        A boolean indicating whether the access group template is committed. You must commit a template before you can assign it
        to child accounts.
        """
        return pulumi.get(self, "committed")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The date and time when the access group template was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdById")
    def created_by_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the user who created the access group template.
        """
        return pulumi.get(self, "created_by_id")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The description of the access group template.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def group(self) -> pulumi.Output[Optional['outputs.IamAccessGroupTemplateVersionGroup']]:
        """
        Access Group Component.
        """
        return pulumi.get(self, "group")

    @_builtins.property
    @pulumi.getter
    def href(self) -> pulumi.Output[_builtins.str]:
        """
        The URL of the access group template resource.
        """
        return pulumi.get(self, "href")

    @_builtins.property
    @pulumi.getter(name="iamAccessGroupTemplateVersionId")
    def iam_access_group_template_version_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "iam_access_group_template_version_id")

    @_builtins.property
    @pulumi.getter(name="lastModifiedAt")
    def last_modified_at(self) -> pulumi.Output[_builtins.str]:
        """
        The date and time when the access group template was last modified.
        """
        return pulumi.get(self, "last_modified_at")

    @_builtins.property
    @pulumi.getter(name="lastModifiedById")
    def last_modified_by_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the user who last modified the access group template.
        """
        return pulumi.get(self, "last_modified_by_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the access group template.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="policyTemplateReferences")
    def policy_template_references(self) -> pulumi.Output[Optional[Sequence['outputs.IamAccessGroupTemplateVersionPolicyTemplateReference']]]:
        """
        References to policy templates assigned to the access group template.
        """
        return pulumi.get(self, "policy_template_references")

    @_builtins.property
    @pulumi.getter(name="templateId")
    def template_id(self) -> pulumi.Output[_builtins.str]:
        """
        ID of the template that you want to create a new version of.
        """
        return pulumi.get(self, "template_id")

    @_builtins.property
    @pulumi.getter(name="transactionId")
    def transaction_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        An optional transaction id for the request.
        """
        return pulumi.get(self, "transaction_id")

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Output[_builtins.str]:
        """
        The version of the access group template.
        """
        return pulumi.get(self, "version")

