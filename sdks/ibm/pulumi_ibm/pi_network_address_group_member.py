# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['PiNetworkAddressGroupMemberInitArgs', 'PiNetworkAddressGroupMember']

@pulumi.input_type
class PiNetworkAddressGroupMemberInitArgs:
    def __init__(__self__, *,
                 pi_cloud_instance_id: pulumi.Input[_builtins.str],
                 pi_network_address_group_id: pulumi.Input[_builtins.str],
                 ibm_pi_network_address_group_member_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_network_address_group_member_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['PiNetworkAddressGroupMemberTimeoutsArgs']] = None):
        """
        The set of arguments for constructing a PiNetworkAddressGroupMember resource.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_network_address_group_id: Network Address Group ID.
        :param pulumi.Input[_builtins.str] pi_cidr: The member to add in CIDR format.
        :param pulumi.Input[_builtins.str] pi_network_address_group_member_id: The network address group member id to remove.
        """
        pulumi.set(__self__, "pi_cloud_instance_id", pi_cloud_instance_id)
        pulumi.set(__self__, "pi_network_address_group_id", pi_network_address_group_id)
        if ibm_pi_network_address_group_member_id is not None:
            pulumi.set(__self__, "ibm_pi_network_address_group_member_id", ibm_pi_network_address_group_member_id)
        if pi_cidr is not None:
            pulumi.set(__self__, "pi_cidr", pi_cidr)
        if pi_network_address_group_member_id is not None:
            pulumi.set(__self__, "pi_network_address_group_member_id", pi_network_address_group_member_id)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)

    @_builtins.property
    @pulumi.getter(name="piCloudInstanceId")
    def pi_cloud_instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        The GUID of the service instance associated with an account.
        """
        return pulumi.get(self, "pi_cloud_instance_id")

    @pi_cloud_instance_id.setter
    def pi_cloud_instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "pi_cloud_instance_id", value)

    @_builtins.property
    @pulumi.getter(name="piNetworkAddressGroupId")
    def pi_network_address_group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Network Address Group ID.
        """
        return pulumi.get(self, "pi_network_address_group_id")

    @pi_network_address_group_id.setter
    def pi_network_address_group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "pi_network_address_group_id", value)

    @_builtins.property
    @pulumi.getter(name="ibmPiNetworkAddressGroupMemberId")
    def ibm_pi_network_address_group_member_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "ibm_pi_network_address_group_member_id")

    @ibm_pi_network_address_group_member_id.setter
    def ibm_pi_network_address_group_member_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ibm_pi_network_address_group_member_id", value)

    @_builtins.property
    @pulumi.getter(name="piCidr")
    def pi_cidr(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The member to add in CIDR format.
        """
        return pulumi.get(self, "pi_cidr")

    @pi_cidr.setter
    def pi_cidr(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_cidr", value)

    @_builtins.property
    @pulumi.getter(name="piNetworkAddressGroupMemberId")
    def pi_network_address_group_member_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The network address group member id to remove.
        """
        return pulumi.get(self, "pi_network_address_group_member_id")

    @pi_network_address_group_member_id.setter
    def pi_network_address_group_member_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_network_address_group_member_id", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['PiNetworkAddressGroupMemberTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['PiNetworkAddressGroupMemberTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)


@pulumi.input_type
class _PiNetworkAddressGroupMemberState:
    def __init__(__self__, *,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 ibm_pi_network_address_group_member_id: Optional[pulumi.Input[_builtins.str]] = None,
                 members: Optional[pulumi.Input[Sequence[pulumi.Input['PiNetworkAddressGroupMemberMemberArgs']]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_network_address_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_network_address_group_member_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['PiNetworkAddressGroupMemberTimeoutsArgs']] = None,
                 user_tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None):
        """
        Input properties used for looking up and filtering PiNetworkAddressGroupMember resources.
        :param pulumi.Input[_builtins.str] crn: The network address group's crn.
        :param pulumi.Input[Sequence[pulumi.Input['PiNetworkAddressGroupMemberMemberArgs']]] members: The list of IP addresses in CIDR notation (for example 192.168.66.2/32) in the Network Address Group.
        :param pulumi.Input[_builtins.str] name: The name of the Network Address Group.
        :param pulumi.Input[_builtins.str] pi_cidr: The member to add in CIDR format.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_network_address_group_id: Network Address Group ID.
        :param pulumi.Input[_builtins.str] pi_network_address_group_member_id: The network address group member id to remove.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] user_tags: List of user tags attached to the resource.
        """
        if crn is not None:
            pulumi.set(__self__, "crn", crn)
        if ibm_pi_network_address_group_member_id is not None:
            pulumi.set(__self__, "ibm_pi_network_address_group_member_id", ibm_pi_network_address_group_member_id)
        if members is not None:
            pulumi.set(__self__, "members", members)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if pi_cidr is not None:
            pulumi.set(__self__, "pi_cidr", pi_cidr)
        if pi_cloud_instance_id is not None:
            pulumi.set(__self__, "pi_cloud_instance_id", pi_cloud_instance_id)
        if pi_network_address_group_id is not None:
            pulumi.set(__self__, "pi_network_address_group_id", pi_network_address_group_id)
        if pi_network_address_group_member_id is not None:
            pulumi.set(__self__, "pi_network_address_group_member_id", pi_network_address_group_member_id)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)
        if user_tags is not None:
            pulumi.set(__self__, "user_tags", user_tags)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The network address group's crn.
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter(name="ibmPiNetworkAddressGroupMemberId")
    def ibm_pi_network_address_group_member_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "ibm_pi_network_address_group_member_id")

    @ibm_pi_network_address_group_member_id.setter
    def ibm_pi_network_address_group_member_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ibm_pi_network_address_group_member_id", value)

    @_builtins.property
    @pulumi.getter
    def members(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PiNetworkAddressGroupMemberMemberArgs']]]]:
        """
        The list of IP addresses in CIDR notation (for example 192.168.66.2/32) in the Network Address Group.
        """
        return pulumi.get(self, "members")

    @members.setter
    def members(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PiNetworkAddressGroupMemberMemberArgs']]]]):
        pulumi.set(self, "members", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the Network Address Group.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="piCidr")
    def pi_cidr(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The member to add in CIDR format.
        """
        return pulumi.get(self, "pi_cidr")

    @pi_cidr.setter
    def pi_cidr(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_cidr", value)

    @_builtins.property
    @pulumi.getter(name="piCloudInstanceId")
    def pi_cloud_instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The GUID of the service instance associated with an account.
        """
        return pulumi.get(self, "pi_cloud_instance_id")

    @pi_cloud_instance_id.setter
    def pi_cloud_instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_cloud_instance_id", value)

    @_builtins.property
    @pulumi.getter(name="piNetworkAddressGroupId")
    def pi_network_address_group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Network Address Group ID.
        """
        return pulumi.get(self, "pi_network_address_group_id")

    @pi_network_address_group_id.setter
    def pi_network_address_group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_network_address_group_id", value)

    @_builtins.property
    @pulumi.getter(name="piNetworkAddressGroupMemberId")
    def pi_network_address_group_member_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The network address group member id to remove.
        """
        return pulumi.get(self, "pi_network_address_group_member_id")

    @pi_network_address_group_member_id.setter
    def pi_network_address_group_member_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_network_address_group_member_id", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['PiNetworkAddressGroupMemberTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['PiNetworkAddressGroupMemberTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)

    @_builtins.property
    @pulumi.getter(name="userTags")
    def user_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        List of user tags attached to the resource.
        """
        return pulumi.get(self, "user_tags")

    @user_tags.setter
    def user_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "user_tags", value)


@pulumi.type_token("ibm:index/piNetworkAddressGroupMember:PiNetworkAddressGroupMember")
class PiNetworkAddressGroupMember(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ibm_pi_network_address_group_member_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_network_address_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_network_address_group_member_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input[Union['PiNetworkAddressGroupMemberTimeoutsArgs', 'PiNetworkAddressGroupMemberTimeoutsArgsDict']]] = None,
                 __props__=None):
        """
        Create a PiNetworkAddressGroupMember resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] pi_cidr: The member to add in CIDR format.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_network_address_group_id: Network Address Group ID.
        :param pulumi.Input[_builtins.str] pi_network_address_group_member_id: The network address group member id to remove.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PiNetworkAddressGroupMemberInitArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a PiNetworkAddressGroupMember resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param PiNetworkAddressGroupMemberInitArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PiNetworkAddressGroupMemberInitArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ibm_pi_network_address_group_member_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_network_address_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_network_address_group_member_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input[Union['PiNetworkAddressGroupMemberTimeoutsArgs', 'PiNetworkAddressGroupMemberTimeoutsArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PiNetworkAddressGroupMemberInitArgs.__new__(PiNetworkAddressGroupMemberInitArgs)

            __props__.__dict__["ibm_pi_network_address_group_member_id"] = ibm_pi_network_address_group_member_id
            __props__.__dict__["pi_cidr"] = pi_cidr
            if pi_cloud_instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'pi_cloud_instance_id'")
            __props__.__dict__["pi_cloud_instance_id"] = pi_cloud_instance_id
            if pi_network_address_group_id is None and not opts.urn:
                raise TypeError("Missing required property 'pi_network_address_group_id'")
            __props__.__dict__["pi_network_address_group_id"] = pi_network_address_group_id
            __props__.__dict__["pi_network_address_group_member_id"] = pi_network_address_group_member_id
            __props__.__dict__["timeouts"] = timeouts
            __props__.__dict__["crn"] = None
            __props__.__dict__["members"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["user_tags"] = None
        super(PiNetworkAddressGroupMember, __self__).__init__(
            'ibm:index/piNetworkAddressGroupMember:PiNetworkAddressGroupMember',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            crn: Optional[pulumi.Input[_builtins.str]] = None,
            ibm_pi_network_address_group_member_id: Optional[pulumi.Input[_builtins.str]] = None,
            members: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PiNetworkAddressGroupMemberMemberArgs', 'PiNetworkAddressGroupMemberMemberArgsDict']]]]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            pi_cidr: Optional[pulumi.Input[_builtins.str]] = None,
            pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            pi_network_address_group_id: Optional[pulumi.Input[_builtins.str]] = None,
            pi_network_address_group_member_id: Optional[pulumi.Input[_builtins.str]] = None,
            timeouts: Optional[pulumi.Input[Union['PiNetworkAddressGroupMemberTimeoutsArgs', 'PiNetworkAddressGroupMemberTimeoutsArgsDict']]] = None,
            user_tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None) -> 'PiNetworkAddressGroupMember':
        """
        Get an existing PiNetworkAddressGroupMember resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] crn: The network address group's crn.
        :param pulumi.Input[Sequence[pulumi.Input[Union['PiNetworkAddressGroupMemberMemberArgs', 'PiNetworkAddressGroupMemberMemberArgsDict']]]] members: The list of IP addresses in CIDR notation (for example 192.168.66.2/32) in the Network Address Group.
        :param pulumi.Input[_builtins.str] name: The name of the Network Address Group.
        :param pulumi.Input[_builtins.str] pi_cidr: The member to add in CIDR format.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_network_address_group_id: Network Address Group ID.
        :param pulumi.Input[_builtins.str] pi_network_address_group_member_id: The network address group member id to remove.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] user_tags: List of user tags attached to the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PiNetworkAddressGroupMemberState.__new__(_PiNetworkAddressGroupMemberState)

        __props__.__dict__["crn"] = crn
        __props__.__dict__["ibm_pi_network_address_group_member_id"] = ibm_pi_network_address_group_member_id
        __props__.__dict__["members"] = members
        __props__.__dict__["name"] = name
        __props__.__dict__["pi_cidr"] = pi_cidr
        __props__.__dict__["pi_cloud_instance_id"] = pi_cloud_instance_id
        __props__.__dict__["pi_network_address_group_id"] = pi_network_address_group_id
        __props__.__dict__["pi_network_address_group_member_id"] = pi_network_address_group_member_id
        __props__.__dict__["timeouts"] = timeouts
        __props__.__dict__["user_tags"] = user_tags
        return PiNetworkAddressGroupMember(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Output[_builtins.str]:
        """
        The network address group's crn.
        """
        return pulumi.get(self, "crn")

    @_builtins.property
    @pulumi.getter(name="ibmPiNetworkAddressGroupMemberId")
    def ibm_pi_network_address_group_member_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "ibm_pi_network_address_group_member_id")

    @_builtins.property
    @pulumi.getter
    def members(self) -> pulumi.Output[Sequence['outputs.PiNetworkAddressGroupMemberMember']]:
        """
        The list of IP addresses in CIDR notation (for example 192.168.66.2/32) in the Network Address Group.
        """
        return pulumi.get(self, "members")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the Network Address Group.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="piCidr")
    def pi_cidr(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The member to add in CIDR format.
        """
        return pulumi.get(self, "pi_cidr")

    @_builtins.property
    @pulumi.getter(name="piCloudInstanceId")
    def pi_cloud_instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        The GUID of the service instance associated with an account.
        """
        return pulumi.get(self, "pi_cloud_instance_id")

    @_builtins.property
    @pulumi.getter(name="piNetworkAddressGroupId")
    def pi_network_address_group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Network Address Group ID.
        """
        return pulumi.get(self, "pi_network_address_group_id")

    @_builtins.property
    @pulumi.getter(name="piNetworkAddressGroupMemberId")
    def pi_network_address_group_member_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The network address group member id to remove.
        """
        return pulumi.get(self, "pi_network_address_group_member_id")

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> pulumi.Output[Optional['outputs.PiNetworkAddressGroupMemberTimeouts']]:
        return pulumi.get(self, "timeouts")

    @_builtins.property
    @pulumi.getter(name="userTags")
    def user_tags(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        List of user tags attached to the resource.
        """
        return pulumi.get(self, "user_tags")

