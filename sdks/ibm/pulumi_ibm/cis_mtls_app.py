# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['CisMtlsAppArgs', 'CisMtlsApp']

@pulumi.input_type
class CisMtlsAppArgs:
    def __init__(__self__, *,
                 cis_id: pulumi.Input[_builtins.str],
                 domain: pulumi.Input[_builtins.str],
                 domain_id: pulumi.Input[_builtins.str],
                 cert_rule_val: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_mtls_app_id: Optional[pulumi.Input[_builtins.str]] = None,
                 common_rule_val: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_decision: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_name: Optional[pulumi.Input[_builtins.str]] = None,
                 session_duration: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a CisMtlsApp resource.
        :param pulumi.Input[_builtins.str] cis_id: CIS instance crn
        :param pulumi.Input[_builtins.str] domain: Associated host domain value
        :param pulumi.Input[_builtins.str] domain_id: Associated CIS domain
        :param pulumi.Input[_builtins.str] cert_rule_val: Policy certificate rule value
        :param pulumi.Input[_builtins.str] common_rule_val: Policy common rule value
        :param pulumi.Input[_builtins.str] name: App Name
        :param pulumi.Input[_builtins.str] policy_decision: Policy Action
        :param pulumi.Input[_builtins.str] policy_name: Policy Name
        :param pulumi.Input[_builtins.str] session_duration: Duration for app validatidity
        """
        pulumi.set(__self__, "cis_id", cis_id)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "domain_id", domain_id)
        if cert_rule_val is not None:
            pulumi.set(__self__, "cert_rule_val", cert_rule_val)
        if cis_mtls_app_id is not None:
            pulumi.set(__self__, "cis_mtls_app_id", cis_mtls_app_id)
        if common_rule_val is not None:
            pulumi.set(__self__, "common_rule_val", common_rule_val)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if policy_decision is not None:
            pulumi.set(__self__, "policy_decision", policy_decision)
        if policy_name is not None:
            pulumi.set(__self__, "policy_name", policy_name)
        if session_duration is not None:
            pulumi.set(__self__, "session_duration", session_duration)

    @_builtins.property
    @pulumi.getter(name="cisId")
    def cis_id(self) -> pulumi.Input[_builtins.str]:
        """
        CIS instance crn
        """
        return pulumi.get(self, "cis_id")

    @cis_id.setter
    def cis_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "cis_id", value)

    @_builtins.property
    @pulumi.getter
    def domain(self) -> pulumi.Input[_builtins.str]:
        """
        Associated host domain value
        """
        return pulumi.get(self, "domain")

    @domain.setter
    def domain(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "domain", value)

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> pulumi.Input[_builtins.str]:
        """
        Associated CIS domain
        """
        return pulumi.get(self, "domain_id")

    @domain_id.setter
    def domain_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "domain_id", value)

    @_builtins.property
    @pulumi.getter(name="certRuleVal")
    def cert_rule_val(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Policy certificate rule value
        """
        return pulumi.get(self, "cert_rule_val")

    @cert_rule_val.setter
    def cert_rule_val(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cert_rule_val", value)

    @_builtins.property
    @pulumi.getter(name="cisMtlsAppId")
    def cis_mtls_app_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "cis_mtls_app_id")

    @cis_mtls_app_id.setter
    def cis_mtls_app_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cis_mtls_app_id", value)

    @_builtins.property
    @pulumi.getter(name="commonRuleVal")
    def common_rule_val(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Policy common rule value
        """
        return pulumi.get(self, "common_rule_val")

    @common_rule_val.setter
    def common_rule_val(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "common_rule_val", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        App Name
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="policyDecision")
    def policy_decision(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Policy Action
        """
        return pulumi.get(self, "policy_decision")

    @policy_decision.setter
    def policy_decision(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "policy_decision", value)

    @_builtins.property
    @pulumi.getter(name="policyName")
    def policy_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Policy Name
        """
        return pulumi.get(self, "policy_name")

    @policy_name.setter
    def policy_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "policy_name", value)

    @_builtins.property
    @pulumi.getter(name="sessionDuration")
    def session_duration(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Duration for app validatidity
        """
        return pulumi.get(self, "session_duration")

    @session_duration.setter
    def session_duration(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "session_duration", value)


@pulumi.input_type
class _CisMtlsAppState:
    def __init__(__self__, *,
                 app_created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 app_id: Optional[pulumi.Input[_builtins.str]] = None,
                 app_updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 cert_rule_val: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_mtls_app_id: Optional[pulumi.Input[_builtins.str]] = None,
                 common_rule_val: Optional[pulumi.Input[_builtins.str]] = None,
                 domain: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 pol_created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 pol_updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_decision: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_id: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_name: Optional[pulumi.Input[_builtins.str]] = None,
                 session_duration: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering CisMtlsApp resources.
        :param pulumi.Input[_builtins.str] app_created_at: Certificate Created At
        :param pulumi.Input[_builtins.str] app_id: APP ID
        :param pulumi.Input[_builtins.str] app_updated_at: Certificate Updated At
        :param pulumi.Input[_builtins.str] cert_rule_val: Policy certificate rule value
        :param pulumi.Input[_builtins.str] cis_id: CIS instance crn
        :param pulumi.Input[_builtins.str] common_rule_val: Policy common rule value
        :param pulumi.Input[_builtins.str] domain: Associated host domain value
        :param pulumi.Input[_builtins.str] domain_id: Associated CIS domain
        :param pulumi.Input[_builtins.str] name: App Name
        :param pulumi.Input[_builtins.str] pol_created_at: Policy Created At
        :param pulumi.Input[_builtins.str] pol_updated_at: Policy updated At
        :param pulumi.Input[_builtins.str] policy_decision: Policy Action
        :param pulumi.Input[_builtins.str] policy_id: Policy ID
        :param pulumi.Input[_builtins.str] policy_name: Policy Name
        :param pulumi.Input[_builtins.str] session_duration: Duration for app validatidity
        """
        if app_created_at is not None:
            pulumi.set(__self__, "app_created_at", app_created_at)
        if app_id is not None:
            pulumi.set(__self__, "app_id", app_id)
        if app_updated_at is not None:
            pulumi.set(__self__, "app_updated_at", app_updated_at)
        if cert_rule_val is not None:
            pulumi.set(__self__, "cert_rule_val", cert_rule_val)
        if cis_id is not None:
            pulumi.set(__self__, "cis_id", cis_id)
        if cis_mtls_app_id is not None:
            pulumi.set(__self__, "cis_mtls_app_id", cis_mtls_app_id)
        if common_rule_val is not None:
            pulumi.set(__self__, "common_rule_val", common_rule_val)
        if domain is not None:
            pulumi.set(__self__, "domain", domain)
        if domain_id is not None:
            pulumi.set(__self__, "domain_id", domain_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if pol_created_at is not None:
            pulumi.set(__self__, "pol_created_at", pol_created_at)
        if pol_updated_at is not None:
            pulumi.set(__self__, "pol_updated_at", pol_updated_at)
        if policy_decision is not None:
            pulumi.set(__self__, "policy_decision", policy_decision)
        if policy_id is not None:
            pulumi.set(__self__, "policy_id", policy_id)
        if policy_name is not None:
            pulumi.set(__self__, "policy_name", policy_name)
        if session_duration is not None:
            pulumi.set(__self__, "session_duration", session_duration)

    @_builtins.property
    @pulumi.getter(name="appCreatedAt")
    def app_created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Certificate Created At
        """
        return pulumi.get(self, "app_created_at")

    @app_created_at.setter
    def app_created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "app_created_at", value)

    @_builtins.property
    @pulumi.getter(name="appId")
    def app_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        APP ID
        """
        return pulumi.get(self, "app_id")

    @app_id.setter
    def app_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "app_id", value)

    @_builtins.property
    @pulumi.getter(name="appUpdatedAt")
    def app_updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Certificate Updated At
        """
        return pulumi.get(self, "app_updated_at")

    @app_updated_at.setter
    def app_updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "app_updated_at", value)

    @_builtins.property
    @pulumi.getter(name="certRuleVal")
    def cert_rule_val(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Policy certificate rule value
        """
        return pulumi.get(self, "cert_rule_val")

    @cert_rule_val.setter
    def cert_rule_val(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cert_rule_val", value)

    @_builtins.property
    @pulumi.getter(name="cisId")
    def cis_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        CIS instance crn
        """
        return pulumi.get(self, "cis_id")

    @cis_id.setter
    def cis_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cis_id", value)

    @_builtins.property
    @pulumi.getter(name="cisMtlsAppId")
    def cis_mtls_app_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "cis_mtls_app_id")

    @cis_mtls_app_id.setter
    def cis_mtls_app_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cis_mtls_app_id", value)

    @_builtins.property
    @pulumi.getter(name="commonRuleVal")
    def common_rule_val(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Policy common rule value
        """
        return pulumi.get(self, "common_rule_val")

    @common_rule_val.setter
    def common_rule_val(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "common_rule_val", value)

    @_builtins.property
    @pulumi.getter
    def domain(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Associated host domain value
        """
        return pulumi.get(self, "domain")

    @domain.setter
    def domain(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "domain", value)

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Associated CIS domain
        """
        return pulumi.get(self, "domain_id")

    @domain_id.setter
    def domain_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "domain_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        App Name
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="polCreatedAt")
    def pol_created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Policy Created At
        """
        return pulumi.get(self, "pol_created_at")

    @pol_created_at.setter
    def pol_created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pol_created_at", value)

    @_builtins.property
    @pulumi.getter(name="polUpdatedAt")
    def pol_updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Policy updated At
        """
        return pulumi.get(self, "pol_updated_at")

    @pol_updated_at.setter
    def pol_updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pol_updated_at", value)

    @_builtins.property
    @pulumi.getter(name="policyDecision")
    def policy_decision(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Policy Action
        """
        return pulumi.get(self, "policy_decision")

    @policy_decision.setter
    def policy_decision(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "policy_decision", value)

    @_builtins.property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Policy ID
        """
        return pulumi.get(self, "policy_id")

    @policy_id.setter
    def policy_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "policy_id", value)

    @_builtins.property
    @pulumi.getter(name="policyName")
    def policy_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Policy Name
        """
        return pulumi.get(self, "policy_name")

    @policy_name.setter
    def policy_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "policy_name", value)

    @_builtins.property
    @pulumi.getter(name="sessionDuration")
    def session_duration(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Duration for app validatidity
        """
        return pulumi.get(self, "session_duration")

    @session_duration.setter
    def session_duration(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "session_duration", value)


@pulumi.type_token("ibm:index/cisMtlsApp:CisMtlsApp")
class CisMtlsApp(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cert_rule_val: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_mtls_app_id: Optional[pulumi.Input[_builtins.str]] = None,
                 common_rule_val: Optional[pulumi.Input[_builtins.str]] = None,
                 domain: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_decision: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_name: Optional[pulumi.Input[_builtins.str]] = None,
                 session_duration: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a CisMtlsApp resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] cert_rule_val: Policy certificate rule value
        :param pulumi.Input[_builtins.str] cis_id: CIS instance crn
        :param pulumi.Input[_builtins.str] common_rule_val: Policy common rule value
        :param pulumi.Input[_builtins.str] domain: Associated host domain value
        :param pulumi.Input[_builtins.str] domain_id: Associated CIS domain
        :param pulumi.Input[_builtins.str] name: App Name
        :param pulumi.Input[_builtins.str] policy_decision: Policy Action
        :param pulumi.Input[_builtins.str] policy_name: Policy Name
        :param pulumi.Input[_builtins.str] session_duration: Duration for app validatidity
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CisMtlsAppArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a CisMtlsApp resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param CisMtlsAppArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CisMtlsAppArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cert_rule_val: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cis_mtls_app_id: Optional[pulumi.Input[_builtins.str]] = None,
                 common_rule_val: Optional[pulumi.Input[_builtins.str]] = None,
                 domain: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_decision: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_name: Optional[pulumi.Input[_builtins.str]] = None,
                 session_duration: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CisMtlsAppArgs.__new__(CisMtlsAppArgs)

            __props__.__dict__["cert_rule_val"] = cert_rule_val
            if cis_id is None and not opts.urn:
                raise TypeError("Missing required property 'cis_id'")
            __props__.__dict__["cis_id"] = cis_id
            __props__.__dict__["cis_mtls_app_id"] = cis_mtls_app_id
            __props__.__dict__["common_rule_val"] = common_rule_val
            if domain is None and not opts.urn:
                raise TypeError("Missing required property 'domain'")
            __props__.__dict__["domain"] = domain
            if domain_id is None and not opts.urn:
                raise TypeError("Missing required property 'domain_id'")
            __props__.__dict__["domain_id"] = domain_id
            __props__.__dict__["name"] = name
            __props__.__dict__["policy_decision"] = policy_decision
            __props__.__dict__["policy_name"] = policy_name
            __props__.__dict__["session_duration"] = session_duration
            __props__.__dict__["app_created_at"] = None
            __props__.__dict__["app_id"] = None
            __props__.__dict__["app_updated_at"] = None
            __props__.__dict__["pol_created_at"] = None
            __props__.__dict__["pol_updated_at"] = None
            __props__.__dict__["policy_id"] = None
        super(CisMtlsApp, __self__).__init__(
            'ibm:index/cisMtlsApp:CisMtlsApp',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            app_created_at: Optional[pulumi.Input[_builtins.str]] = None,
            app_id: Optional[pulumi.Input[_builtins.str]] = None,
            app_updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            cert_rule_val: Optional[pulumi.Input[_builtins.str]] = None,
            cis_id: Optional[pulumi.Input[_builtins.str]] = None,
            cis_mtls_app_id: Optional[pulumi.Input[_builtins.str]] = None,
            common_rule_val: Optional[pulumi.Input[_builtins.str]] = None,
            domain: Optional[pulumi.Input[_builtins.str]] = None,
            domain_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            pol_created_at: Optional[pulumi.Input[_builtins.str]] = None,
            pol_updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            policy_decision: Optional[pulumi.Input[_builtins.str]] = None,
            policy_id: Optional[pulumi.Input[_builtins.str]] = None,
            policy_name: Optional[pulumi.Input[_builtins.str]] = None,
            session_duration: Optional[pulumi.Input[_builtins.str]] = None) -> 'CisMtlsApp':
        """
        Get an existing CisMtlsApp resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] app_created_at: Certificate Created At
        :param pulumi.Input[_builtins.str] app_id: APP ID
        :param pulumi.Input[_builtins.str] app_updated_at: Certificate Updated At
        :param pulumi.Input[_builtins.str] cert_rule_val: Policy certificate rule value
        :param pulumi.Input[_builtins.str] cis_id: CIS instance crn
        :param pulumi.Input[_builtins.str] common_rule_val: Policy common rule value
        :param pulumi.Input[_builtins.str] domain: Associated host domain value
        :param pulumi.Input[_builtins.str] domain_id: Associated CIS domain
        :param pulumi.Input[_builtins.str] name: App Name
        :param pulumi.Input[_builtins.str] pol_created_at: Policy Created At
        :param pulumi.Input[_builtins.str] pol_updated_at: Policy updated At
        :param pulumi.Input[_builtins.str] policy_decision: Policy Action
        :param pulumi.Input[_builtins.str] policy_id: Policy ID
        :param pulumi.Input[_builtins.str] policy_name: Policy Name
        :param pulumi.Input[_builtins.str] session_duration: Duration for app validatidity
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CisMtlsAppState.__new__(_CisMtlsAppState)

        __props__.__dict__["app_created_at"] = app_created_at
        __props__.__dict__["app_id"] = app_id
        __props__.__dict__["app_updated_at"] = app_updated_at
        __props__.__dict__["cert_rule_val"] = cert_rule_val
        __props__.__dict__["cis_id"] = cis_id
        __props__.__dict__["cis_mtls_app_id"] = cis_mtls_app_id
        __props__.__dict__["common_rule_val"] = common_rule_val
        __props__.__dict__["domain"] = domain
        __props__.__dict__["domain_id"] = domain_id
        __props__.__dict__["name"] = name
        __props__.__dict__["pol_created_at"] = pol_created_at
        __props__.__dict__["pol_updated_at"] = pol_updated_at
        __props__.__dict__["policy_decision"] = policy_decision
        __props__.__dict__["policy_id"] = policy_id
        __props__.__dict__["policy_name"] = policy_name
        __props__.__dict__["session_duration"] = session_duration
        return CisMtlsApp(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="appCreatedAt")
    def app_created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Certificate Created At
        """
        return pulumi.get(self, "app_created_at")

    @_builtins.property
    @pulumi.getter(name="appId")
    def app_id(self) -> pulumi.Output[_builtins.str]:
        """
        APP ID
        """
        return pulumi.get(self, "app_id")

    @_builtins.property
    @pulumi.getter(name="appUpdatedAt")
    def app_updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Certificate Updated At
        """
        return pulumi.get(self, "app_updated_at")

    @_builtins.property
    @pulumi.getter(name="certRuleVal")
    def cert_rule_val(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Policy certificate rule value
        """
        return pulumi.get(self, "cert_rule_val")

    @_builtins.property
    @pulumi.getter(name="cisId")
    def cis_id(self) -> pulumi.Output[_builtins.str]:
        """
        CIS instance crn
        """
        return pulumi.get(self, "cis_id")

    @_builtins.property
    @pulumi.getter(name="cisMtlsAppId")
    def cis_mtls_app_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "cis_mtls_app_id")

    @_builtins.property
    @pulumi.getter(name="commonRuleVal")
    def common_rule_val(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Policy common rule value
        """
        return pulumi.get(self, "common_rule_val")

    @_builtins.property
    @pulumi.getter
    def domain(self) -> pulumi.Output[_builtins.str]:
        """
        Associated host domain value
        """
        return pulumi.get(self, "domain")

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> pulumi.Output[_builtins.str]:
        """
        Associated CIS domain
        """
        return pulumi.get(self, "domain_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        App Name
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="polCreatedAt")
    def pol_created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Policy Created At
        """
        return pulumi.get(self, "pol_created_at")

    @_builtins.property
    @pulumi.getter(name="polUpdatedAt")
    def pol_updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Policy updated At
        """
        return pulumi.get(self, "pol_updated_at")

    @_builtins.property
    @pulumi.getter(name="policyDecision")
    def policy_decision(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Policy Action
        """
        return pulumi.get(self, "policy_decision")

    @_builtins.property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> pulumi.Output[_builtins.str]:
        """
        Policy ID
        """
        return pulumi.get(self, "policy_id")

    @_builtins.property
    @pulumi.getter(name="policyName")
    def policy_name(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Policy Name
        """
        return pulumi.get(self, "policy_name")

    @_builtins.property
    @pulumi.getter(name="sessionDuration")
    def session_duration(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Duration for app validatidity
        """
        return pulumi.get(self, "session_duration")

