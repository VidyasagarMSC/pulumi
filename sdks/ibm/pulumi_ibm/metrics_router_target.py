# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['MetricsRouterTargetArgs', 'MetricsRouterTarget']

@pulumi.input_type
class MetricsRouterTargetArgs:
    def __init__(__self__, *,
                 destination_crn: pulumi.Input[_builtins.str],
                 metrics_router_target_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a MetricsRouterTarget resource.
        :param pulumi.Input[_builtins.str] destination_crn: The CRN of a destination service instance or resource. Ensure you have a service authorization between IBM Cloud Metrics
               Routing and your Cloud resource. Read [S2S
               authorization](https://cloud.ibm.com/docs/metrics-router?topic=metrics-router-target-monitoring&interface=ui#target-monitoring-ui)
               for details.
        :param pulumi.Input[_builtins.str] name: The name of the target. The name must be 1000 characters or less, and cannot include any special characters other than
               `(space) - . _ :`. Do not include any personal identifying information (PII) in any resource names.
        :param pulumi.Input[_builtins.str] region: Include this optional field if you want to create a target in a different region other than the one you are connected.
        """
        pulumi.set(__self__, "destination_crn", destination_crn)
        if metrics_router_target_id is not None:
            pulumi.set(__self__, "metrics_router_target_id", metrics_router_target_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="destinationCrn")
    def destination_crn(self) -> pulumi.Input[_builtins.str]:
        """
        The CRN of a destination service instance or resource. Ensure you have a service authorization between IBM Cloud Metrics
        Routing and your Cloud resource. Read [S2S
        authorization](https://cloud.ibm.com/docs/metrics-router?topic=metrics-router-target-monitoring&interface=ui#target-monitoring-ui)
        for details.
        """
        return pulumi.get(self, "destination_crn")

    @destination_crn.setter
    def destination_crn(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "destination_crn", value)

    @_builtins.property
    @pulumi.getter(name="metricsRouterTargetId")
    def metrics_router_target_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "metrics_router_target_id")

    @metrics_router_target_id.setter
    def metrics_router_target_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "metrics_router_target_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the target. The name must be 1000 characters or less, and cannot include any special characters other than
        `(space) - . _ :`. Do not include any personal identifying information (PII) in any resource names.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Include this optional field if you want to create a target in a different region other than the one you are connected.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _MetricsRouterTargetState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_crn: Optional[pulumi.Input[_builtins.str]] = None,
                 metrics_router_target_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 target_type: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering MetricsRouterTarget resources.
        :param pulumi.Input[_builtins.str] created_at: The timestamp of the target creation time.
        :param pulumi.Input[_builtins.str] crn: The crn of the target resource.
        :param pulumi.Input[_builtins.str] destination_crn: The CRN of a destination service instance or resource. Ensure you have a service authorization between IBM Cloud Metrics
               Routing and your Cloud resource. Read [S2S
               authorization](https://cloud.ibm.com/docs/metrics-router?topic=metrics-router-target-monitoring&interface=ui#target-monitoring-ui)
               for details.
        :param pulumi.Input[_builtins.str] name: The name of the target. The name must be 1000 characters or less, and cannot include any special characters other than
               `(space) - . _ :`. Do not include any personal identifying information (PII) in any resource names.
        :param pulumi.Input[_builtins.str] region: Include this optional field if you want to create a target in a different region other than the one you are connected.
        :param pulumi.Input[_builtins.str] target_type: The type of the target.
        :param pulumi.Input[_builtins.str] updated_at: The timestamp of the target last updated time.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if crn is not None:
            pulumi.set(__self__, "crn", crn)
        if destination_crn is not None:
            pulumi.set(__self__, "destination_crn", destination_crn)
        if metrics_router_target_id is not None:
            pulumi.set(__self__, "metrics_router_target_id", metrics_router_target_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if target_type is not None:
            pulumi.set(__self__, "target_type", target_type)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The timestamp of the target creation time.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The crn of the target resource.
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter(name="destinationCrn")
    def destination_crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The CRN of a destination service instance or resource. Ensure you have a service authorization between IBM Cloud Metrics
        Routing and your Cloud resource. Read [S2S
        authorization](https://cloud.ibm.com/docs/metrics-router?topic=metrics-router-target-monitoring&interface=ui#target-monitoring-ui)
        for details.
        """
        return pulumi.get(self, "destination_crn")

    @destination_crn.setter
    def destination_crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "destination_crn", value)

    @_builtins.property
    @pulumi.getter(name="metricsRouterTargetId")
    def metrics_router_target_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "metrics_router_target_id")

    @metrics_router_target_id.setter
    def metrics_router_target_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "metrics_router_target_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the target. The name must be 1000 characters or less, and cannot include any special characters other than
        `(space) - . _ :`. Do not include any personal identifying information (PII) in any resource names.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Include this optional field if you want to create a target in a different region other than the one you are connected.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="targetType")
    def target_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The type of the target.
        """
        return pulumi.get(self, "target_type")

    @target_type.setter
    def target_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_type", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The timestamp of the target last updated time.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("ibm:index/metricsRouterTarget:MetricsRouterTarget")
class MetricsRouterTarget(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 destination_crn: Optional[pulumi.Input[_builtins.str]] = None,
                 metrics_router_target_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a MetricsRouterTarget resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] destination_crn: The CRN of a destination service instance or resource. Ensure you have a service authorization between IBM Cloud Metrics
               Routing and your Cloud resource. Read [S2S
               authorization](https://cloud.ibm.com/docs/metrics-router?topic=metrics-router-target-monitoring&interface=ui#target-monitoring-ui)
               for details.
        :param pulumi.Input[_builtins.str] name: The name of the target. The name must be 1000 characters or less, and cannot include any special characters other than
               `(space) - . _ :`. Do not include any personal identifying information (PII) in any resource names.
        :param pulumi.Input[_builtins.str] region: Include this optional field if you want to create a target in a different region other than the one you are connected.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: MetricsRouterTargetArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a MetricsRouterTarget resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param MetricsRouterTargetArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(MetricsRouterTargetArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 destination_crn: Optional[pulumi.Input[_builtins.str]] = None,
                 metrics_router_target_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = MetricsRouterTargetArgs.__new__(MetricsRouterTargetArgs)

            if destination_crn is None and not opts.urn:
                raise TypeError("Missing required property 'destination_crn'")
            __props__.__dict__["destination_crn"] = destination_crn
            __props__.__dict__["metrics_router_target_id"] = metrics_router_target_id
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["created_at"] = None
            __props__.__dict__["crn"] = None
            __props__.__dict__["target_type"] = None
            __props__.__dict__["updated_at"] = None
        super(MetricsRouterTarget, __self__).__init__(
            'ibm:index/metricsRouterTarget:MetricsRouterTarget',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            crn: Optional[pulumi.Input[_builtins.str]] = None,
            destination_crn: Optional[pulumi.Input[_builtins.str]] = None,
            metrics_router_target_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            target_type: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'MetricsRouterTarget':
        """
        Get an existing MetricsRouterTarget resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: The timestamp of the target creation time.
        :param pulumi.Input[_builtins.str] crn: The crn of the target resource.
        :param pulumi.Input[_builtins.str] destination_crn: The CRN of a destination service instance or resource. Ensure you have a service authorization between IBM Cloud Metrics
               Routing and your Cloud resource. Read [S2S
               authorization](https://cloud.ibm.com/docs/metrics-router?topic=metrics-router-target-monitoring&interface=ui#target-monitoring-ui)
               for details.
        :param pulumi.Input[_builtins.str] name: The name of the target. The name must be 1000 characters or less, and cannot include any special characters other than
               `(space) - . _ :`. Do not include any personal identifying information (PII) in any resource names.
        :param pulumi.Input[_builtins.str] region: Include this optional field if you want to create a target in a different region other than the one you are connected.
        :param pulumi.Input[_builtins.str] target_type: The type of the target.
        :param pulumi.Input[_builtins.str] updated_at: The timestamp of the target last updated time.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _MetricsRouterTargetState.__new__(_MetricsRouterTargetState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["crn"] = crn
        __props__.__dict__["destination_crn"] = destination_crn
        __props__.__dict__["metrics_router_target_id"] = metrics_router_target_id
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["target_type"] = target_type
        __props__.__dict__["updated_at"] = updated_at
        return MetricsRouterTarget(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The timestamp of the target creation time.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Output[_builtins.str]:
        """
        The crn of the target resource.
        """
        return pulumi.get(self, "crn")

    @_builtins.property
    @pulumi.getter(name="destinationCrn")
    def destination_crn(self) -> pulumi.Output[_builtins.str]:
        """
        The CRN of a destination service instance or resource. Ensure you have a service authorization between IBM Cloud Metrics
        Routing and your Cloud resource. Read [S2S
        authorization](https://cloud.ibm.com/docs/metrics-router?topic=metrics-router-target-monitoring&interface=ui#target-monitoring-ui)
        for details.
        """
        return pulumi.get(self, "destination_crn")

    @_builtins.property
    @pulumi.getter(name="metricsRouterTargetId")
    def metrics_router_target_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "metrics_router_target_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the target. The name must be 1000 characters or less, and cannot include any special characters other than
        `(space) - . _ :`. Do not include any personal identifying information (PII) in any resource names.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Include this optional field if you want to create a target in a different region other than the one you are connected.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="targetType")
    def target_type(self) -> pulumi.Output[_builtins.str]:
        """
        The type of the target.
        """
        return pulumi.get(self, "target_type")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The timestamp of the target last updated time.
        """
        return pulumi.get(self, "updated_at")

