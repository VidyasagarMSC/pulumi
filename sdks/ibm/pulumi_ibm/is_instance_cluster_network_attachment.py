# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IsInstanceClusterNetworkAttachmentInitArgs', 'IsInstanceClusterNetworkAttachment']

@pulumi.input_type
class IsInstanceClusterNetworkAttachmentInitArgs:
    def __init__(__self__, *,
                 cluster_network_interface: pulumi.Input['IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgs'],
                 instance_id: pulumi.Input[_builtins.str],
                 before: Optional[pulumi.Input['IsInstanceClusterNetworkAttachmentBeforeArgs']] = None,
                 is_instance_cluster_network_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a IsInstanceClusterNetworkAttachment resource.
        :param pulumi.Input['IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgs'] cluster_network_interface: The cluster network interface for this instance cluster network attachment.
        :param pulumi.Input[_builtins.str] instance_id: The virtual server instance identifier.
        :param pulumi.Input['IsInstanceClusterNetworkAttachmentBeforeArgs'] before: The instance cluster network attachment that is immediately before. If absent, this is thelast instance cluster network
               attachment.
        :param pulumi.Input[_builtins.str] name: The name for this instance cluster network attachment. The name is unique across all network attachments for the
               instance.
        """
        pulumi.set(__self__, "cluster_network_interface", cluster_network_interface)
        pulumi.set(__self__, "instance_id", instance_id)
        if before is not None:
            pulumi.set(__self__, "before", before)
        if is_instance_cluster_network_attachment_id is not None:
            pulumi.set(__self__, "is_instance_cluster_network_attachment_id", is_instance_cluster_network_attachment_id)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="clusterNetworkInterface")
    def cluster_network_interface(self) -> pulumi.Input['IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgs']:
        """
        The cluster network interface for this instance cluster network attachment.
        """
        return pulumi.get(self, "cluster_network_interface")

    @cluster_network_interface.setter
    def cluster_network_interface(self, value: pulumi.Input['IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgs']):
        pulumi.set(self, "cluster_network_interface", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        The virtual server instance identifier.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def before(self) -> Optional[pulumi.Input['IsInstanceClusterNetworkAttachmentBeforeArgs']]:
        """
        The instance cluster network attachment that is immediately before. If absent, this is thelast instance cluster network
        attachment.
        """
        return pulumi.get(self, "before")

    @before.setter
    def before(self, value: Optional[pulumi.Input['IsInstanceClusterNetworkAttachmentBeforeArgs']]):
        pulumi.set(self, "before", value)

    @_builtins.property
    @pulumi.getter(name="isInstanceClusterNetworkAttachmentId")
    def is_instance_cluster_network_attachment_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "is_instance_cluster_network_attachment_id")

    @is_instance_cluster_network_attachment_id.setter
    def is_instance_cluster_network_attachment_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "is_instance_cluster_network_attachment_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name for this instance cluster network attachment. The name is unique across all network attachments for the
        instance.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _IsInstanceClusterNetworkAttachmentState:
    def __init__(__self__, *,
                 before: Optional[pulumi.Input['IsInstanceClusterNetworkAttachmentBeforeArgs']] = None,
                 cluster_network_interface: Optional[pulumi.Input['IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgs']] = None,
                 href: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_cluster_network_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_instance_cluster_network_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lifecycle_reasons: Optional[pulumi.Input[Sequence[pulumi.Input['IsInstanceClusterNetworkAttachmentLifecycleReasonArgs']]]] = None,
                 lifecycle_state: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_type: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering IsInstanceClusterNetworkAttachment resources.
        :param pulumi.Input['IsInstanceClusterNetworkAttachmentBeforeArgs'] before: The instance cluster network attachment that is immediately before. If absent, this is thelast instance cluster network
               attachment.
        :param pulumi.Input['IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgs'] cluster_network_interface: The cluster network interface for this instance cluster network attachment.
        :param pulumi.Input[_builtins.str] href: The URL for this instance cluster network attachment.
        :param pulumi.Input[_builtins.str] instance_cluster_network_attachment_id: The unique identifier for this instance cluster network attachment.
        :param pulumi.Input[_builtins.str] instance_id: The virtual server instance identifier.
        :param pulumi.Input[Sequence[pulumi.Input['IsInstanceClusterNetworkAttachmentLifecycleReasonArgs']]] lifecycle_reasons: The reasons for the current `lifecycle_state` (if any).
        :param pulumi.Input[_builtins.str] lifecycle_state: The lifecycle state of the instance cluster network attachment.
        :param pulumi.Input[_builtins.str] name: The name for this instance cluster network attachment. The name is unique across all network attachments for the
               instance.
        :param pulumi.Input[_builtins.str] resource_type: The resource type.
        """
        if before is not None:
            pulumi.set(__self__, "before", before)
        if cluster_network_interface is not None:
            pulumi.set(__self__, "cluster_network_interface", cluster_network_interface)
        if href is not None:
            pulumi.set(__self__, "href", href)
        if instance_cluster_network_attachment_id is not None:
            pulumi.set(__self__, "instance_cluster_network_attachment_id", instance_cluster_network_attachment_id)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if is_instance_cluster_network_attachment_id is not None:
            pulumi.set(__self__, "is_instance_cluster_network_attachment_id", is_instance_cluster_network_attachment_id)
        if lifecycle_reasons is not None:
            pulumi.set(__self__, "lifecycle_reasons", lifecycle_reasons)
        if lifecycle_state is not None:
            pulumi.set(__self__, "lifecycle_state", lifecycle_state)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if resource_type is not None:
            pulumi.set(__self__, "resource_type", resource_type)

    @_builtins.property
    @pulumi.getter
    def before(self) -> Optional[pulumi.Input['IsInstanceClusterNetworkAttachmentBeforeArgs']]:
        """
        The instance cluster network attachment that is immediately before. If absent, this is thelast instance cluster network
        attachment.
        """
        return pulumi.get(self, "before")

    @before.setter
    def before(self, value: Optional[pulumi.Input['IsInstanceClusterNetworkAttachmentBeforeArgs']]):
        pulumi.set(self, "before", value)

    @_builtins.property
    @pulumi.getter(name="clusterNetworkInterface")
    def cluster_network_interface(self) -> Optional[pulumi.Input['IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgs']]:
        """
        The cluster network interface for this instance cluster network attachment.
        """
        return pulumi.get(self, "cluster_network_interface")

    @cluster_network_interface.setter
    def cluster_network_interface(self, value: Optional[pulumi.Input['IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgs']]):
        pulumi.set(self, "cluster_network_interface", value)

    @_builtins.property
    @pulumi.getter
    def href(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL for this instance cluster network attachment.
        """
        return pulumi.get(self, "href")

    @href.setter
    def href(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "href", value)

    @_builtins.property
    @pulumi.getter(name="instanceClusterNetworkAttachmentId")
    def instance_cluster_network_attachment_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique identifier for this instance cluster network attachment.
        """
        return pulumi.get(self, "instance_cluster_network_attachment_id")

    @instance_cluster_network_attachment_id.setter
    def instance_cluster_network_attachment_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_cluster_network_attachment_id", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The virtual server instance identifier.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="isInstanceClusterNetworkAttachmentId")
    def is_instance_cluster_network_attachment_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "is_instance_cluster_network_attachment_id")

    @is_instance_cluster_network_attachment_id.setter
    def is_instance_cluster_network_attachment_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "is_instance_cluster_network_attachment_id", value)

    @_builtins.property
    @pulumi.getter(name="lifecycleReasons")
    def lifecycle_reasons(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IsInstanceClusterNetworkAttachmentLifecycleReasonArgs']]]]:
        """
        The reasons for the current `lifecycle_state` (if any).
        """
        return pulumi.get(self, "lifecycle_reasons")

    @lifecycle_reasons.setter
    def lifecycle_reasons(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IsInstanceClusterNetworkAttachmentLifecycleReasonArgs']]]]):
        pulumi.set(self, "lifecycle_reasons", value)

    @_builtins.property
    @pulumi.getter(name="lifecycleState")
    def lifecycle_state(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The lifecycle state of the instance cluster network attachment.
        """
        return pulumi.get(self, "lifecycle_state")

    @lifecycle_state.setter
    def lifecycle_state(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lifecycle_state", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name for this instance cluster network attachment. The name is unique across all network attachments for the
        instance.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The resource type.
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_type", value)


@pulumi.type_token("ibm:index/isInstanceClusterNetworkAttachment:IsInstanceClusterNetworkAttachment")
class IsInstanceClusterNetworkAttachment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 before: Optional[pulumi.Input[Union['IsInstanceClusterNetworkAttachmentBeforeArgs', 'IsInstanceClusterNetworkAttachmentBeforeArgsDict']]] = None,
                 cluster_network_interface: Optional[pulumi.Input[Union['IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgs', 'IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgsDict']]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_instance_cluster_network_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a IsInstanceClusterNetworkAttachment resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['IsInstanceClusterNetworkAttachmentBeforeArgs', 'IsInstanceClusterNetworkAttachmentBeforeArgsDict']] before: The instance cluster network attachment that is immediately before. If absent, this is thelast instance cluster network
               attachment.
        :param pulumi.Input[Union['IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgs', 'IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgsDict']] cluster_network_interface: The cluster network interface for this instance cluster network attachment.
        :param pulumi.Input[_builtins.str] instance_id: The virtual server instance identifier.
        :param pulumi.Input[_builtins.str] name: The name for this instance cluster network attachment. The name is unique across all network attachments for the
               instance.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IsInstanceClusterNetworkAttachmentInitArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a IsInstanceClusterNetworkAttachment resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param IsInstanceClusterNetworkAttachmentInitArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IsInstanceClusterNetworkAttachmentInitArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 before: Optional[pulumi.Input[Union['IsInstanceClusterNetworkAttachmentBeforeArgs', 'IsInstanceClusterNetworkAttachmentBeforeArgsDict']]] = None,
                 cluster_network_interface: Optional[pulumi.Input[Union['IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgs', 'IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgsDict']]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_instance_cluster_network_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IsInstanceClusterNetworkAttachmentInitArgs.__new__(IsInstanceClusterNetworkAttachmentInitArgs)

            __props__.__dict__["before"] = before
            if cluster_network_interface is None and not opts.urn:
                raise TypeError("Missing required property 'cluster_network_interface'")
            __props__.__dict__["cluster_network_interface"] = cluster_network_interface
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["is_instance_cluster_network_attachment_id"] = is_instance_cluster_network_attachment_id
            __props__.__dict__["name"] = name
            __props__.__dict__["href"] = None
            __props__.__dict__["instance_cluster_network_attachment_id"] = None
            __props__.__dict__["lifecycle_reasons"] = None
            __props__.__dict__["lifecycle_state"] = None
            __props__.__dict__["resource_type"] = None
        super(IsInstanceClusterNetworkAttachment, __self__).__init__(
            'ibm:index/isInstanceClusterNetworkAttachment:IsInstanceClusterNetworkAttachment',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            before: Optional[pulumi.Input[Union['IsInstanceClusterNetworkAttachmentBeforeArgs', 'IsInstanceClusterNetworkAttachmentBeforeArgsDict']]] = None,
            cluster_network_interface: Optional[pulumi.Input[Union['IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgs', 'IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgsDict']]] = None,
            href: Optional[pulumi.Input[_builtins.str]] = None,
            instance_cluster_network_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            is_instance_cluster_network_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
            lifecycle_reasons: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IsInstanceClusterNetworkAttachmentLifecycleReasonArgs', 'IsInstanceClusterNetworkAttachmentLifecycleReasonArgsDict']]]]] = None,
            lifecycle_state: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            resource_type: Optional[pulumi.Input[_builtins.str]] = None) -> 'IsInstanceClusterNetworkAttachment':
        """
        Get an existing IsInstanceClusterNetworkAttachment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['IsInstanceClusterNetworkAttachmentBeforeArgs', 'IsInstanceClusterNetworkAttachmentBeforeArgsDict']] before: The instance cluster network attachment that is immediately before. If absent, this is thelast instance cluster network
               attachment.
        :param pulumi.Input[Union['IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgs', 'IsInstanceClusterNetworkAttachmentClusterNetworkInterfaceArgsDict']] cluster_network_interface: The cluster network interface for this instance cluster network attachment.
        :param pulumi.Input[_builtins.str] href: The URL for this instance cluster network attachment.
        :param pulumi.Input[_builtins.str] instance_cluster_network_attachment_id: The unique identifier for this instance cluster network attachment.
        :param pulumi.Input[_builtins.str] instance_id: The virtual server instance identifier.
        :param pulumi.Input[Sequence[pulumi.Input[Union['IsInstanceClusterNetworkAttachmentLifecycleReasonArgs', 'IsInstanceClusterNetworkAttachmentLifecycleReasonArgsDict']]]] lifecycle_reasons: The reasons for the current `lifecycle_state` (if any).
        :param pulumi.Input[_builtins.str] lifecycle_state: The lifecycle state of the instance cluster network attachment.
        :param pulumi.Input[_builtins.str] name: The name for this instance cluster network attachment. The name is unique across all network attachments for the
               instance.
        :param pulumi.Input[_builtins.str] resource_type: The resource type.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IsInstanceClusterNetworkAttachmentState.__new__(_IsInstanceClusterNetworkAttachmentState)

        __props__.__dict__["before"] = before
        __props__.__dict__["cluster_network_interface"] = cluster_network_interface
        __props__.__dict__["href"] = href
        __props__.__dict__["instance_cluster_network_attachment_id"] = instance_cluster_network_attachment_id
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["is_instance_cluster_network_attachment_id"] = is_instance_cluster_network_attachment_id
        __props__.__dict__["lifecycle_reasons"] = lifecycle_reasons
        __props__.__dict__["lifecycle_state"] = lifecycle_state
        __props__.__dict__["name"] = name
        __props__.__dict__["resource_type"] = resource_type
        return IsInstanceClusterNetworkAttachment(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def before(self) -> pulumi.Output[Optional['outputs.IsInstanceClusterNetworkAttachmentBefore']]:
        """
        The instance cluster network attachment that is immediately before. If absent, this is thelast instance cluster network
        attachment.
        """
        return pulumi.get(self, "before")

    @_builtins.property
    @pulumi.getter(name="clusterNetworkInterface")
    def cluster_network_interface(self) -> pulumi.Output['outputs.IsInstanceClusterNetworkAttachmentClusterNetworkInterface']:
        """
        The cluster network interface for this instance cluster network attachment.
        """
        return pulumi.get(self, "cluster_network_interface")

    @_builtins.property
    @pulumi.getter
    def href(self) -> pulumi.Output[_builtins.str]:
        """
        The URL for this instance cluster network attachment.
        """
        return pulumi.get(self, "href")

    @_builtins.property
    @pulumi.getter(name="instanceClusterNetworkAttachmentId")
    def instance_cluster_network_attachment_id(self) -> pulumi.Output[_builtins.str]:
        """
        The unique identifier for this instance cluster network attachment.
        """
        return pulumi.get(self, "instance_cluster_network_attachment_id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        The virtual server instance identifier.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter(name="isInstanceClusterNetworkAttachmentId")
    def is_instance_cluster_network_attachment_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "is_instance_cluster_network_attachment_id")

    @_builtins.property
    @pulumi.getter(name="lifecycleReasons")
    def lifecycle_reasons(self) -> pulumi.Output[Sequence['outputs.IsInstanceClusterNetworkAttachmentLifecycleReason']]:
        """
        The reasons for the current `lifecycle_state` (if any).
        """
        return pulumi.get(self, "lifecycle_reasons")

    @_builtins.property
    @pulumi.getter(name="lifecycleState")
    def lifecycle_state(self) -> pulumi.Output[_builtins.str]:
        """
        The lifecycle state of the instance cluster network attachment.
        """
        return pulumi.get(self, "lifecycle_state")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name for this instance cluster network attachment. The name is unique across all network attachments for the
        instance.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> pulumi.Output[_builtins.str]:
        """
        The resource type.
        """
        return pulumi.get(self, "resource_type")

