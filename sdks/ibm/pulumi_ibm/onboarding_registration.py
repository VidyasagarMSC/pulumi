# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['OnboardingRegistrationArgs', 'OnboardingRegistration']

@pulumi.input_type
class OnboardingRegistrationArgs:
    def __init__(__self__, *,
                 account_id: pulumi.Input[_builtins.str],
                 company_name: pulumi.Input[_builtins.str],
                 primary_contact: pulumi.Input['OnboardingRegistrationPrimaryContactArgs'],
                 default_private_catalog_id: Optional[pulumi.Input[_builtins.str]] = None,
                 onboarding_registration_id: Optional[pulumi.Input[_builtins.str]] = None,
                 provider_access_group: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a OnboardingRegistration resource.
        :param pulumi.Input[_builtins.str] account_id: The ID of your account.
        :param pulumi.Input[_builtins.str] company_name: The name of your company that is displayed in the IBM Cloud catalog.
        :param pulumi.Input['OnboardingRegistrationPrimaryContactArgs'] primary_contact: The primary contact for your product.
        :param pulumi.Input[_builtins.str] default_private_catalog_id: The default private catalog in which products are created.
        :param pulumi.Input[_builtins.str] provider_access_group: The onboarding access group for your team.
        """
        pulumi.set(__self__, "account_id", account_id)
        pulumi.set(__self__, "company_name", company_name)
        pulumi.set(__self__, "primary_contact", primary_contact)
        if default_private_catalog_id is not None:
            pulumi.set(__self__, "default_private_catalog_id", default_private_catalog_id)
        if onboarding_registration_id is not None:
            pulumi.set(__self__, "onboarding_registration_id", onboarding_registration_id)
        if provider_access_group is not None:
            pulumi.set(__self__, "provider_access_group", provider_access_group)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Input[_builtins.str]:
        """
        The ID of your account.
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "account_id", value)

    @_builtins.property
    @pulumi.getter(name="companyName")
    def company_name(self) -> pulumi.Input[_builtins.str]:
        """
        The name of your company that is displayed in the IBM Cloud catalog.
        """
        return pulumi.get(self, "company_name")

    @company_name.setter
    def company_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "company_name", value)

    @_builtins.property
    @pulumi.getter(name="primaryContact")
    def primary_contact(self) -> pulumi.Input['OnboardingRegistrationPrimaryContactArgs']:
        """
        The primary contact for your product.
        """
        return pulumi.get(self, "primary_contact")

    @primary_contact.setter
    def primary_contact(self, value: pulumi.Input['OnboardingRegistrationPrimaryContactArgs']):
        pulumi.set(self, "primary_contact", value)

    @_builtins.property
    @pulumi.getter(name="defaultPrivateCatalogId")
    def default_private_catalog_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The default private catalog in which products are created.
        """
        return pulumi.get(self, "default_private_catalog_id")

    @default_private_catalog_id.setter
    def default_private_catalog_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "default_private_catalog_id", value)

    @_builtins.property
    @pulumi.getter(name="onboardingRegistrationId")
    def onboarding_registration_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "onboarding_registration_id")

    @onboarding_registration_id.setter
    def onboarding_registration_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "onboarding_registration_id", value)

    @_builtins.property
    @pulumi.getter(name="providerAccessGroup")
    def provider_access_group(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The onboarding access group for your team.
        """
        return pulumi.get(self, "provider_access_group")

    @provider_access_group.setter
    def provider_access_group(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "provider_access_group", value)


@pulumi.input_type
class _OnboardingRegistrationState:
    def __init__(__self__, *,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 company_name: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 default_private_catalog_id: Optional[pulumi.Input[_builtins.str]] = None,
                 onboarding_registration_id: Optional[pulumi.Input[_builtins.str]] = None,
                 primary_contact: Optional[pulumi.Input['OnboardingRegistrationPrimaryContactArgs']] = None,
                 provider_access_group: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering OnboardingRegistration resources.
        :param pulumi.Input[_builtins.str] account_id: The ID of your account.
        :param pulumi.Input[_builtins.str] company_name: The name of your company that is displayed in the IBM Cloud catalog.
        :param pulumi.Input[_builtins.str] created_at: The time when the registration was created.
        :param pulumi.Input[_builtins.str] default_private_catalog_id: The default private catalog in which products are created.
        :param pulumi.Input['OnboardingRegistrationPrimaryContactArgs'] primary_contact: The primary contact for your product.
        :param pulumi.Input[_builtins.str] provider_access_group: The onboarding access group for your team.
        :param pulumi.Input[_builtins.str] updated_at: The time when the registration was updated.
        """
        if account_id is not None:
            pulumi.set(__self__, "account_id", account_id)
        if company_name is not None:
            pulumi.set(__self__, "company_name", company_name)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if default_private_catalog_id is not None:
            pulumi.set(__self__, "default_private_catalog_id", default_private_catalog_id)
        if onboarding_registration_id is not None:
            pulumi.set(__self__, "onboarding_registration_id", onboarding_registration_id)
        if primary_contact is not None:
            pulumi.set(__self__, "primary_contact", primary_contact)
        if provider_access_group is not None:
            pulumi.set(__self__, "provider_access_group", provider_access_group)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of your account.
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "account_id", value)

    @_builtins.property
    @pulumi.getter(name="companyName")
    def company_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of your company that is displayed in the IBM Cloud catalog.
        """
        return pulumi.get(self, "company_name")

    @company_name.setter
    def company_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "company_name", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time when the registration was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="defaultPrivateCatalogId")
    def default_private_catalog_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The default private catalog in which products are created.
        """
        return pulumi.get(self, "default_private_catalog_id")

    @default_private_catalog_id.setter
    def default_private_catalog_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "default_private_catalog_id", value)

    @_builtins.property
    @pulumi.getter(name="onboardingRegistrationId")
    def onboarding_registration_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "onboarding_registration_id")

    @onboarding_registration_id.setter
    def onboarding_registration_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "onboarding_registration_id", value)

    @_builtins.property
    @pulumi.getter(name="primaryContact")
    def primary_contact(self) -> Optional[pulumi.Input['OnboardingRegistrationPrimaryContactArgs']]:
        """
        The primary contact for your product.
        """
        return pulumi.get(self, "primary_contact")

    @primary_contact.setter
    def primary_contact(self, value: Optional[pulumi.Input['OnboardingRegistrationPrimaryContactArgs']]):
        pulumi.set(self, "primary_contact", value)

    @_builtins.property
    @pulumi.getter(name="providerAccessGroup")
    def provider_access_group(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The onboarding access group for your team.
        """
        return pulumi.get(self, "provider_access_group")

    @provider_access_group.setter
    def provider_access_group(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "provider_access_group", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time when the registration was updated.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("ibm:index/onboardingRegistration:OnboardingRegistration")
class OnboardingRegistration(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 company_name: Optional[pulumi.Input[_builtins.str]] = None,
                 default_private_catalog_id: Optional[pulumi.Input[_builtins.str]] = None,
                 onboarding_registration_id: Optional[pulumi.Input[_builtins.str]] = None,
                 primary_contact: Optional[pulumi.Input[Union['OnboardingRegistrationPrimaryContactArgs', 'OnboardingRegistrationPrimaryContactArgsDict']]] = None,
                 provider_access_group: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a OnboardingRegistration resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] account_id: The ID of your account.
        :param pulumi.Input[_builtins.str] company_name: The name of your company that is displayed in the IBM Cloud catalog.
        :param pulumi.Input[_builtins.str] default_private_catalog_id: The default private catalog in which products are created.
        :param pulumi.Input[Union['OnboardingRegistrationPrimaryContactArgs', 'OnboardingRegistrationPrimaryContactArgsDict']] primary_contact: The primary contact for your product.
        :param pulumi.Input[_builtins.str] provider_access_group: The onboarding access group for your team.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OnboardingRegistrationArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a OnboardingRegistration resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param OnboardingRegistrationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OnboardingRegistrationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 company_name: Optional[pulumi.Input[_builtins.str]] = None,
                 default_private_catalog_id: Optional[pulumi.Input[_builtins.str]] = None,
                 onboarding_registration_id: Optional[pulumi.Input[_builtins.str]] = None,
                 primary_contact: Optional[pulumi.Input[Union['OnboardingRegistrationPrimaryContactArgs', 'OnboardingRegistrationPrimaryContactArgsDict']]] = None,
                 provider_access_group: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OnboardingRegistrationArgs.__new__(OnboardingRegistrationArgs)

            if account_id is None and not opts.urn:
                raise TypeError("Missing required property 'account_id'")
            __props__.__dict__["account_id"] = account_id
            if company_name is None and not opts.urn:
                raise TypeError("Missing required property 'company_name'")
            __props__.__dict__["company_name"] = company_name
            __props__.__dict__["default_private_catalog_id"] = default_private_catalog_id
            __props__.__dict__["onboarding_registration_id"] = onboarding_registration_id
            if primary_contact is None and not opts.urn:
                raise TypeError("Missing required property 'primary_contact'")
            __props__.__dict__["primary_contact"] = primary_contact
            __props__.__dict__["provider_access_group"] = provider_access_group
            __props__.__dict__["created_at"] = None
            __props__.__dict__["updated_at"] = None
        super(OnboardingRegistration, __self__).__init__(
            'ibm:index/onboardingRegistration:OnboardingRegistration',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_id: Optional[pulumi.Input[_builtins.str]] = None,
            company_name: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            default_private_catalog_id: Optional[pulumi.Input[_builtins.str]] = None,
            onboarding_registration_id: Optional[pulumi.Input[_builtins.str]] = None,
            primary_contact: Optional[pulumi.Input[Union['OnboardingRegistrationPrimaryContactArgs', 'OnboardingRegistrationPrimaryContactArgsDict']]] = None,
            provider_access_group: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'OnboardingRegistration':
        """
        Get an existing OnboardingRegistration resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] account_id: The ID of your account.
        :param pulumi.Input[_builtins.str] company_name: The name of your company that is displayed in the IBM Cloud catalog.
        :param pulumi.Input[_builtins.str] created_at: The time when the registration was created.
        :param pulumi.Input[_builtins.str] default_private_catalog_id: The default private catalog in which products are created.
        :param pulumi.Input[Union['OnboardingRegistrationPrimaryContactArgs', 'OnboardingRegistrationPrimaryContactArgsDict']] primary_contact: The primary contact for your product.
        :param pulumi.Input[_builtins.str] provider_access_group: The onboarding access group for your team.
        :param pulumi.Input[_builtins.str] updated_at: The time when the registration was updated.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OnboardingRegistrationState.__new__(_OnboardingRegistrationState)

        __props__.__dict__["account_id"] = account_id
        __props__.__dict__["company_name"] = company_name
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["default_private_catalog_id"] = default_private_catalog_id
        __props__.__dict__["onboarding_registration_id"] = onboarding_registration_id
        __props__.__dict__["primary_contact"] = primary_contact
        __props__.__dict__["provider_access_group"] = provider_access_group
        __props__.__dict__["updated_at"] = updated_at
        return OnboardingRegistration(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of your account.
        """
        return pulumi.get(self, "account_id")

    @_builtins.property
    @pulumi.getter(name="companyName")
    def company_name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of your company that is displayed in the IBM Cloud catalog.
        """
        return pulumi.get(self, "company_name")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The time when the registration was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="defaultPrivateCatalogId")
    def default_private_catalog_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The default private catalog in which products are created.
        """
        return pulumi.get(self, "default_private_catalog_id")

    @_builtins.property
    @pulumi.getter(name="onboardingRegistrationId")
    def onboarding_registration_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "onboarding_registration_id")

    @_builtins.property
    @pulumi.getter(name="primaryContact")
    def primary_contact(self) -> pulumi.Output['outputs.OnboardingRegistrationPrimaryContact']:
        """
        The primary contact for your product.
        """
        return pulumi.get(self, "primary_contact")

    @_builtins.property
    @pulumi.getter(name="providerAccessGroup")
    def provider_access_group(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The onboarding access group for your team.
        """
        return pulumi.get(self, "provider_access_group")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The time when the registration was updated.
        """
        return pulumi.get(self, "updated_at")

