# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IamTrustedProfileTemplateAssignmentArgs', 'IamTrustedProfileTemplateAssignment']

@pulumi.input_type
class IamTrustedProfileTemplateAssignmentArgs:
    def __init__(__self__, *,
                 target: pulumi.Input[_builtins.str],
                 target_type: pulumi.Input[_builtins.str],
                 template_id: pulumi.Input[_builtins.str],
                 template_version: pulumi.Input[_builtins.float],
                 iam_trusted_profile_template_assignment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['IamTrustedProfileTemplateAssignmentTimeoutsArgs']] = None):
        """
        The set of arguments for constructing a IamTrustedProfileTemplateAssignment resource.
        :param pulumi.Input[_builtins.str] target: Assignment target.
        :param pulumi.Input[_builtins.str] target_type: Assignment target type.
        :param pulumi.Input[_builtins.str] template_id: Template Id.
        :param pulumi.Input[_builtins.float] template_version: Template version.
        """
        pulumi.set(__self__, "target", target)
        pulumi.set(__self__, "target_type", target_type)
        pulumi.set(__self__, "template_id", template_id)
        pulumi.set(__self__, "template_version", template_version)
        if iam_trusted_profile_template_assignment_id is not None:
            pulumi.set(__self__, "iam_trusted_profile_template_assignment_id", iam_trusted_profile_template_assignment_id)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)

    @_builtins.property
    @pulumi.getter
    def target(self) -> pulumi.Input[_builtins.str]:
        """
        Assignment target.
        """
        return pulumi.get(self, "target")

    @target.setter
    def target(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "target", value)

    @_builtins.property
    @pulumi.getter(name="targetType")
    def target_type(self) -> pulumi.Input[_builtins.str]:
        """
        Assignment target type.
        """
        return pulumi.get(self, "target_type")

    @target_type.setter
    def target_type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "target_type", value)

    @_builtins.property
    @pulumi.getter(name="templateId")
    def template_id(self) -> pulumi.Input[_builtins.str]:
        """
        Template Id.
        """
        return pulumi.get(self, "template_id")

    @template_id.setter
    def template_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "template_id", value)

    @_builtins.property
    @pulumi.getter(name="templateVersion")
    def template_version(self) -> pulumi.Input[_builtins.float]:
        """
        Template version.
        """
        return pulumi.get(self, "template_version")

    @template_version.setter
    def template_version(self, value: pulumi.Input[_builtins.float]):
        pulumi.set(self, "template_version", value)

    @_builtins.property
    @pulumi.getter(name="iamTrustedProfileTemplateAssignmentId")
    def iam_trusted_profile_template_assignment_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "iam_trusted_profile_template_assignment_id")

    @iam_trusted_profile_template_assignment_id.setter
    def iam_trusted_profile_template_assignment_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "iam_trusted_profile_template_assignment_id", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['IamTrustedProfileTemplateAssignmentTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['IamTrustedProfileTemplateAssignmentTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)


@pulumi.input_type
class _IamTrustedProfileTemplateAssignmentState:
    def __init__(__self__, *,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 contexts: Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateAssignmentContextArgs']]]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_by_id: Optional[pulumi.Input[_builtins.str]] = None,
                 entity_tag: Optional[pulumi.Input[_builtins.str]] = None,
                 histories: Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateAssignmentHistoryArgs']]]] = None,
                 href: Optional[pulumi.Input[_builtins.str]] = None,
                 iam_trusted_profile_template_assignment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 last_modified_at: Optional[pulumi.Input[_builtins.str]] = None,
                 last_modified_by_id: Optional[pulumi.Input[_builtins.str]] = None,
                 resources: Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateAssignmentResourceArgs']]]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 target: Optional[pulumi.Input[_builtins.str]] = None,
                 target_type: Optional[pulumi.Input[_builtins.str]] = None,
                 template_id: Optional[pulumi.Input[_builtins.str]] = None,
                 template_version: Optional[pulumi.Input[_builtins.float]] = None,
                 timeouts: Optional[pulumi.Input['IamTrustedProfileTemplateAssignmentTimeoutsArgs']] = None):
        """
        Input properties used for looking up and filtering IamTrustedProfileTemplateAssignment resources.
        :param pulumi.Input[_builtins.str] account_id: Enterprise account Id.
        :param pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateAssignmentContextArgs']]] contexts: Context with key properties for problem determination.
        :param pulumi.Input[_builtins.str] created_at: Assignment created at.
        :param pulumi.Input[_builtins.str] created_by_id: IAMid of the identity that created the assignment.
        :param pulumi.Input[_builtins.str] entity_tag: Entity tag for this assignment record.
        :param pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateAssignmentHistoryArgs']]] histories: Assignment history.
        :param pulumi.Input[_builtins.str] href: Href.
        :param pulumi.Input[_builtins.str] last_modified_at: Assignment modified at.
        :param pulumi.Input[_builtins.str] last_modified_by_id: IAMid of the identity that last modified the assignment.
        :param pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateAssignmentResourceArgs']]] resources: Status breakdown per target account of IAM resources created or errors encountered in attempting to create those IAM
               resources. IAM resources are only included in the response providing the assignment is not in progress. IAM resources
               are also only included when getting a single assignment, and excluded by list APIs.
        :param pulumi.Input[_builtins.str] status: Assignment status.
        :param pulumi.Input[_builtins.str] target: Assignment target.
        :param pulumi.Input[_builtins.str] target_type: Assignment target type.
        :param pulumi.Input[_builtins.str] template_id: Template Id.
        :param pulumi.Input[_builtins.float] template_version: Template version.
        """
        if account_id is not None:
            pulumi.set(__self__, "account_id", account_id)
        if contexts is not None:
            pulumi.set(__self__, "contexts", contexts)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by_id is not None:
            pulumi.set(__self__, "created_by_id", created_by_id)
        if entity_tag is not None:
            pulumi.set(__self__, "entity_tag", entity_tag)
        if histories is not None:
            pulumi.set(__self__, "histories", histories)
        if href is not None:
            pulumi.set(__self__, "href", href)
        if iam_trusted_profile_template_assignment_id is not None:
            pulumi.set(__self__, "iam_trusted_profile_template_assignment_id", iam_trusted_profile_template_assignment_id)
        if last_modified_at is not None:
            pulumi.set(__self__, "last_modified_at", last_modified_at)
        if last_modified_by_id is not None:
            pulumi.set(__self__, "last_modified_by_id", last_modified_by_id)
        if resources is not None:
            pulumi.set(__self__, "resources", resources)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if target is not None:
            pulumi.set(__self__, "target", target)
        if target_type is not None:
            pulumi.set(__self__, "target_type", target_type)
        if template_id is not None:
            pulumi.set(__self__, "template_id", template_id)
        if template_version is not None:
            pulumi.set(__self__, "template_version", template_version)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Enterprise account Id.
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "account_id", value)

    @_builtins.property
    @pulumi.getter
    def contexts(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateAssignmentContextArgs']]]]:
        """
        Context with key properties for problem determination.
        """
        return pulumi.get(self, "contexts")

    @contexts.setter
    def contexts(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateAssignmentContextArgs']]]]):
        pulumi.set(self, "contexts", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Assignment created at.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdById")
    def created_by_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IAMid of the identity that created the assignment.
        """
        return pulumi.get(self, "created_by_id")

    @created_by_id.setter
    def created_by_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_by_id", value)

    @_builtins.property
    @pulumi.getter(name="entityTag")
    def entity_tag(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Entity tag for this assignment record.
        """
        return pulumi.get(self, "entity_tag")

    @entity_tag.setter
    def entity_tag(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "entity_tag", value)

    @_builtins.property
    @pulumi.getter
    def histories(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateAssignmentHistoryArgs']]]]:
        """
        Assignment history.
        """
        return pulumi.get(self, "histories")

    @histories.setter
    def histories(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateAssignmentHistoryArgs']]]]):
        pulumi.set(self, "histories", value)

    @_builtins.property
    @pulumi.getter
    def href(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Href.
        """
        return pulumi.get(self, "href")

    @href.setter
    def href(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "href", value)

    @_builtins.property
    @pulumi.getter(name="iamTrustedProfileTemplateAssignmentId")
    def iam_trusted_profile_template_assignment_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "iam_trusted_profile_template_assignment_id")

    @iam_trusted_profile_template_assignment_id.setter
    def iam_trusted_profile_template_assignment_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "iam_trusted_profile_template_assignment_id", value)

    @_builtins.property
    @pulumi.getter(name="lastModifiedAt")
    def last_modified_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Assignment modified at.
        """
        return pulumi.get(self, "last_modified_at")

    @last_modified_at.setter
    def last_modified_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "last_modified_at", value)

    @_builtins.property
    @pulumi.getter(name="lastModifiedById")
    def last_modified_by_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IAMid of the identity that last modified the assignment.
        """
        return pulumi.get(self, "last_modified_by_id")

    @last_modified_by_id.setter
    def last_modified_by_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "last_modified_by_id", value)

    @_builtins.property
    @pulumi.getter
    def resources(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateAssignmentResourceArgs']]]]:
        """
        Status breakdown per target account of IAM resources created or errors encountered in attempting to create those IAM
        resources. IAM resources are only included in the response providing the assignment is not in progress. IAM resources
        are also only included when getting a single assignment, and excluded by list APIs.
        """
        return pulumi.get(self, "resources")

    @resources.setter
    def resources(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateAssignmentResourceArgs']]]]):
        pulumi.set(self, "resources", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Assignment status.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def target(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Assignment target.
        """
        return pulumi.get(self, "target")

    @target.setter
    def target(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target", value)

    @_builtins.property
    @pulumi.getter(name="targetType")
    def target_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Assignment target type.
        """
        return pulumi.get(self, "target_type")

    @target_type.setter
    def target_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_type", value)

    @_builtins.property
    @pulumi.getter(name="templateId")
    def template_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Template Id.
        """
        return pulumi.get(self, "template_id")

    @template_id.setter
    def template_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "template_id", value)

    @_builtins.property
    @pulumi.getter(name="templateVersion")
    def template_version(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Template version.
        """
        return pulumi.get(self, "template_version")

    @template_version.setter
    def template_version(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "template_version", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['IamTrustedProfileTemplateAssignmentTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['IamTrustedProfileTemplateAssignmentTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)


@pulumi.type_token("ibm:index/iamTrustedProfileTemplateAssignment:IamTrustedProfileTemplateAssignment")
class IamTrustedProfileTemplateAssignment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 iam_trusted_profile_template_assignment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target: Optional[pulumi.Input[_builtins.str]] = None,
                 target_type: Optional[pulumi.Input[_builtins.str]] = None,
                 template_id: Optional[pulumi.Input[_builtins.str]] = None,
                 template_version: Optional[pulumi.Input[_builtins.float]] = None,
                 timeouts: Optional[pulumi.Input[Union['IamTrustedProfileTemplateAssignmentTimeoutsArgs', 'IamTrustedProfileTemplateAssignmentTimeoutsArgsDict']]] = None,
                 __props__=None):
        """
        Create a IamTrustedProfileTemplateAssignment resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] target: Assignment target.
        :param pulumi.Input[_builtins.str] target_type: Assignment target type.
        :param pulumi.Input[_builtins.str] template_id: Template Id.
        :param pulumi.Input[_builtins.float] template_version: Template version.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IamTrustedProfileTemplateAssignmentArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a IamTrustedProfileTemplateAssignment resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param IamTrustedProfileTemplateAssignmentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IamTrustedProfileTemplateAssignmentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 iam_trusted_profile_template_assignment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target: Optional[pulumi.Input[_builtins.str]] = None,
                 target_type: Optional[pulumi.Input[_builtins.str]] = None,
                 template_id: Optional[pulumi.Input[_builtins.str]] = None,
                 template_version: Optional[pulumi.Input[_builtins.float]] = None,
                 timeouts: Optional[pulumi.Input[Union['IamTrustedProfileTemplateAssignmentTimeoutsArgs', 'IamTrustedProfileTemplateAssignmentTimeoutsArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IamTrustedProfileTemplateAssignmentArgs.__new__(IamTrustedProfileTemplateAssignmentArgs)

            __props__.__dict__["iam_trusted_profile_template_assignment_id"] = iam_trusted_profile_template_assignment_id
            if target is None and not opts.urn:
                raise TypeError("Missing required property 'target'")
            __props__.__dict__["target"] = target
            if target_type is None and not opts.urn:
                raise TypeError("Missing required property 'target_type'")
            __props__.__dict__["target_type"] = target_type
            if template_id is None and not opts.urn:
                raise TypeError("Missing required property 'template_id'")
            __props__.__dict__["template_id"] = template_id
            if template_version is None and not opts.urn:
                raise TypeError("Missing required property 'template_version'")
            __props__.__dict__["template_version"] = template_version
            __props__.__dict__["timeouts"] = timeouts
            __props__.__dict__["account_id"] = None
            __props__.__dict__["contexts"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_by_id"] = None
            __props__.__dict__["entity_tag"] = None
            __props__.__dict__["histories"] = None
            __props__.__dict__["href"] = None
            __props__.__dict__["last_modified_at"] = None
            __props__.__dict__["last_modified_by_id"] = None
            __props__.__dict__["resources"] = None
            __props__.__dict__["status"] = None
        super(IamTrustedProfileTemplateAssignment, __self__).__init__(
            'ibm:index/iamTrustedProfileTemplateAssignment:IamTrustedProfileTemplateAssignment',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_id: Optional[pulumi.Input[_builtins.str]] = None,
            contexts: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IamTrustedProfileTemplateAssignmentContextArgs', 'IamTrustedProfileTemplateAssignmentContextArgsDict']]]]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_by_id: Optional[pulumi.Input[_builtins.str]] = None,
            entity_tag: Optional[pulumi.Input[_builtins.str]] = None,
            histories: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IamTrustedProfileTemplateAssignmentHistoryArgs', 'IamTrustedProfileTemplateAssignmentHistoryArgsDict']]]]] = None,
            href: Optional[pulumi.Input[_builtins.str]] = None,
            iam_trusted_profile_template_assignment_id: Optional[pulumi.Input[_builtins.str]] = None,
            last_modified_at: Optional[pulumi.Input[_builtins.str]] = None,
            last_modified_by_id: Optional[pulumi.Input[_builtins.str]] = None,
            resources: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IamTrustedProfileTemplateAssignmentResourceArgs', 'IamTrustedProfileTemplateAssignmentResourceArgsDict']]]]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            target: Optional[pulumi.Input[_builtins.str]] = None,
            target_type: Optional[pulumi.Input[_builtins.str]] = None,
            template_id: Optional[pulumi.Input[_builtins.str]] = None,
            template_version: Optional[pulumi.Input[_builtins.float]] = None,
            timeouts: Optional[pulumi.Input[Union['IamTrustedProfileTemplateAssignmentTimeoutsArgs', 'IamTrustedProfileTemplateAssignmentTimeoutsArgsDict']]] = None) -> 'IamTrustedProfileTemplateAssignment':
        """
        Get an existing IamTrustedProfileTemplateAssignment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] account_id: Enterprise account Id.
        :param pulumi.Input[Sequence[pulumi.Input[Union['IamTrustedProfileTemplateAssignmentContextArgs', 'IamTrustedProfileTemplateAssignmentContextArgsDict']]]] contexts: Context with key properties for problem determination.
        :param pulumi.Input[_builtins.str] created_at: Assignment created at.
        :param pulumi.Input[_builtins.str] created_by_id: IAMid of the identity that created the assignment.
        :param pulumi.Input[_builtins.str] entity_tag: Entity tag for this assignment record.
        :param pulumi.Input[Sequence[pulumi.Input[Union['IamTrustedProfileTemplateAssignmentHistoryArgs', 'IamTrustedProfileTemplateAssignmentHistoryArgsDict']]]] histories: Assignment history.
        :param pulumi.Input[_builtins.str] href: Href.
        :param pulumi.Input[_builtins.str] last_modified_at: Assignment modified at.
        :param pulumi.Input[_builtins.str] last_modified_by_id: IAMid of the identity that last modified the assignment.
        :param pulumi.Input[Sequence[pulumi.Input[Union['IamTrustedProfileTemplateAssignmentResourceArgs', 'IamTrustedProfileTemplateAssignmentResourceArgsDict']]]] resources: Status breakdown per target account of IAM resources created or errors encountered in attempting to create those IAM
               resources. IAM resources are only included in the response providing the assignment is not in progress. IAM resources
               are also only included when getting a single assignment, and excluded by list APIs.
        :param pulumi.Input[_builtins.str] status: Assignment status.
        :param pulumi.Input[_builtins.str] target: Assignment target.
        :param pulumi.Input[_builtins.str] target_type: Assignment target type.
        :param pulumi.Input[_builtins.str] template_id: Template Id.
        :param pulumi.Input[_builtins.float] template_version: Template version.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IamTrustedProfileTemplateAssignmentState.__new__(_IamTrustedProfileTemplateAssignmentState)

        __props__.__dict__["account_id"] = account_id
        __props__.__dict__["contexts"] = contexts
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_by_id"] = created_by_id
        __props__.__dict__["entity_tag"] = entity_tag
        __props__.__dict__["histories"] = histories
        __props__.__dict__["href"] = href
        __props__.__dict__["iam_trusted_profile_template_assignment_id"] = iam_trusted_profile_template_assignment_id
        __props__.__dict__["last_modified_at"] = last_modified_at
        __props__.__dict__["last_modified_by_id"] = last_modified_by_id
        __props__.__dict__["resources"] = resources
        __props__.__dict__["status"] = status
        __props__.__dict__["target"] = target
        __props__.__dict__["target_type"] = target_type
        __props__.__dict__["template_id"] = template_id
        __props__.__dict__["template_version"] = template_version
        __props__.__dict__["timeouts"] = timeouts
        return IamTrustedProfileTemplateAssignment(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Output[_builtins.str]:
        """
        Enterprise account Id.
        """
        return pulumi.get(self, "account_id")

    @_builtins.property
    @pulumi.getter
    def contexts(self) -> pulumi.Output[Sequence['outputs.IamTrustedProfileTemplateAssignmentContext']]:
        """
        Context with key properties for problem determination.
        """
        return pulumi.get(self, "contexts")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Assignment created at.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdById")
    def created_by_id(self) -> pulumi.Output[_builtins.str]:
        """
        IAMid of the identity that created the assignment.
        """
        return pulumi.get(self, "created_by_id")

    @_builtins.property
    @pulumi.getter(name="entityTag")
    def entity_tag(self) -> pulumi.Output[_builtins.str]:
        """
        Entity tag for this assignment record.
        """
        return pulumi.get(self, "entity_tag")

    @_builtins.property
    @pulumi.getter
    def histories(self) -> pulumi.Output[Sequence['outputs.IamTrustedProfileTemplateAssignmentHistory']]:
        """
        Assignment history.
        """
        return pulumi.get(self, "histories")

    @_builtins.property
    @pulumi.getter
    def href(self) -> pulumi.Output[_builtins.str]:
        """
        Href.
        """
        return pulumi.get(self, "href")

    @_builtins.property
    @pulumi.getter(name="iamTrustedProfileTemplateAssignmentId")
    def iam_trusted_profile_template_assignment_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "iam_trusted_profile_template_assignment_id")

    @_builtins.property
    @pulumi.getter(name="lastModifiedAt")
    def last_modified_at(self) -> pulumi.Output[_builtins.str]:
        """
        Assignment modified at.
        """
        return pulumi.get(self, "last_modified_at")

    @_builtins.property
    @pulumi.getter(name="lastModifiedById")
    def last_modified_by_id(self) -> pulumi.Output[_builtins.str]:
        """
        IAMid of the identity that last modified the assignment.
        """
        return pulumi.get(self, "last_modified_by_id")

    @_builtins.property
    @pulumi.getter
    def resources(self) -> pulumi.Output[Sequence['outputs.IamTrustedProfileTemplateAssignmentResource']]:
        """
        Status breakdown per target account of IAM resources created or errors encountered in attempting to create those IAM
        resources. IAM resources are only included in the response providing the assignment is not in progress. IAM resources
        are also only included when getting a single assignment, and excluded by list APIs.
        """
        return pulumi.get(self, "resources")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        Assignment status.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def target(self) -> pulumi.Output[_builtins.str]:
        """
        Assignment target.
        """
        return pulumi.get(self, "target")

    @_builtins.property
    @pulumi.getter(name="targetType")
    def target_type(self) -> pulumi.Output[_builtins.str]:
        """
        Assignment target type.
        """
        return pulumi.get(self, "target_type")

    @_builtins.property
    @pulumi.getter(name="templateId")
    def template_id(self) -> pulumi.Output[_builtins.str]:
        """
        Template Id.
        """
        return pulumi.get(self, "template_id")

    @_builtins.property
    @pulumi.getter(name="templateVersion")
    def template_version(self) -> pulumi.Output[_builtins.float]:
        """
        Template version.
        """
        return pulumi.get(self, "template_version")

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> pulumi.Output[Optional['outputs.IamTrustedProfileTemplateAssignmentTimeouts']]:
        return pulumi.get(self, "timeouts")

