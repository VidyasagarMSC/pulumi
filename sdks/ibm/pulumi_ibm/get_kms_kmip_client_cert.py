# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetKmsKmipClientCertResult',
    'AwaitableGetKmsKmipClientCertResult',
    'get_kms_kmip_client_cert',
    'get_kms_kmip_client_cert_output',
]

@pulumi.output_type
class GetKmsKmipClientCertResult:
    """
    A collection of values returned by getKmsKmipClientCert.
    """
    def __init__(__self__, adapter_id=None, adapter_name=None, cert_id=None, certificate=None, created_at=None, created_by=None, endpoint_type=None, id=None, instance_id=None, name=None):
        if adapter_id and not isinstance(adapter_id, str):
            raise TypeError("Expected argument 'adapter_id' to be a str")
        pulumi.set(__self__, "adapter_id", adapter_id)
        if adapter_name and not isinstance(adapter_name, str):
            raise TypeError("Expected argument 'adapter_name' to be a str")
        pulumi.set(__self__, "adapter_name", adapter_name)
        if cert_id and not isinstance(cert_id, str):
            raise TypeError("Expected argument 'cert_id' to be a str")
        pulumi.set(__self__, "cert_id", cert_id)
        if certificate and not isinstance(certificate, str):
            raise TypeError("Expected argument 'certificate' to be a str")
        pulumi.set(__self__, "certificate", certificate)
        if created_at and not isinstance(created_at, str):
            raise TypeError("Expected argument 'created_at' to be a str")
        pulumi.set(__self__, "created_at", created_at)
        if created_by and not isinstance(created_by, str):
            raise TypeError("Expected argument 'created_by' to be a str")
        pulumi.set(__self__, "created_by", created_by)
        if endpoint_type and not isinstance(endpoint_type, str):
            raise TypeError("Expected argument 'endpoint_type' to be a str")
        pulumi.set(__self__, "endpoint_type", endpoint_type)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="adapterId")
    def adapter_id(self) -> _builtins.str:
        return pulumi.get(self, "adapter_id")

    @_builtins.property
    @pulumi.getter(name="adapterName")
    def adapter_name(self) -> _builtins.str:
        return pulumi.get(self, "adapter_name")

    @_builtins.property
    @pulumi.getter(name="certId")
    def cert_id(self) -> _builtins.str:
        return pulumi.get(self, "cert_id")

    @_builtins.property
    @pulumi.getter
    def certificate(self) -> _builtins.str:
        return pulumi.get(self, "certificate")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> _builtins.str:
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> _builtins.str:
        return pulumi.get(self, "created_by")

    @_builtins.property
    @pulumi.getter(name="endpointType")
    def endpoint_type(self) -> _builtins.str:
        return pulumi.get(self, "endpoint_type")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> _builtins.str:
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")


class AwaitableGetKmsKmipClientCertResult(GetKmsKmipClientCertResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetKmsKmipClientCertResult(
            adapter_id=self.adapter_id,
            adapter_name=self.adapter_name,
            cert_id=self.cert_id,
            certificate=self.certificate,
            created_at=self.created_at,
            created_by=self.created_by,
            endpoint_type=self.endpoint_type,
            id=self.id,
            instance_id=self.instance_id,
            name=self.name)


def get_kms_kmip_client_cert(adapter_id: Optional[_builtins.str] = None,
                             adapter_name: Optional[_builtins.str] = None,
                             cert_id: Optional[_builtins.str] = None,
                             endpoint_type: Optional[_builtins.str] = None,
                             id: Optional[_builtins.str] = None,
                             instance_id: Optional[_builtins.str] = None,
                             name: Optional[_builtins.str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetKmsKmipClientCertResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['adapterId'] = adapter_id
    __args__['adapterName'] = adapter_name
    __args__['certId'] = cert_id
    __args__['endpointType'] = endpoint_type
    __args__['id'] = id
    __args__['instanceId'] = instance_id
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getKmsKmipClientCert:getKmsKmipClientCert', __args__, opts=opts, typ=GetKmsKmipClientCertResult, package_ref=_utilities.get_package()).value

    return AwaitableGetKmsKmipClientCertResult(
        adapter_id=pulumi.get(__ret__, 'adapter_id'),
        adapter_name=pulumi.get(__ret__, 'adapter_name'),
        cert_id=pulumi.get(__ret__, 'cert_id'),
        certificate=pulumi.get(__ret__, 'certificate'),
        created_at=pulumi.get(__ret__, 'created_at'),
        created_by=pulumi.get(__ret__, 'created_by'),
        endpoint_type=pulumi.get(__ret__, 'endpoint_type'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        name=pulumi.get(__ret__, 'name'))
def get_kms_kmip_client_cert_output(adapter_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    adapter_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    cert_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    endpoint_type: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                                    name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetKmsKmipClientCertResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['adapterId'] = adapter_id
    __args__['adapterName'] = adapter_name
    __args__['certId'] = cert_id
    __args__['endpointType'] = endpoint_type
    __args__['id'] = id
    __args__['instanceId'] = instance_id
    __args__['name'] = name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getKmsKmipClientCert:getKmsKmipClientCert', __args__, opts=opts, typ=GetKmsKmipClientCertResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetKmsKmipClientCertResult(
        adapter_id=pulumi.get(__response__, 'adapter_id'),
        adapter_name=pulumi.get(__response__, 'adapter_name'),
        cert_id=pulumi.get(__response__, 'cert_id'),
        certificate=pulumi.get(__response__, 'certificate'),
        created_at=pulumi.get(__response__, 'created_at'),
        created_by=pulumi.get(__response__, 'created_by'),
        endpoint_type=pulumi.get(__response__, 'endpoint_type'),
        id=pulumi.get(__response__, 'id'),
        instance_id=pulumi.get(__response__, 'instance_id'),
        name=pulumi.get(__response__, 'name')))
