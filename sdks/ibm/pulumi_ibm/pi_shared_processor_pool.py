# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['PiSharedProcessorPoolArgs', 'PiSharedProcessorPool']

@pulumi.input_type
class PiSharedProcessorPoolArgs:
    def __init__(__self__, *,
                 pi_cloud_instance_id: pulumi.Input[_builtins.str],
                 pi_shared_processor_pool_host_group: pulumi.Input[_builtins.str],
                 pi_shared_processor_pool_name: pulumi.Input[_builtins.str],
                 pi_shared_processor_pool_reserved_cores: pulumi.Input[_builtins.float],
                 pi_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_placement_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_placement_groups: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 pi_user_tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 spp_placement_groups: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 timeouts: Optional[pulumi.Input['PiSharedProcessorPoolTimeoutsArgs']] = None):
        """
        The set of arguments for constructing a PiSharedProcessorPool resource.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_shared_processor_pool_host_group: Host group of the shared processor pool. Valid values are 'e980', 'e1080', 'e1180', 's922', 's1022' and 's1122'.
        :param pulumi.Input[_builtins.str] pi_shared_processor_pool_name: The name of the shared processor pool.
        :param pulumi.Input[_builtins.float] pi_shared_processor_pool_reserved_cores: The amount of reserved cores for the shared processor pool.
        :param pulumi.Input[_builtins.str] pi_host_id: The host id of a host in a host group (only available for dedicated hosts).
        :param pulumi.Input[_builtins.str] pi_shared_processor_pool_placement_group_id: The ID of the placement group the shared processor pool is created in.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] pi_shared_processor_pool_placement_groups: The list of shared processor pool placement groups that the shared processor pool is in.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] pi_user_tags: The user tags attached to this resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] spp_placement_groups: The list of shared processor pool placement groups that the shared processor pool is in.
        """
        pulumi.set(__self__, "pi_cloud_instance_id", pi_cloud_instance_id)
        pulumi.set(__self__, "pi_shared_processor_pool_host_group", pi_shared_processor_pool_host_group)
        pulumi.set(__self__, "pi_shared_processor_pool_name", pi_shared_processor_pool_name)
        pulumi.set(__self__, "pi_shared_processor_pool_reserved_cores", pi_shared_processor_pool_reserved_cores)
        if pi_host_id is not None:
            pulumi.set(__self__, "pi_host_id", pi_host_id)
        if pi_shared_processor_pool_id is not None:
            pulumi.set(__self__, "pi_shared_processor_pool_id", pi_shared_processor_pool_id)
        if pi_shared_processor_pool_placement_group_id is not None:
            warnings.warn("""Deprecated""", DeprecationWarning)
            pulumi.log.warn("""pi_shared_processor_pool_placement_group_id is deprecated: Deprecated""")
        if pi_shared_processor_pool_placement_group_id is not None:
            pulumi.set(__self__, "pi_shared_processor_pool_placement_group_id", pi_shared_processor_pool_placement_group_id)
        if pi_shared_processor_pool_placement_groups is not None:
            pulumi.set(__self__, "pi_shared_processor_pool_placement_groups", pi_shared_processor_pool_placement_groups)
        if pi_user_tags is not None:
            pulumi.set(__self__, "pi_user_tags", pi_user_tags)
        if spp_placement_groups is not None:
            warnings.warn("""Deprecated""", DeprecationWarning)
            pulumi.log.warn("""spp_placement_groups is deprecated: Deprecated""")
        if spp_placement_groups is not None:
            pulumi.set(__self__, "spp_placement_groups", spp_placement_groups)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)

    @_builtins.property
    @pulumi.getter(name="piCloudInstanceId")
    def pi_cloud_instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        The GUID of the service instance associated with an account.
        """
        return pulumi.get(self, "pi_cloud_instance_id")

    @pi_cloud_instance_id.setter
    def pi_cloud_instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "pi_cloud_instance_id", value)

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolHostGroup")
    def pi_shared_processor_pool_host_group(self) -> pulumi.Input[_builtins.str]:
        """
        Host group of the shared processor pool. Valid values are 'e980', 'e1080', 'e1180', 's922', 's1022' and 's1122'.
        """
        return pulumi.get(self, "pi_shared_processor_pool_host_group")

    @pi_shared_processor_pool_host_group.setter
    def pi_shared_processor_pool_host_group(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "pi_shared_processor_pool_host_group", value)

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolName")
    def pi_shared_processor_pool_name(self) -> pulumi.Input[_builtins.str]:
        """
        The name of the shared processor pool.
        """
        return pulumi.get(self, "pi_shared_processor_pool_name")

    @pi_shared_processor_pool_name.setter
    def pi_shared_processor_pool_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "pi_shared_processor_pool_name", value)

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolReservedCores")
    def pi_shared_processor_pool_reserved_cores(self) -> pulumi.Input[_builtins.float]:
        """
        The amount of reserved cores for the shared processor pool.
        """
        return pulumi.get(self, "pi_shared_processor_pool_reserved_cores")

    @pi_shared_processor_pool_reserved_cores.setter
    def pi_shared_processor_pool_reserved_cores(self, value: pulumi.Input[_builtins.float]):
        pulumi.set(self, "pi_shared_processor_pool_reserved_cores", value)

    @_builtins.property
    @pulumi.getter(name="piHostId")
    def pi_host_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The host id of a host in a host group (only available for dedicated hosts).
        """
        return pulumi.get(self, "pi_host_id")

    @pi_host_id.setter
    def pi_host_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_host_id", value)

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolId")
    def pi_shared_processor_pool_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "pi_shared_processor_pool_id")

    @pi_shared_processor_pool_id.setter
    def pi_shared_processor_pool_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_shared_processor_pool_id", value)

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolPlacementGroupId")
    @_utilities.deprecated("""Deprecated""")
    def pi_shared_processor_pool_placement_group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the placement group the shared processor pool is created in.
        """
        return pulumi.get(self, "pi_shared_processor_pool_placement_group_id")

    @pi_shared_processor_pool_placement_group_id.setter
    def pi_shared_processor_pool_placement_group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_shared_processor_pool_placement_group_id", value)

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolPlacementGroups")
    def pi_shared_processor_pool_placement_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        The list of shared processor pool placement groups that the shared processor pool is in.
        """
        return pulumi.get(self, "pi_shared_processor_pool_placement_groups")

    @pi_shared_processor_pool_placement_groups.setter
    def pi_shared_processor_pool_placement_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "pi_shared_processor_pool_placement_groups", value)

    @_builtins.property
    @pulumi.getter(name="piUserTags")
    def pi_user_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        The user tags attached to this resource.
        """
        return pulumi.get(self, "pi_user_tags")

    @pi_user_tags.setter
    def pi_user_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "pi_user_tags", value)

    @_builtins.property
    @pulumi.getter(name="sppPlacementGroups")
    @_utilities.deprecated("""Deprecated""")
    def spp_placement_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        The list of shared processor pool placement groups that the shared processor pool is in.
        """
        return pulumi.get(self, "spp_placement_groups")

    @spp_placement_groups.setter
    def spp_placement_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "spp_placement_groups", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['PiSharedProcessorPoolTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['PiSharedProcessorPoolTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)


@pulumi.input_type
class _PiSharedProcessorPoolState:
    def __init__(__self__, *,
                 allocated_cores: Optional[pulumi.Input[_builtins.float]] = None,
                 available_cores: Optional[pulumi.Input[_builtins.float]] = None,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 dedicated_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 host_id: Optional[pulumi.Input[_builtins.float]] = None,
                 instances: Optional[pulumi.Input[Sequence[pulumi.Input['PiSharedProcessorPoolInstanceArgs']]]] = None,
                 pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_host_group: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_name: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_placement_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_placement_groups: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 pi_shared_processor_pool_reserved_cores: Optional[pulumi.Input[_builtins.float]] = None,
                 pi_user_tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 shared_processor_pool_id: Optional[pulumi.Input[_builtins.str]] = None,
                 spp_placement_groups: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 status_detail: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['PiSharedProcessorPoolTimeoutsArgs']] = None):
        """
        Input properties used for looking up and filtering PiSharedProcessorPool resources.
        :param pulumi.Input[_builtins.float] allocated_cores: The allocated cores in the shared processor pool.
        :param pulumi.Input[_builtins.float] available_cores: The available cores in the shared processor pool.
        :param pulumi.Input[_builtins.str] crn: The CRN of this resource.
        :param pulumi.Input[_builtins.str] dedicated_host_id: The dedicated host ID where the shared processor pool resides.
        :param pulumi.Input[_builtins.float] host_id: The host ID where the shared processor pool resides.
        :param pulumi.Input[Sequence[pulumi.Input['PiSharedProcessorPoolInstanceArgs']]] instances: The list of server instances that are deployed in the shared processor pool.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_host_id: The host id of a host in a host group (only available for dedicated hosts).
        :param pulumi.Input[_builtins.str] pi_shared_processor_pool_host_group: Host group of the shared processor pool. Valid values are 'e980', 'e1080', 'e1180', 's922', 's1022' and 's1122'.
        :param pulumi.Input[_builtins.str] pi_shared_processor_pool_name: The name of the shared processor pool.
        :param pulumi.Input[_builtins.str] pi_shared_processor_pool_placement_group_id: The ID of the placement group the shared processor pool is created in.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] pi_shared_processor_pool_placement_groups: The list of shared processor pool placement groups that the shared processor pool is in.
        :param pulumi.Input[_builtins.float] pi_shared_processor_pool_reserved_cores: The amount of reserved cores for the shared processor pool.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] pi_user_tags: The user tags attached to this resource.
        :param pulumi.Input[_builtins.str] shared_processor_pool_id: The shared processor pool's unique ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] spp_placement_groups: The list of shared processor pool placement groups that the shared processor pool is in.
        :param pulumi.Input[_builtins.str] status: The status of the shared processor pool.
        :param pulumi.Input[_builtins.str] status_detail: The status details of the shared processor pool.
        """
        if allocated_cores is not None:
            pulumi.set(__self__, "allocated_cores", allocated_cores)
        if available_cores is not None:
            pulumi.set(__self__, "available_cores", available_cores)
        if crn is not None:
            pulumi.set(__self__, "crn", crn)
        if dedicated_host_id is not None:
            pulumi.set(__self__, "dedicated_host_id", dedicated_host_id)
        if host_id is not None:
            pulumi.set(__self__, "host_id", host_id)
        if instances is not None:
            pulumi.set(__self__, "instances", instances)
        if pi_cloud_instance_id is not None:
            pulumi.set(__self__, "pi_cloud_instance_id", pi_cloud_instance_id)
        if pi_host_id is not None:
            pulumi.set(__self__, "pi_host_id", pi_host_id)
        if pi_shared_processor_pool_host_group is not None:
            pulumi.set(__self__, "pi_shared_processor_pool_host_group", pi_shared_processor_pool_host_group)
        if pi_shared_processor_pool_id is not None:
            pulumi.set(__self__, "pi_shared_processor_pool_id", pi_shared_processor_pool_id)
        if pi_shared_processor_pool_name is not None:
            pulumi.set(__self__, "pi_shared_processor_pool_name", pi_shared_processor_pool_name)
        if pi_shared_processor_pool_placement_group_id is not None:
            warnings.warn("""Deprecated""", DeprecationWarning)
            pulumi.log.warn("""pi_shared_processor_pool_placement_group_id is deprecated: Deprecated""")
        if pi_shared_processor_pool_placement_group_id is not None:
            pulumi.set(__self__, "pi_shared_processor_pool_placement_group_id", pi_shared_processor_pool_placement_group_id)
        if pi_shared_processor_pool_placement_groups is not None:
            pulumi.set(__self__, "pi_shared_processor_pool_placement_groups", pi_shared_processor_pool_placement_groups)
        if pi_shared_processor_pool_reserved_cores is not None:
            pulumi.set(__self__, "pi_shared_processor_pool_reserved_cores", pi_shared_processor_pool_reserved_cores)
        if pi_user_tags is not None:
            pulumi.set(__self__, "pi_user_tags", pi_user_tags)
        if shared_processor_pool_id is not None:
            pulumi.set(__self__, "shared_processor_pool_id", shared_processor_pool_id)
        if spp_placement_groups is not None:
            warnings.warn("""Deprecated""", DeprecationWarning)
            pulumi.log.warn("""spp_placement_groups is deprecated: Deprecated""")
        if spp_placement_groups is not None:
            pulumi.set(__self__, "spp_placement_groups", spp_placement_groups)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if status_detail is not None:
            pulumi.set(__self__, "status_detail", status_detail)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)

    @_builtins.property
    @pulumi.getter(name="allocatedCores")
    def allocated_cores(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        The allocated cores in the shared processor pool.
        """
        return pulumi.get(self, "allocated_cores")

    @allocated_cores.setter
    def allocated_cores(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "allocated_cores", value)

    @_builtins.property
    @pulumi.getter(name="availableCores")
    def available_cores(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        The available cores in the shared processor pool.
        """
        return pulumi.get(self, "available_cores")

    @available_cores.setter
    def available_cores(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "available_cores", value)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The CRN of this resource.
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter(name="dedicatedHostId")
    def dedicated_host_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The dedicated host ID where the shared processor pool resides.
        """
        return pulumi.get(self, "dedicated_host_id")

    @dedicated_host_id.setter
    def dedicated_host_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dedicated_host_id", value)

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        The host ID where the shared processor pool resides.
        """
        return pulumi.get(self, "host_id")

    @host_id.setter
    def host_id(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "host_id", value)

    @_builtins.property
    @pulumi.getter
    def instances(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PiSharedProcessorPoolInstanceArgs']]]]:
        """
        The list of server instances that are deployed in the shared processor pool.
        """
        return pulumi.get(self, "instances")

    @instances.setter
    def instances(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PiSharedProcessorPoolInstanceArgs']]]]):
        pulumi.set(self, "instances", value)

    @_builtins.property
    @pulumi.getter(name="piCloudInstanceId")
    def pi_cloud_instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The GUID of the service instance associated with an account.
        """
        return pulumi.get(self, "pi_cloud_instance_id")

    @pi_cloud_instance_id.setter
    def pi_cloud_instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_cloud_instance_id", value)

    @_builtins.property
    @pulumi.getter(name="piHostId")
    def pi_host_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The host id of a host in a host group (only available for dedicated hosts).
        """
        return pulumi.get(self, "pi_host_id")

    @pi_host_id.setter
    def pi_host_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_host_id", value)

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolHostGroup")
    def pi_shared_processor_pool_host_group(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Host group of the shared processor pool. Valid values are 'e980', 'e1080', 'e1180', 's922', 's1022' and 's1122'.
        """
        return pulumi.get(self, "pi_shared_processor_pool_host_group")

    @pi_shared_processor_pool_host_group.setter
    def pi_shared_processor_pool_host_group(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_shared_processor_pool_host_group", value)

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolId")
    def pi_shared_processor_pool_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "pi_shared_processor_pool_id")

    @pi_shared_processor_pool_id.setter
    def pi_shared_processor_pool_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_shared_processor_pool_id", value)

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolName")
    def pi_shared_processor_pool_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the shared processor pool.
        """
        return pulumi.get(self, "pi_shared_processor_pool_name")

    @pi_shared_processor_pool_name.setter
    def pi_shared_processor_pool_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_shared_processor_pool_name", value)

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolPlacementGroupId")
    @_utilities.deprecated("""Deprecated""")
    def pi_shared_processor_pool_placement_group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the placement group the shared processor pool is created in.
        """
        return pulumi.get(self, "pi_shared_processor_pool_placement_group_id")

    @pi_shared_processor_pool_placement_group_id.setter
    def pi_shared_processor_pool_placement_group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pi_shared_processor_pool_placement_group_id", value)

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolPlacementGroups")
    def pi_shared_processor_pool_placement_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        The list of shared processor pool placement groups that the shared processor pool is in.
        """
        return pulumi.get(self, "pi_shared_processor_pool_placement_groups")

    @pi_shared_processor_pool_placement_groups.setter
    def pi_shared_processor_pool_placement_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "pi_shared_processor_pool_placement_groups", value)

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolReservedCores")
    def pi_shared_processor_pool_reserved_cores(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        The amount of reserved cores for the shared processor pool.
        """
        return pulumi.get(self, "pi_shared_processor_pool_reserved_cores")

    @pi_shared_processor_pool_reserved_cores.setter
    def pi_shared_processor_pool_reserved_cores(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "pi_shared_processor_pool_reserved_cores", value)

    @_builtins.property
    @pulumi.getter(name="piUserTags")
    def pi_user_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        The user tags attached to this resource.
        """
        return pulumi.get(self, "pi_user_tags")

    @pi_user_tags.setter
    def pi_user_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "pi_user_tags", value)

    @_builtins.property
    @pulumi.getter(name="sharedProcessorPoolId")
    def shared_processor_pool_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The shared processor pool's unique ID.
        """
        return pulumi.get(self, "shared_processor_pool_id")

    @shared_processor_pool_id.setter
    def shared_processor_pool_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "shared_processor_pool_id", value)

    @_builtins.property
    @pulumi.getter(name="sppPlacementGroups")
    @_utilities.deprecated("""Deprecated""")
    def spp_placement_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        The list of shared processor pool placement groups that the shared processor pool is in.
        """
        return pulumi.get(self, "spp_placement_groups")

    @spp_placement_groups.setter
    def spp_placement_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "spp_placement_groups", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status of the shared processor pool.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="statusDetail")
    def status_detail(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status details of the shared processor pool.
        """
        return pulumi.get(self, "status_detail")

    @status_detail.setter
    def status_detail(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status_detail", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['PiSharedProcessorPoolTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['PiSharedProcessorPoolTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)


@pulumi.type_token("ibm:index/piSharedProcessorPool:PiSharedProcessorPool")
class PiSharedProcessorPool(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_host_group: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_name: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_placement_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_placement_groups: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 pi_shared_processor_pool_reserved_cores: Optional[pulumi.Input[_builtins.float]] = None,
                 pi_user_tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 spp_placement_groups: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 timeouts: Optional[pulumi.Input[Union['PiSharedProcessorPoolTimeoutsArgs', 'PiSharedProcessorPoolTimeoutsArgsDict']]] = None,
                 __props__=None):
        """
        Create a PiSharedProcessorPool resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_host_id: The host id of a host in a host group (only available for dedicated hosts).
        :param pulumi.Input[_builtins.str] pi_shared_processor_pool_host_group: Host group of the shared processor pool. Valid values are 'e980', 'e1080', 'e1180', 's922', 's1022' and 's1122'.
        :param pulumi.Input[_builtins.str] pi_shared_processor_pool_name: The name of the shared processor pool.
        :param pulumi.Input[_builtins.str] pi_shared_processor_pool_placement_group_id: The ID of the placement group the shared processor pool is created in.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] pi_shared_processor_pool_placement_groups: The list of shared processor pool placement groups that the shared processor pool is in.
        :param pulumi.Input[_builtins.float] pi_shared_processor_pool_reserved_cores: The amount of reserved cores for the shared processor pool.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] pi_user_tags: The user tags attached to this resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] spp_placement_groups: The list of shared processor pool placement groups that the shared processor pool is in.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PiSharedProcessorPoolArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a PiSharedProcessorPool resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param PiSharedProcessorPoolArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PiSharedProcessorPoolArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_host_group: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_name: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_placement_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pi_shared_processor_pool_placement_groups: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 pi_shared_processor_pool_reserved_cores: Optional[pulumi.Input[_builtins.float]] = None,
                 pi_user_tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 spp_placement_groups: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 timeouts: Optional[pulumi.Input[Union['PiSharedProcessorPoolTimeoutsArgs', 'PiSharedProcessorPoolTimeoutsArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PiSharedProcessorPoolArgs.__new__(PiSharedProcessorPoolArgs)

            if pi_cloud_instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'pi_cloud_instance_id'")
            __props__.__dict__["pi_cloud_instance_id"] = pi_cloud_instance_id
            __props__.__dict__["pi_host_id"] = pi_host_id
            if pi_shared_processor_pool_host_group is None and not opts.urn:
                raise TypeError("Missing required property 'pi_shared_processor_pool_host_group'")
            __props__.__dict__["pi_shared_processor_pool_host_group"] = pi_shared_processor_pool_host_group
            __props__.__dict__["pi_shared_processor_pool_id"] = pi_shared_processor_pool_id
            if pi_shared_processor_pool_name is None and not opts.urn:
                raise TypeError("Missing required property 'pi_shared_processor_pool_name'")
            __props__.__dict__["pi_shared_processor_pool_name"] = pi_shared_processor_pool_name
            __props__.__dict__["pi_shared_processor_pool_placement_group_id"] = pi_shared_processor_pool_placement_group_id
            __props__.__dict__["pi_shared_processor_pool_placement_groups"] = pi_shared_processor_pool_placement_groups
            if pi_shared_processor_pool_reserved_cores is None and not opts.urn:
                raise TypeError("Missing required property 'pi_shared_processor_pool_reserved_cores'")
            __props__.__dict__["pi_shared_processor_pool_reserved_cores"] = pi_shared_processor_pool_reserved_cores
            __props__.__dict__["pi_user_tags"] = pi_user_tags
            __props__.__dict__["spp_placement_groups"] = spp_placement_groups
            __props__.__dict__["timeouts"] = timeouts
            __props__.__dict__["allocated_cores"] = None
            __props__.__dict__["available_cores"] = None
            __props__.__dict__["crn"] = None
            __props__.__dict__["dedicated_host_id"] = None
            __props__.__dict__["host_id"] = None
            __props__.__dict__["instances"] = None
            __props__.__dict__["shared_processor_pool_id"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["status_detail"] = None
        super(PiSharedProcessorPool, __self__).__init__(
            'ibm:index/piSharedProcessorPool:PiSharedProcessorPool',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            allocated_cores: Optional[pulumi.Input[_builtins.float]] = None,
            available_cores: Optional[pulumi.Input[_builtins.float]] = None,
            crn: Optional[pulumi.Input[_builtins.str]] = None,
            dedicated_host_id: Optional[pulumi.Input[_builtins.str]] = None,
            host_id: Optional[pulumi.Input[_builtins.float]] = None,
            instances: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PiSharedProcessorPoolInstanceArgs', 'PiSharedProcessorPoolInstanceArgsDict']]]]] = None,
            pi_cloud_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            pi_host_id: Optional[pulumi.Input[_builtins.str]] = None,
            pi_shared_processor_pool_host_group: Optional[pulumi.Input[_builtins.str]] = None,
            pi_shared_processor_pool_id: Optional[pulumi.Input[_builtins.str]] = None,
            pi_shared_processor_pool_name: Optional[pulumi.Input[_builtins.str]] = None,
            pi_shared_processor_pool_placement_group_id: Optional[pulumi.Input[_builtins.str]] = None,
            pi_shared_processor_pool_placement_groups: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            pi_shared_processor_pool_reserved_cores: Optional[pulumi.Input[_builtins.float]] = None,
            pi_user_tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            shared_processor_pool_id: Optional[pulumi.Input[_builtins.str]] = None,
            spp_placement_groups: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            status_detail: Optional[pulumi.Input[_builtins.str]] = None,
            timeouts: Optional[pulumi.Input[Union['PiSharedProcessorPoolTimeoutsArgs', 'PiSharedProcessorPoolTimeoutsArgsDict']]] = None) -> 'PiSharedProcessorPool':
        """
        Get an existing PiSharedProcessorPool resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.float] allocated_cores: The allocated cores in the shared processor pool.
        :param pulumi.Input[_builtins.float] available_cores: The available cores in the shared processor pool.
        :param pulumi.Input[_builtins.str] crn: The CRN of this resource.
        :param pulumi.Input[_builtins.str] dedicated_host_id: The dedicated host ID where the shared processor pool resides.
        :param pulumi.Input[_builtins.float] host_id: The host ID where the shared processor pool resides.
        :param pulumi.Input[Sequence[pulumi.Input[Union['PiSharedProcessorPoolInstanceArgs', 'PiSharedProcessorPoolInstanceArgsDict']]]] instances: The list of server instances that are deployed in the shared processor pool.
        :param pulumi.Input[_builtins.str] pi_cloud_instance_id: The GUID of the service instance associated with an account.
        :param pulumi.Input[_builtins.str] pi_host_id: The host id of a host in a host group (only available for dedicated hosts).
        :param pulumi.Input[_builtins.str] pi_shared_processor_pool_host_group: Host group of the shared processor pool. Valid values are 'e980', 'e1080', 'e1180', 's922', 's1022' and 's1122'.
        :param pulumi.Input[_builtins.str] pi_shared_processor_pool_name: The name of the shared processor pool.
        :param pulumi.Input[_builtins.str] pi_shared_processor_pool_placement_group_id: The ID of the placement group the shared processor pool is created in.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] pi_shared_processor_pool_placement_groups: The list of shared processor pool placement groups that the shared processor pool is in.
        :param pulumi.Input[_builtins.float] pi_shared_processor_pool_reserved_cores: The amount of reserved cores for the shared processor pool.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] pi_user_tags: The user tags attached to this resource.
        :param pulumi.Input[_builtins.str] shared_processor_pool_id: The shared processor pool's unique ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] spp_placement_groups: The list of shared processor pool placement groups that the shared processor pool is in.
        :param pulumi.Input[_builtins.str] status: The status of the shared processor pool.
        :param pulumi.Input[_builtins.str] status_detail: The status details of the shared processor pool.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PiSharedProcessorPoolState.__new__(_PiSharedProcessorPoolState)

        __props__.__dict__["allocated_cores"] = allocated_cores
        __props__.__dict__["available_cores"] = available_cores
        __props__.__dict__["crn"] = crn
        __props__.__dict__["dedicated_host_id"] = dedicated_host_id
        __props__.__dict__["host_id"] = host_id
        __props__.__dict__["instances"] = instances
        __props__.__dict__["pi_cloud_instance_id"] = pi_cloud_instance_id
        __props__.__dict__["pi_host_id"] = pi_host_id
        __props__.__dict__["pi_shared_processor_pool_host_group"] = pi_shared_processor_pool_host_group
        __props__.__dict__["pi_shared_processor_pool_id"] = pi_shared_processor_pool_id
        __props__.__dict__["pi_shared_processor_pool_name"] = pi_shared_processor_pool_name
        __props__.__dict__["pi_shared_processor_pool_placement_group_id"] = pi_shared_processor_pool_placement_group_id
        __props__.__dict__["pi_shared_processor_pool_placement_groups"] = pi_shared_processor_pool_placement_groups
        __props__.__dict__["pi_shared_processor_pool_reserved_cores"] = pi_shared_processor_pool_reserved_cores
        __props__.__dict__["pi_user_tags"] = pi_user_tags
        __props__.__dict__["shared_processor_pool_id"] = shared_processor_pool_id
        __props__.__dict__["spp_placement_groups"] = spp_placement_groups
        __props__.__dict__["status"] = status
        __props__.__dict__["status_detail"] = status_detail
        __props__.__dict__["timeouts"] = timeouts
        return PiSharedProcessorPool(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="allocatedCores")
    def allocated_cores(self) -> pulumi.Output[_builtins.float]:
        """
        The allocated cores in the shared processor pool.
        """
        return pulumi.get(self, "allocated_cores")

    @_builtins.property
    @pulumi.getter(name="availableCores")
    def available_cores(self) -> pulumi.Output[_builtins.float]:
        """
        The available cores in the shared processor pool.
        """
        return pulumi.get(self, "available_cores")

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Output[_builtins.str]:
        """
        The CRN of this resource.
        """
        return pulumi.get(self, "crn")

    @_builtins.property
    @pulumi.getter(name="dedicatedHostId")
    def dedicated_host_id(self) -> pulumi.Output[_builtins.str]:
        """
        The dedicated host ID where the shared processor pool resides.
        """
        return pulumi.get(self, "dedicated_host_id")

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> pulumi.Output[_builtins.float]:
        """
        The host ID where the shared processor pool resides.
        """
        return pulumi.get(self, "host_id")

    @_builtins.property
    @pulumi.getter
    def instances(self) -> pulumi.Output[Sequence['outputs.PiSharedProcessorPoolInstance']]:
        """
        The list of server instances that are deployed in the shared processor pool.
        """
        return pulumi.get(self, "instances")

    @_builtins.property
    @pulumi.getter(name="piCloudInstanceId")
    def pi_cloud_instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        The GUID of the service instance associated with an account.
        """
        return pulumi.get(self, "pi_cloud_instance_id")

    @_builtins.property
    @pulumi.getter(name="piHostId")
    def pi_host_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The host id of a host in a host group (only available for dedicated hosts).
        """
        return pulumi.get(self, "pi_host_id")

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolHostGroup")
    def pi_shared_processor_pool_host_group(self) -> pulumi.Output[_builtins.str]:
        """
        Host group of the shared processor pool. Valid values are 'e980', 'e1080', 'e1180', 's922', 's1022' and 's1122'.
        """
        return pulumi.get(self, "pi_shared_processor_pool_host_group")

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolId")
    def pi_shared_processor_pool_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "pi_shared_processor_pool_id")

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolName")
    def pi_shared_processor_pool_name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the shared processor pool.
        """
        return pulumi.get(self, "pi_shared_processor_pool_name")

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolPlacementGroupId")
    @_utilities.deprecated("""Deprecated""")
    def pi_shared_processor_pool_placement_group_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The ID of the placement group the shared processor pool is created in.
        """
        return pulumi.get(self, "pi_shared_processor_pool_placement_group_id")

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolPlacementGroups")
    def pi_shared_processor_pool_placement_groups(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        The list of shared processor pool placement groups that the shared processor pool is in.
        """
        return pulumi.get(self, "pi_shared_processor_pool_placement_groups")

    @_builtins.property
    @pulumi.getter(name="piSharedProcessorPoolReservedCores")
    def pi_shared_processor_pool_reserved_cores(self) -> pulumi.Output[_builtins.float]:
        """
        The amount of reserved cores for the shared processor pool.
        """
        return pulumi.get(self, "pi_shared_processor_pool_reserved_cores")

    @_builtins.property
    @pulumi.getter(name="piUserTags")
    def pi_user_tags(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        The user tags attached to this resource.
        """
        return pulumi.get(self, "pi_user_tags")

    @_builtins.property
    @pulumi.getter(name="sharedProcessorPoolId")
    def shared_processor_pool_id(self) -> pulumi.Output[_builtins.str]:
        """
        The shared processor pool's unique ID.
        """
        return pulumi.get(self, "shared_processor_pool_id")

    @_builtins.property
    @pulumi.getter(name="sppPlacementGroups")
    @_utilities.deprecated("""Deprecated""")
    def spp_placement_groups(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        The list of shared processor pool placement groups that the shared processor pool is in.
        """
        return pulumi.get(self, "spp_placement_groups")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The status of the shared processor pool.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="statusDetail")
    def status_detail(self) -> pulumi.Output[_builtins.str]:
        """
        The status details of the shared processor pool.
        """
        return pulumi.get(self, "status_detail")

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> pulumi.Output[Optional['outputs.PiSharedProcessorPoolTimeouts']]:
        return pulumi.get(self, "timeouts")

