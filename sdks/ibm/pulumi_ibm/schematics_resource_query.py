# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SchematicsResourceQueryArgs', 'SchematicsResourceQuery']

@pulumi.input_type
class SchematicsResourceQueryArgs:
    def __init__(__self__, *,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 queries: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsResourceQueryQueryArgs']]]] = None,
                 schematics_resource_query_id: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a SchematicsResourceQuery resource.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] name: Resource query name.
        :param pulumi.Input[_builtins.str] type: Resource type (cluster, vsi, icd, vpc).
        """
        if location is not None:
            pulumi.set(__self__, "location", location)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if queries is not None:
            pulumi.set(__self__, "queries", queries)
        if schematics_resource_query_id is not None:
            pulumi.set(__self__, "schematics_resource_query_id", schematics_resource_query_id)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "location", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Resource query name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def queries(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsResourceQueryQueryArgs']]]]:
        return pulumi.get(self, "queries")

    @queries.setter
    def queries(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsResourceQueryQueryArgs']]]]):
        pulumi.set(self, "queries", value)

    @_builtins.property
    @pulumi.getter(name="schematicsResourceQueryId")
    def schematics_resource_query_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "schematics_resource_query_id")

    @schematics_resource_query_id.setter
    def schematics_resource_query_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "schematics_resource_query_id", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Resource type (cluster, vsi, icd, vpc).
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class _SchematicsResourceQueryState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_by: Optional[pulumi.Input[_builtins.str]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 queries: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsResourceQueryQueryArgs']]]] = None,
                 schematics_resource_query_id: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_by: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering SchematicsResourceQuery resources.
        :param pulumi.Input[_builtins.str] created_at: Resource query creation time.
        :param pulumi.Input[_builtins.str] created_by: Email address of user who created the Resource query.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] name: Resource query name.
        :param pulumi.Input[_builtins.str] type: Resource type (cluster, vsi, icd, vpc).
        :param pulumi.Input[_builtins.str] updated_at: Resource query updation time.
        :param pulumi.Input[_builtins.str] updated_by: Email address of user who updated the Resource query.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if queries is not None:
            pulumi.set(__self__, "queries", queries)
        if schematics_resource_query_id is not None:
            pulumi.set(__self__, "schematics_resource_query_id", schematics_resource_query_id)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if updated_by is not None:
            pulumi.set(__self__, "updated_by", updated_by)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Resource query creation time.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Email address of user who created the Resource query.
        """
        return pulumi.get(self, "created_by")

    @created_by.setter
    def created_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_by", value)

    @_builtins.property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "location", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Resource query name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def queries(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsResourceQueryQueryArgs']]]]:
        return pulumi.get(self, "queries")

    @queries.setter
    def queries(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsResourceQueryQueryArgs']]]]):
        pulumi.set(self, "queries", value)

    @_builtins.property
    @pulumi.getter(name="schematicsResourceQueryId")
    def schematics_resource_query_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "schematics_resource_query_id")

    @schematics_resource_query_id.setter
    def schematics_resource_query_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "schematics_resource_query_id", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Resource type (cluster, vsi, icd, vpc).
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Resource query updation time.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Email address of user who updated the Resource query.
        """
        return pulumi.get(self, "updated_by")

    @updated_by.setter
    def updated_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_by", value)


@pulumi.type_token("ibm:index/schematicsResourceQuery:SchematicsResourceQuery")
class SchematicsResourceQuery(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 queries: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsResourceQueryQueryArgs', 'SchematicsResourceQueryQueryArgsDict']]]]] = None,
                 schematics_resource_query_id: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a SchematicsResourceQuery resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] name: Resource query name.
        :param pulumi.Input[_builtins.str] type: Resource type (cluster, vsi, icd, vpc).
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[SchematicsResourceQueryArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a SchematicsResourceQuery resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param SchematicsResourceQueryArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SchematicsResourceQueryArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 queries: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsResourceQueryQueryArgs', 'SchematicsResourceQueryQueryArgsDict']]]]] = None,
                 schematics_resource_query_id: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SchematicsResourceQueryArgs.__new__(SchematicsResourceQueryArgs)

            __props__.__dict__["location"] = location
            __props__.__dict__["name"] = name
            __props__.__dict__["queries"] = queries
            __props__.__dict__["schematics_resource_query_id"] = schematics_resource_query_id
            __props__.__dict__["type"] = type
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_by"] = None
            __props__.__dict__["updated_at"] = None
            __props__.__dict__["updated_by"] = None
        super(SchematicsResourceQuery, __self__).__init__(
            'ibm:index/schematicsResourceQuery:SchematicsResourceQuery',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_by: Optional[pulumi.Input[_builtins.str]] = None,
            location: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            queries: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsResourceQueryQueryArgs', 'SchematicsResourceQueryQueryArgsDict']]]]] = None,
            schematics_resource_query_id: Optional[pulumi.Input[_builtins.str]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            updated_by: Optional[pulumi.Input[_builtins.str]] = None) -> 'SchematicsResourceQuery':
        """
        Get an existing SchematicsResourceQuery resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: Resource query creation time.
        :param pulumi.Input[_builtins.str] created_by: Email address of user who created the Resource query.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] name: Resource query name.
        :param pulumi.Input[_builtins.str] type: Resource type (cluster, vsi, icd, vpc).
        :param pulumi.Input[_builtins.str] updated_at: Resource query updation time.
        :param pulumi.Input[_builtins.str] updated_by: Email address of user who updated the Resource query.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SchematicsResourceQueryState.__new__(_SchematicsResourceQueryState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_by"] = created_by
        __props__.__dict__["location"] = location
        __props__.__dict__["name"] = name
        __props__.__dict__["queries"] = queries
        __props__.__dict__["schematics_resource_query_id"] = schematics_resource_query_id
        __props__.__dict__["type"] = type
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["updated_by"] = updated_by
        return SchematicsResourceQuery(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Resource query creation time.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> pulumi.Output[_builtins.str]:
        """
        Email address of user who created the Resource query.
        """
        return pulumi.get(self, "created_by")

    @_builtins.property
    @pulumi.getter
    def location(self) -> pulumi.Output[_builtins.str]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "location")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Resource query name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def queries(self) -> pulumi.Output[Optional[Sequence['outputs.SchematicsResourceQueryQuery']]]:
        return pulumi.get(self, "queries")

    @_builtins.property
    @pulumi.getter(name="schematicsResourceQueryId")
    def schematics_resource_query_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "schematics_resource_query_id")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Resource type (cluster, vsi, icd, vpc).
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Resource query updation time.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> pulumi.Output[_builtins.str]:
        """
        Email address of user who updated the Resource query.
        """
        return pulumi.get(self, "updated_by")

