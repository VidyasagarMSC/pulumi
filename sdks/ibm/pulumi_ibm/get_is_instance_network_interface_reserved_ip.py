# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetIsInstanceNetworkInterfaceReservedIpResult',
    'AwaitableGetIsInstanceNetworkInterfaceReservedIpResult',
    'get_is_instance_network_interface_reserved_ip',
    'get_is_instance_network_interface_reserved_ip_output',
]

@pulumi.output_type
class GetIsInstanceNetworkInterfaceReservedIpResult:
    """
    A collection of values returned by getIsInstanceNetworkInterfaceReservedIp.
    """
    def __init__(__self__, address=None, auto_delete=None, created_at=None, href=None, id=None, instance=None, name=None, network_interface=None, owner=None, reserved_ip=None, resource_type=None, target=None):
        if address and not isinstance(address, str):
            raise TypeError("Expected argument 'address' to be a str")
        pulumi.set(__self__, "address", address)
        if auto_delete and not isinstance(auto_delete, bool):
            raise TypeError("Expected argument 'auto_delete' to be a bool")
        pulumi.set(__self__, "auto_delete", auto_delete)
        if created_at and not isinstance(created_at, str):
            raise TypeError("Expected argument 'created_at' to be a str")
        pulumi.set(__self__, "created_at", created_at)
        if href and not isinstance(href, str):
            raise TypeError("Expected argument 'href' to be a str")
        pulumi.set(__self__, "href", href)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance and not isinstance(instance, str):
            raise TypeError("Expected argument 'instance' to be a str")
        pulumi.set(__self__, "instance", instance)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if network_interface and not isinstance(network_interface, str):
            raise TypeError("Expected argument 'network_interface' to be a str")
        pulumi.set(__self__, "network_interface", network_interface)
        if owner and not isinstance(owner, str):
            raise TypeError("Expected argument 'owner' to be a str")
        pulumi.set(__self__, "owner", owner)
        if reserved_ip and not isinstance(reserved_ip, str):
            raise TypeError("Expected argument 'reserved_ip' to be a str")
        pulumi.set(__self__, "reserved_ip", reserved_ip)
        if resource_type and not isinstance(resource_type, str):
            raise TypeError("Expected argument 'resource_type' to be a str")
        pulumi.set(__self__, "resource_type", resource_type)
        if target and not isinstance(target, str):
            raise TypeError("Expected argument 'target' to be a str")
        pulumi.set(__self__, "target", target)

    @_builtins.property
    @pulumi.getter
    def address(self) -> _builtins.str:
        return pulumi.get(self, "address")

    @_builtins.property
    @pulumi.getter(name="autoDelete")
    def auto_delete(self) -> _builtins.bool:
        return pulumi.get(self, "auto_delete")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> _builtins.str:
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def href(self) -> _builtins.str:
        return pulumi.get(self, "href")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def instance(self) -> _builtins.str:
        return pulumi.get(self, "instance")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="networkInterface")
    def network_interface(self) -> _builtins.str:
        return pulumi.get(self, "network_interface")

    @_builtins.property
    @pulumi.getter
    def owner(self) -> _builtins.str:
        return pulumi.get(self, "owner")

    @_builtins.property
    @pulumi.getter(name="reservedIp")
    def reserved_ip(self) -> _builtins.str:
        return pulumi.get(self, "reserved_ip")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> _builtins.str:
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter
    def target(self) -> _builtins.str:
        return pulumi.get(self, "target")


class AwaitableGetIsInstanceNetworkInterfaceReservedIpResult(GetIsInstanceNetworkInterfaceReservedIpResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIsInstanceNetworkInterfaceReservedIpResult(
            address=self.address,
            auto_delete=self.auto_delete,
            created_at=self.created_at,
            href=self.href,
            id=self.id,
            instance=self.instance,
            name=self.name,
            network_interface=self.network_interface,
            owner=self.owner,
            reserved_ip=self.reserved_ip,
            resource_type=self.resource_type,
            target=self.target)


def get_is_instance_network_interface_reserved_ip(id: Optional[_builtins.str] = None,
                                                  instance: Optional[_builtins.str] = None,
                                                  network_interface: Optional[_builtins.str] = None,
                                                  reserved_ip: Optional[_builtins.str] = None,
                                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIsInstanceNetworkInterfaceReservedIpResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['instance'] = instance
    __args__['networkInterface'] = network_interface
    __args__['reservedIp'] = reserved_ip
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getIsInstanceNetworkInterfaceReservedIp:getIsInstanceNetworkInterfaceReservedIp', __args__, opts=opts, typ=GetIsInstanceNetworkInterfaceReservedIpResult, package_ref=_utilities.get_package()).value

    return AwaitableGetIsInstanceNetworkInterfaceReservedIpResult(
        address=pulumi.get(__ret__, 'address'),
        auto_delete=pulumi.get(__ret__, 'auto_delete'),
        created_at=pulumi.get(__ret__, 'created_at'),
        href=pulumi.get(__ret__, 'href'),
        id=pulumi.get(__ret__, 'id'),
        instance=pulumi.get(__ret__, 'instance'),
        name=pulumi.get(__ret__, 'name'),
        network_interface=pulumi.get(__ret__, 'network_interface'),
        owner=pulumi.get(__ret__, 'owner'),
        reserved_ip=pulumi.get(__ret__, 'reserved_ip'),
        resource_type=pulumi.get(__ret__, 'resource_type'),
        target=pulumi.get(__ret__, 'target'))
def get_is_instance_network_interface_reserved_ip_output(id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                         instance: Optional[pulumi.Input[_builtins.str]] = None,
                                                         network_interface: Optional[pulumi.Input[_builtins.str]] = None,
                                                         reserved_ip: Optional[pulumi.Input[_builtins.str]] = None,
                                                         opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetIsInstanceNetworkInterfaceReservedIpResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['instance'] = instance
    __args__['networkInterface'] = network_interface
    __args__['reservedIp'] = reserved_ip
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getIsInstanceNetworkInterfaceReservedIp:getIsInstanceNetworkInterfaceReservedIp', __args__, opts=opts, typ=GetIsInstanceNetworkInterfaceReservedIpResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetIsInstanceNetworkInterfaceReservedIpResult(
        address=pulumi.get(__response__, 'address'),
        auto_delete=pulumi.get(__response__, 'auto_delete'),
        created_at=pulumi.get(__response__, 'created_at'),
        href=pulumi.get(__response__, 'href'),
        id=pulumi.get(__response__, 'id'),
        instance=pulumi.get(__response__, 'instance'),
        name=pulumi.get(__response__, 'name'),
        network_interface=pulumi.get(__response__, 'network_interface'),
        owner=pulumi.get(__response__, 'owner'),
        reserved_ip=pulumi.get(__response__, 'reserved_ip'),
        resource_type=pulumi.get(__response__, 'resource_type'),
        target=pulumi.get(__response__, 'target')))
