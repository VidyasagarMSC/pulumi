# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['SmPublicCertificateConfigurationDnsClassicInfrastructureArgs', 'SmPublicCertificateConfigurationDnsClassicInfrastructure']

@pulumi.input_type
class SmPublicCertificateConfigurationDnsClassicInfrastructureArgs:
    def __init__(__self__, *,
                 classic_infrastructure_password: pulumi.Input[_builtins.str],
                 classic_infrastructure_username: pulumi.Input[_builtins.str],
                 instance_id: pulumi.Input[_builtins.str],
                 endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 sm_public_certificate_configuration_dns_classic_infrastructure_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a SmPublicCertificateConfigurationDnsClassicInfrastructure resource.
        :param pulumi.Input[_builtins.str] classic_infrastructure_password: Your classic infrastructure API key.For information about viewing and accessing your classic infrastructure API key, see
               the [docs](https://cloud.ibm.com/docs/account?topic=account-classic_keys).
        :param pulumi.Input[_builtins.str] classic_infrastructure_username: The username that is associated with your classic infrastructure account.In most cases, your classic infrastructure
               username is your `<account_id>_<email_address>`. For more information, see the
               [docs](https://cloud.ibm.com/docs/account?topic=account-classic_keys).
        :param pulumi.Input[_builtins.str] instance_id: The ID of the Secrets Manager instance.
        :param pulumi.Input[_builtins.str] endpoint_type: public or private.
        :param pulumi.Input[_builtins.str] name: A human-readable unique name to assign to your configuration.To protect your privacy, do not use personal data, such as
               your name or location, as an name for your secret.
        :param pulumi.Input[_builtins.str] region: The region of the Secrets Manager instance.
        """
        pulumi.set(__self__, "classic_infrastructure_password", classic_infrastructure_password)
        pulumi.set(__self__, "classic_infrastructure_username", classic_infrastructure_username)
        pulumi.set(__self__, "instance_id", instance_id)
        if endpoint_type is not None:
            pulumi.set(__self__, "endpoint_type", endpoint_type)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if sm_public_certificate_configuration_dns_classic_infrastructure_id is not None:
            pulumi.set(__self__, "sm_public_certificate_configuration_dns_classic_infrastructure_id", sm_public_certificate_configuration_dns_classic_infrastructure_id)

    @_builtins.property
    @pulumi.getter(name="classicInfrastructurePassword")
    def classic_infrastructure_password(self) -> pulumi.Input[_builtins.str]:
        """
        Your classic infrastructure API key.For information about viewing and accessing your classic infrastructure API key, see
        the [docs](https://cloud.ibm.com/docs/account?topic=account-classic_keys).
        """
        return pulumi.get(self, "classic_infrastructure_password")

    @classic_infrastructure_password.setter
    def classic_infrastructure_password(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "classic_infrastructure_password", value)

    @_builtins.property
    @pulumi.getter(name="classicInfrastructureUsername")
    def classic_infrastructure_username(self) -> pulumi.Input[_builtins.str]:
        """
        The username that is associated with your classic infrastructure account.In most cases, your classic infrastructure
        username is your `<account_id>_<email_address>`. For more information, see the
        [docs](https://cloud.ibm.com/docs/account?topic=account-classic_keys).
        """
        return pulumi.get(self, "classic_infrastructure_username")

    @classic_infrastructure_username.setter
    def classic_infrastructure_username(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "classic_infrastructure_username", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        The ID of the Secrets Manager instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="endpointType")
    def endpoint_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        public or private.
        """
        return pulumi.get(self, "endpoint_type")

    @endpoint_type.setter
    def endpoint_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "endpoint_type", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        A human-readable unique name to assign to your configuration.To protect your privacy, do not use personal data, such as
        your name or location, as an name for your secret.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The region of the Secrets Manager instance.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="smPublicCertificateConfigurationDnsClassicInfrastructureId")
    def sm_public_certificate_configuration_dns_classic_infrastructure_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "sm_public_certificate_configuration_dns_classic_infrastructure_id")

    @sm_public_certificate_configuration_dns_classic_infrastructure_id.setter
    def sm_public_certificate_configuration_dns_classic_infrastructure_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "sm_public_certificate_configuration_dns_classic_infrastructure_id", value)


@pulumi.input_type
class _SmPublicCertificateConfigurationDnsClassicInfrastructureState:
    def __init__(__self__, *,
                 classic_infrastructure_password: Optional[pulumi.Input[_builtins.str]] = None,
                 classic_infrastructure_username: Optional[pulumi.Input[_builtins.str]] = None,
                 config_type: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_by: Optional[pulumi.Input[_builtins.str]] = None,
                 endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 secret_type: Optional[pulumi.Input[_builtins.str]] = None,
                 sm_public_certificate_configuration_dns_classic_infrastructure_id: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering SmPublicCertificateConfigurationDnsClassicInfrastructure resources.
        :param pulumi.Input[_builtins.str] classic_infrastructure_password: Your classic infrastructure API key.For information about viewing and accessing your classic infrastructure API key, see
               the [docs](https://cloud.ibm.com/docs/account?topic=account-classic_keys).
        :param pulumi.Input[_builtins.str] classic_infrastructure_username: The username that is associated with your classic infrastructure account.In most cases, your classic infrastructure
               username is your `<account_id>_<email_address>`. For more information, see the
               [docs](https://cloud.ibm.com/docs/account?topic=account-classic_keys).
        :param pulumi.Input[_builtins.str] config_type: The configuration type.
        :param pulumi.Input[_builtins.str] created_at: The date when a resource was created. The date format follows RFC 3339.
        :param pulumi.Input[_builtins.str] created_by: The unique identifier that is associated with the entity that created the secret.
        :param pulumi.Input[_builtins.str] endpoint_type: public or private.
        :param pulumi.Input[_builtins.str] instance_id: The ID of the Secrets Manager instance.
        :param pulumi.Input[_builtins.str] name: A human-readable unique name to assign to your configuration.To protect your privacy, do not use personal data, such as
               your name or location, as an name for your secret.
        :param pulumi.Input[_builtins.str] region: The region of the Secrets Manager instance.
        :param pulumi.Input[_builtins.str] secret_type: The secret type. Supported types are arbitrary, certificates (imported, public, and private), IAM credentials,
               key-value, and user credentials.
        :param pulumi.Input[_builtins.str] updated_at: The date when a resource was recently modified. The date format follows RFC 3339.
        """
        if classic_infrastructure_password is not None:
            pulumi.set(__self__, "classic_infrastructure_password", classic_infrastructure_password)
        if classic_infrastructure_username is not None:
            pulumi.set(__self__, "classic_infrastructure_username", classic_infrastructure_username)
        if config_type is not None:
            pulumi.set(__self__, "config_type", config_type)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if endpoint_type is not None:
            pulumi.set(__self__, "endpoint_type", endpoint_type)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if secret_type is not None:
            pulumi.set(__self__, "secret_type", secret_type)
        if sm_public_certificate_configuration_dns_classic_infrastructure_id is not None:
            pulumi.set(__self__, "sm_public_certificate_configuration_dns_classic_infrastructure_id", sm_public_certificate_configuration_dns_classic_infrastructure_id)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="classicInfrastructurePassword")
    def classic_infrastructure_password(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Your classic infrastructure API key.For information about viewing and accessing your classic infrastructure API key, see
        the [docs](https://cloud.ibm.com/docs/account?topic=account-classic_keys).
        """
        return pulumi.get(self, "classic_infrastructure_password")

    @classic_infrastructure_password.setter
    def classic_infrastructure_password(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "classic_infrastructure_password", value)

    @_builtins.property
    @pulumi.getter(name="classicInfrastructureUsername")
    def classic_infrastructure_username(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The username that is associated with your classic infrastructure account.In most cases, your classic infrastructure
        username is your `<account_id>_<email_address>`. For more information, see the
        [docs](https://cloud.ibm.com/docs/account?topic=account-classic_keys).
        """
        return pulumi.get(self, "classic_infrastructure_username")

    @classic_infrastructure_username.setter
    def classic_infrastructure_username(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "classic_infrastructure_username", value)

    @_builtins.property
    @pulumi.getter(name="configType")
    def config_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The configuration type.
        """
        return pulumi.get(self, "config_type")

    @config_type.setter
    def config_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "config_type", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date when a resource was created. The date format follows RFC 3339.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique identifier that is associated with the entity that created the secret.
        """
        return pulumi.get(self, "created_by")

    @created_by.setter
    def created_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_by", value)

    @_builtins.property
    @pulumi.getter(name="endpointType")
    def endpoint_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        public or private.
        """
        return pulumi.get(self, "endpoint_type")

    @endpoint_type.setter
    def endpoint_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "endpoint_type", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the Secrets Manager instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        A human-readable unique name to assign to your configuration.To protect your privacy, do not use personal data, such as
        your name or location, as an name for your secret.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The region of the Secrets Manager instance.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="secretType")
    def secret_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The secret type. Supported types are arbitrary, certificates (imported, public, and private), IAM credentials,
        key-value, and user credentials.
        """
        return pulumi.get(self, "secret_type")

    @secret_type.setter
    def secret_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "secret_type", value)

    @_builtins.property
    @pulumi.getter(name="smPublicCertificateConfigurationDnsClassicInfrastructureId")
    def sm_public_certificate_configuration_dns_classic_infrastructure_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "sm_public_certificate_configuration_dns_classic_infrastructure_id")

    @sm_public_certificate_configuration_dns_classic_infrastructure_id.setter
    def sm_public_certificate_configuration_dns_classic_infrastructure_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "sm_public_certificate_configuration_dns_classic_infrastructure_id", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date when a resource was recently modified. The date format follows RFC 3339.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("ibm:index/smPublicCertificateConfigurationDnsClassicInfrastructure:SmPublicCertificateConfigurationDnsClassicInfrastructure")
class SmPublicCertificateConfigurationDnsClassicInfrastructure(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 classic_infrastructure_password: Optional[pulumi.Input[_builtins.str]] = None,
                 classic_infrastructure_username: Optional[pulumi.Input[_builtins.str]] = None,
                 endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 sm_public_certificate_configuration_dns_classic_infrastructure_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a SmPublicCertificateConfigurationDnsClassicInfrastructure resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] classic_infrastructure_password: Your classic infrastructure API key.For information about viewing and accessing your classic infrastructure API key, see
               the [docs](https://cloud.ibm.com/docs/account?topic=account-classic_keys).
        :param pulumi.Input[_builtins.str] classic_infrastructure_username: The username that is associated with your classic infrastructure account.In most cases, your classic infrastructure
               username is your `<account_id>_<email_address>`. For more information, see the
               [docs](https://cloud.ibm.com/docs/account?topic=account-classic_keys).
        :param pulumi.Input[_builtins.str] endpoint_type: public or private.
        :param pulumi.Input[_builtins.str] instance_id: The ID of the Secrets Manager instance.
        :param pulumi.Input[_builtins.str] name: A human-readable unique name to assign to your configuration.To protect your privacy, do not use personal data, such as
               your name or location, as an name for your secret.
        :param pulumi.Input[_builtins.str] region: The region of the Secrets Manager instance.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SmPublicCertificateConfigurationDnsClassicInfrastructureArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a SmPublicCertificateConfigurationDnsClassicInfrastructure resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param SmPublicCertificateConfigurationDnsClassicInfrastructureArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SmPublicCertificateConfigurationDnsClassicInfrastructureArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 classic_infrastructure_password: Optional[pulumi.Input[_builtins.str]] = None,
                 classic_infrastructure_username: Optional[pulumi.Input[_builtins.str]] = None,
                 endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 sm_public_certificate_configuration_dns_classic_infrastructure_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SmPublicCertificateConfigurationDnsClassicInfrastructureArgs.__new__(SmPublicCertificateConfigurationDnsClassicInfrastructureArgs)

            if classic_infrastructure_password is None and not opts.urn:
                raise TypeError("Missing required property 'classic_infrastructure_password'")
            __props__.__dict__["classic_infrastructure_password"] = classic_infrastructure_password
            if classic_infrastructure_username is None and not opts.urn:
                raise TypeError("Missing required property 'classic_infrastructure_username'")
            __props__.__dict__["classic_infrastructure_username"] = classic_infrastructure_username
            __props__.__dict__["endpoint_type"] = endpoint_type
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["sm_public_certificate_configuration_dns_classic_infrastructure_id"] = sm_public_certificate_configuration_dns_classic_infrastructure_id
            __props__.__dict__["config_type"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_by"] = None
            __props__.__dict__["secret_type"] = None
            __props__.__dict__["updated_at"] = None
        super(SmPublicCertificateConfigurationDnsClassicInfrastructure, __self__).__init__(
            'ibm:index/smPublicCertificateConfigurationDnsClassicInfrastructure:SmPublicCertificateConfigurationDnsClassicInfrastructure',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            classic_infrastructure_password: Optional[pulumi.Input[_builtins.str]] = None,
            classic_infrastructure_username: Optional[pulumi.Input[_builtins.str]] = None,
            config_type: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_by: Optional[pulumi.Input[_builtins.str]] = None,
            endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            secret_type: Optional[pulumi.Input[_builtins.str]] = None,
            sm_public_certificate_configuration_dns_classic_infrastructure_id: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'SmPublicCertificateConfigurationDnsClassicInfrastructure':
        """
        Get an existing SmPublicCertificateConfigurationDnsClassicInfrastructure resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] classic_infrastructure_password: Your classic infrastructure API key.For information about viewing and accessing your classic infrastructure API key, see
               the [docs](https://cloud.ibm.com/docs/account?topic=account-classic_keys).
        :param pulumi.Input[_builtins.str] classic_infrastructure_username: The username that is associated with your classic infrastructure account.In most cases, your classic infrastructure
               username is your `<account_id>_<email_address>`. For more information, see the
               [docs](https://cloud.ibm.com/docs/account?topic=account-classic_keys).
        :param pulumi.Input[_builtins.str] config_type: The configuration type.
        :param pulumi.Input[_builtins.str] created_at: The date when a resource was created. The date format follows RFC 3339.
        :param pulumi.Input[_builtins.str] created_by: The unique identifier that is associated with the entity that created the secret.
        :param pulumi.Input[_builtins.str] endpoint_type: public or private.
        :param pulumi.Input[_builtins.str] instance_id: The ID of the Secrets Manager instance.
        :param pulumi.Input[_builtins.str] name: A human-readable unique name to assign to your configuration.To protect your privacy, do not use personal data, such as
               your name or location, as an name for your secret.
        :param pulumi.Input[_builtins.str] region: The region of the Secrets Manager instance.
        :param pulumi.Input[_builtins.str] secret_type: The secret type. Supported types are arbitrary, certificates (imported, public, and private), IAM credentials,
               key-value, and user credentials.
        :param pulumi.Input[_builtins.str] updated_at: The date when a resource was recently modified. The date format follows RFC 3339.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SmPublicCertificateConfigurationDnsClassicInfrastructureState.__new__(_SmPublicCertificateConfigurationDnsClassicInfrastructureState)

        __props__.__dict__["classic_infrastructure_password"] = classic_infrastructure_password
        __props__.__dict__["classic_infrastructure_username"] = classic_infrastructure_username
        __props__.__dict__["config_type"] = config_type
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_by"] = created_by
        __props__.__dict__["endpoint_type"] = endpoint_type
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["secret_type"] = secret_type
        __props__.__dict__["sm_public_certificate_configuration_dns_classic_infrastructure_id"] = sm_public_certificate_configuration_dns_classic_infrastructure_id
        __props__.__dict__["updated_at"] = updated_at
        return SmPublicCertificateConfigurationDnsClassicInfrastructure(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="classicInfrastructurePassword")
    def classic_infrastructure_password(self) -> pulumi.Output[_builtins.str]:
        """
        Your classic infrastructure API key.For information about viewing and accessing your classic infrastructure API key, see
        the [docs](https://cloud.ibm.com/docs/account?topic=account-classic_keys).
        """
        return pulumi.get(self, "classic_infrastructure_password")

    @_builtins.property
    @pulumi.getter(name="classicInfrastructureUsername")
    def classic_infrastructure_username(self) -> pulumi.Output[_builtins.str]:
        """
        The username that is associated with your classic infrastructure account.In most cases, your classic infrastructure
        username is your `<account_id>_<email_address>`. For more information, see the
        [docs](https://cloud.ibm.com/docs/account?topic=account-classic_keys).
        """
        return pulumi.get(self, "classic_infrastructure_username")

    @_builtins.property
    @pulumi.getter(name="configType")
    def config_type(self) -> pulumi.Output[_builtins.str]:
        """
        The configuration type.
        """
        return pulumi.get(self, "config_type")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The date when a resource was created. The date format follows RFC 3339.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> pulumi.Output[_builtins.str]:
        """
        The unique identifier that is associated with the entity that created the secret.
        """
        return pulumi.get(self, "created_by")

    @_builtins.property
    @pulumi.getter(name="endpointType")
    def endpoint_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        public or private.
        """
        return pulumi.get(self, "endpoint_type")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the Secrets Manager instance.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        A human-readable unique name to assign to your configuration.To protect your privacy, do not use personal data, such as
        your name or location, as an name for your secret.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        The region of the Secrets Manager instance.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="secretType")
    def secret_type(self) -> pulumi.Output[_builtins.str]:
        """
        The secret type. Supported types are arbitrary, certificates (imported, public, and private), IAM credentials,
        key-value, and user credentials.
        """
        return pulumi.get(self, "secret_type")

    @_builtins.property
    @pulumi.getter(name="smPublicCertificateConfigurationDnsClassicInfrastructureId")
    def sm_public_certificate_configuration_dns_classic_infrastructure_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "sm_public_certificate_configuration_dns_classic_infrastructure_id")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The date when a resource was recently modified. The date format follows RFC 3339.
        """
        return pulumi.get(self, "updated_at")

