# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SchematicsActionArgs', 'SchematicsAction']

@pulumi.input_type
class SchematicsActionArgs:
    def __init__(__self__, *,
                 action_inputs: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionInputArgs']]]] = None,
                 action_outputs: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionOutputArgs']]]] = None,
                 bastion: Optional[pulumi.Input['SchematicsActionBastionArgs']] = None,
                 bastion_credential: Optional[pulumi.Input['SchematicsActionBastionCredentialArgs']] = None,
                 command_parameter: Optional[pulumi.Input[_builtins.str]] = None,
                 credentials: Optional[pulumi.Input['SchematicsActionCredentialsArgs']] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 inventory: Optional[pulumi.Input[_builtins.str]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 schematics_action_id: Optional[pulumi.Input[_builtins.str]] = None,
                 settings: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSettingArgs']]]] = None,
                 source_readme_url: Optional[pulumi.Input[_builtins.str]] = None,
                 source_type: Optional[pulumi.Input[_builtins.str]] = None,
                 sources: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSourceArgs']]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 targets_ini: Optional[pulumi.Input[_builtins.str]] = None,
                 user_states: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionUserStateArgs']]]] = None,
                 x_github_token: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a SchematicsAction resource.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionInputArgs']]] action_inputs: Input variables for the Action.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionOutputArgs']]] action_outputs: Output variables for the Action.
        :param pulumi.Input['SchematicsActionBastionArgs'] bastion: Describes a bastion resource.
        :param pulumi.Input['SchematicsActionBastionCredentialArgs'] bastion_credential: User editable variable data & system generated reference to value.
        :param pulumi.Input[_builtins.str] command_parameter: Schematics job command parameter (playbook-name).
        :param pulumi.Input['SchematicsActionCredentialsArgs'] credentials: credentials of the Action.
        :param pulumi.Input[_builtins.str] description: Action description.
        :param pulumi.Input[_builtins.str] inventory: Target inventory record ID, used by the action or ansible playbook.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] name: The unique name of your action. The name can be up to 128 characters long and can include alphanumeric characters,
               spaces, dashes, and underscores. **Example** you can use the name to stop action.
        :param pulumi.Input[_builtins.str] resource_group: Resource-group name for an action. By default, action is created in default resource group.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsActionSettingArgs']]] settings: Environment variables for the Action.
        :param pulumi.Input[_builtins.str] source_readme_url: URL of the `README` file, for the source URL.
        :param pulumi.Input[_builtins.str] source_type: Type of source for the Template.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsActionSourceArgs']]] sources: Source of templates, playbooks, or controls.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: Action tags.
        :param pulumi.Input[_builtins.str] targets_ini: Inventory of host and host group for the playbook in `INI` file format. For example, `"targets_ini": "[webserverhost]
               172.22.192.6 [dbhost] 172.22.192.5"`. For more information, about an inventory host group syntax, see [Inventory host
               groups](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-inventory-host-grps).
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsActionUserStateArgs']]] user_states: User defined status of the Schematics object.
        """
        if action_inputs is not None:
            pulumi.set(__self__, "action_inputs", action_inputs)
        if action_outputs is not None:
            pulumi.set(__self__, "action_outputs", action_outputs)
        if bastion is not None:
            pulumi.set(__self__, "bastion", bastion)
        if bastion_credential is not None:
            pulumi.set(__self__, "bastion_credential", bastion_credential)
        if command_parameter is not None:
            pulumi.set(__self__, "command_parameter", command_parameter)
        if credentials is not None:
            pulumi.set(__self__, "credentials", credentials)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if inventory is not None:
            pulumi.set(__self__, "inventory", inventory)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if resource_group is not None:
            pulumi.set(__self__, "resource_group", resource_group)
        if schematics_action_id is not None:
            pulumi.set(__self__, "schematics_action_id", schematics_action_id)
        if settings is not None:
            pulumi.set(__self__, "settings", settings)
        if source_readme_url is not None:
            pulumi.set(__self__, "source_readme_url", source_readme_url)
        if source_type is not None:
            pulumi.set(__self__, "source_type", source_type)
        if sources is not None:
            pulumi.set(__self__, "sources", sources)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if targets_ini is not None:
            pulumi.set(__self__, "targets_ini", targets_ini)
        if user_states is not None:
            pulumi.set(__self__, "user_states", user_states)
        if x_github_token is not None:
            pulumi.set(__self__, "x_github_token", x_github_token)

    @_builtins.property
    @pulumi.getter(name="actionInputs")
    def action_inputs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionInputArgs']]]]:
        """
        Input variables for the Action.
        """
        return pulumi.get(self, "action_inputs")

    @action_inputs.setter
    def action_inputs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionInputArgs']]]]):
        pulumi.set(self, "action_inputs", value)

    @_builtins.property
    @pulumi.getter(name="actionOutputs")
    def action_outputs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionOutputArgs']]]]:
        """
        Output variables for the Action.
        """
        return pulumi.get(self, "action_outputs")

    @action_outputs.setter
    def action_outputs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionOutputArgs']]]]):
        pulumi.set(self, "action_outputs", value)

    @_builtins.property
    @pulumi.getter
    def bastion(self) -> Optional[pulumi.Input['SchematicsActionBastionArgs']]:
        """
        Describes a bastion resource.
        """
        return pulumi.get(self, "bastion")

    @bastion.setter
    def bastion(self, value: Optional[pulumi.Input['SchematicsActionBastionArgs']]):
        pulumi.set(self, "bastion", value)

    @_builtins.property
    @pulumi.getter(name="bastionCredential")
    def bastion_credential(self) -> Optional[pulumi.Input['SchematicsActionBastionCredentialArgs']]:
        """
        User editable variable data & system generated reference to value.
        """
        return pulumi.get(self, "bastion_credential")

    @bastion_credential.setter
    def bastion_credential(self, value: Optional[pulumi.Input['SchematicsActionBastionCredentialArgs']]):
        pulumi.set(self, "bastion_credential", value)

    @_builtins.property
    @pulumi.getter(name="commandParameter")
    def command_parameter(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Schematics job command parameter (playbook-name).
        """
        return pulumi.get(self, "command_parameter")

    @command_parameter.setter
    def command_parameter(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "command_parameter", value)

    @_builtins.property
    @pulumi.getter
    def credentials(self) -> Optional[pulumi.Input['SchematicsActionCredentialsArgs']]:
        """
        credentials of the Action.
        """
        return pulumi.get(self, "credentials")

    @credentials.setter
    def credentials(self, value: Optional[pulumi.Input['SchematicsActionCredentialsArgs']]):
        pulumi.set(self, "credentials", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Action description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def inventory(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Target inventory record ID, used by the action or ansible playbook.
        """
        return pulumi.get(self, "inventory")

    @inventory.setter
    def inventory(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "inventory", value)

    @_builtins.property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "location", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique name of your action. The name can be up to 128 characters long and can include alphanumeric characters,
        spaces, dashes, and underscores. **Example** you can use the name to stop action.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Resource-group name for an action. By default, action is created in default resource group.
        """
        return pulumi.get(self, "resource_group")

    @resource_group.setter
    def resource_group(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_group", value)

    @_builtins.property
    @pulumi.getter(name="schematicsActionId")
    def schematics_action_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "schematics_action_id")

    @schematics_action_id.setter
    def schematics_action_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "schematics_action_id", value)

    @_builtins.property
    @pulumi.getter
    def settings(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSettingArgs']]]]:
        """
        Environment variables for the Action.
        """
        return pulumi.get(self, "settings")

    @settings.setter
    def settings(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSettingArgs']]]]):
        pulumi.set(self, "settings", value)

    @_builtins.property
    @pulumi.getter(name="sourceReadmeUrl")
    def source_readme_url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        URL of the `README` file, for the source URL.
        """
        return pulumi.get(self, "source_readme_url")

    @source_readme_url.setter
    def source_readme_url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_readme_url", value)

    @_builtins.property
    @pulumi.getter(name="sourceType")
    def source_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Type of source for the Template.
        """
        return pulumi.get(self, "source_type")

    @source_type.setter
    def source_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_type", value)

    @_builtins.property
    @pulumi.getter
    def sources(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSourceArgs']]]]:
        """
        Source of templates, playbooks, or controls.
        """
        return pulumi.get(self, "sources")

    @sources.setter
    def sources(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSourceArgs']]]]):
        pulumi.set(self, "sources", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Action tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter(name="targetsIni")
    def targets_ini(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Inventory of host and host group for the playbook in `INI` file format. For example, `"targets_ini": "[webserverhost]
        172.22.192.6 [dbhost] 172.22.192.5"`. For more information, about an inventory host group syntax, see [Inventory host
        groups](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-inventory-host-grps).
        """
        return pulumi.get(self, "targets_ini")

    @targets_ini.setter
    def targets_ini(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "targets_ini", value)

    @_builtins.property
    @pulumi.getter(name="userStates")
    def user_states(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionUserStateArgs']]]]:
        """
        User defined status of the Schematics object.
        """
        return pulumi.get(self, "user_states")

    @user_states.setter
    def user_states(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionUserStateArgs']]]]):
        pulumi.set(self, "user_states", value)

    @_builtins.property
    @pulumi.getter(name="xGithubToken")
    def x_github_token(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "x_github_token")

    @x_github_token.setter
    def x_github_token(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "x_github_token", value)


@pulumi.input_type
class _SchematicsActionState:
    def __init__(__self__, *,
                 account: Optional[pulumi.Input[_builtins.str]] = None,
                 action_inputs: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionInputArgs']]]] = None,
                 action_outputs: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionOutputArgs']]]] = None,
                 bastion: Optional[pulumi.Input['SchematicsActionBastionArgs']] = None,
                 bastion_credential: Optional[pulumi.Input['SchematicsActionBastionCredentialArgs']] = None,
                 command_parameter: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_by: Optional[pulumi.Input[_builtins.str]] = None,
                 credentials: Optional[pulumi.Input['SchematicsActionCredentialsArgs']] = None,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 inventory: Optional[pulumi.Input[_builtins.str]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 playbook_names: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 schematics_action_id: Optional[pulumi.Input[_builtins.str]] = None,
                 settings: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSettingArgs']]]] = None,
                 source_created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 source_created_by: Optional[pulumi.Input[_builtins.str]] = None,
                 source_readme_url: Optional[pulumi.Input[_builtins.str]] = None,
                 source_type: Optional[pulumi.Input[_builtins.str]] = None,
                 source_updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 source_updated_by: Optional[pulumi.Input[_builtins.str]] = None,
                 sources: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSourceArgs']]]] = None,
                 states: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionStateArgs']]]] = None,
                 sys_locks: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSysLockArgs']]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 targets_ini: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_by: Optional[pulumi.Input[_builtins.str]] = None,
                 user_states: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionUserStateArgs']]]] = None,
                 x_github_token: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering SchematicsAction resources.
        :param pulumi.Input[_builtins.str] account: Action account ID.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionInputArgs']]] action_inputs: Input variables for the Action.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionOutputArgs']]] action_outputs: Output variables for the Action.
        :param pulumi.Input['SchematicsActionBastionArgs'] bastion: Describes a bastion resource.
        :param pulumi.Input['SchematicsActionBastionCredentialArgs'] bastion_credential: User editable variable data & system generated reference to value.
        :param pulumi.Input[_builtins.str] command_parameter: Schematics job command parameter (playbook-name).
        :param pulumi.Input[_builtins.str] created_at: Action creation time.
        :param pulumi.Input[_builtins.str] created_by: E-mail address of the user who created an action.
        :param pulumi.Input['SchematicsActionCredentialsArgs'] credentials: credentials of the Action.
        :param pulumi.Input[_builtins.str] crn: Action Cloud Resource Name.
        :param pulumi.Input[_builtins.str] description: Action description.
        :param pulumi.Input[_builtins.str] inventory: Target inventory record ID, used by the action or ansible playbook.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] name: The unique name of your action. The name can be up to 128 characters long and can include alphanumeric characters,
               spaces, dashes, and underscores. **Example** you can use the name to stop action.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] playbook_names: Playbook names retrieved from the respository.
        :param pulumi.Input[_builtins.str] resource_group: Resource-group name for an action. By default, action is created in default resource group.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsActionSettingArgs']]] settings: Environment variables for the Action.
        :param pulumi.Input[_builtins.str] source_created_at: Action Playbook Source creation time.
        :param pulumi.Input[_builtins.str] source_created_by: E-mail address of user who created the Action Playbook Source.
        :param pulumi.Input[_builtins.str] source_readme_url: URL of the `README` file, for the source URL.
        :param pulumi.Input[_builtins.str] source_type: Type of source for the Template.
        :param pulumi.Input[_builtins.str] source_updated_at: The action playbook updation time.
        :param pulumi.Input[_builtins.str] source_updated_by: E-mail address of user who updated the action playbook source.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsActionSourceArgs']]] sources: Source of templates, playbooks, or controls.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsActionStateArgs']]] states: Computed state of the Action.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsActionSysLockArgs']]] sys_locks: System lock status.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: Action tags.
        :param pulumi.Input[_builtins.str] targets_ini: Inventory of host and host group for the playbook in `INI` file format. For example, `"targets_ini": "[webserverhost]
               172.22.192.6 [dbhost] 172.22.192.5"`. For more information, about an inventory host group syntax, see [Inventory host
               groups](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-inventory-host-grps).
        :param pulumi.Input[_builtins.str] updated_at: Action updation time.
        :param pulumi.Input[_builtins.str] updated_by: E-mail address of the user who updated an action.
        :param pulumi.Input[Sequence[pulumi.Input['SchematicsActionUserStateArgs']]] user_states: User defined status of the Schematics object.
        """
        if account is not None:
            pulumi.set(__self__, "account", account)
        if action_inputs is not None:
            pulumi.set(__self__, "action_inputs", action_inputs)
        if action_outputs is not None:
            pulumi.set(__self__, "action_outputs", action_outputs)
        if bastion is not None:
            pulumi.set(__self__, "bastion", bastion)
        if bastion_credential is not None:
            pulumi.set(__self__, "bastion_credential", bastion_credential)
        if command_parameter is not None:
            pulumi.set(__self__, "command_parameter", command_parameter)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if credentials is not None:
            pulumi.set(__self__, "credentials", credentials)
        if crn is not None:
            pulumi.set(__self__, "crn", crn)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if inventory is not None:
            pulumi.set(__self__, "inventory", inventory)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if playbook_names is not None:
            pulumi.set(__self__, "playbook_names", playbook_names)
        if resource_group is not None:
            pulumi.set(__self__, "resource_group", resource_group)
        if schematics_action_id is not None:
            pulumi.set(__self__, "schematics_action_id", schematics_action_id)
        if settings is not None:
            pulumi.set(__self__, "settings", settings)
        if source_created_at is not None:
            pulumi.set(__self__, "source_created_at", source_created_at)
        if source_created_by is not None:
            pulumi.set(__self__, "source_created_by", source_created_by)
        if source_readme_url is not None:
            pulumi.set(__self__, "source_readme_url", source_readme_url)
        if source_type is not None:
            pulumi.set(__self__, "source_type", source_type)
        if source_updated_at is not None:
            pulumi.set(__self__, "source_updated_at", source_updated_at)
        if source_updated_by is not None:
            pulumi.set(__self__, "source_updated_by", source_updated_by)
        if sources is not None:
            pulumi.set(__self__, "sources", sources)
        if states is not None:
            pulumi.set(__self__, "states", states)
        if sys_locks is not None:
            pulumi.set(__self__, "sys_locks", sys_locks)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if targets_ini is not None:
            pulumi.set(__self__, "targets_ini", targets_ini)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if updated_by is not None:
            pulumi.set(__self__, "updated_by", updated_by)
        if user_states is not None:
            pulumi.set(__self__, "user_states", user_states)
        if x_github_token is not None:
            pulumi.set(__self__, "x_github_token", x_github_token)

    @_builtins.property
    @pulumi.getter
    def account(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Action account ID.
        """
        return pulumi.get(self, "account")

    @account.setter
    def account(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "account", value)

    @_builtins.property
    @pulumi.getter(name="actionInputs")
    def action_inputs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionInputArgs']]]]:
        """
        Input variables for the Action.
        """
        return pulumi.get(self, "action_inputs")

    @action_inputs.setter
    def action_inputs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionInputArgs']]]]):
        pulumi.set(self, "action_inputs", value)

    @_builtins.property
    @pulumi.getter(name="actionOutputs")
    def action_outputs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionOutputArgs']]]]:
        """
        Output variables for the Action.
        """
        return pulumi.get(self, "action_outputs")

    @action_outputs.setter
    def action_outputs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionActionOutputArgs']]]]):
        pulumi.set(self, "action_outputs", value)

    @_builtins.property
    @pulumi.getter
    def bastion(self) -> Optional[pulumi.Input['SchematicsActionBastionArgs']]:
        """
        Describes a bastion resource.
        """
        return pulumi.get(self, "bastion")

    @bastion.setter
    def bastion(self, value: Optional[pulumi.Input['SchematicsActionBastionArgs']]):
        pulumi.set(self, "bastion", value)

    @_builtins.property
    @pulumi.getter(name="bastionCredential")
    def bastion_credential(self) -> Optional[pulumi.Input['SchematicsActionBastionCredentialArgs']]:
        """
        User editable variable data & system generated reference to value.
        """
        return pulumi.get(self, "bastion_credential")

    @bastion_credential.setter
    def bastion_credential(self, value: Optional[pulumi.Input['SchematicsActionBastionCredentialArgs']]):
        pulumi.set(self, "bastion_credential", value)

    @_builtins.property
    @pulumi.getter(name="commandParameter")
    def command_parameter(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Schematics job command parameter (playbook-name).
        """
        return pulumi.get(self, "command_parameter")

    @command_parameter.setter
    def command_parameter(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "command_parameter", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Action creation time.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        E-mail address of the user who created an action.
        """
        return pulumi.get(self, "created_by")

    @created_by.setter
    def created_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_by", value)

    @_builtins.property
    @pulumi.getter
    def credentials(self) -> Optional[pulumi.Input['SchematicsActionCredentialsArgs']]:
        """
        credentials of the Action.
        """
        return pulumi.get(self, "credentials")

    @credentials.setter
    def credentials(self, value: Optional[pulumi.Input['SchematicsActionCredentialsArgs']]):
        pulumi.set(self, "credentials", value)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Action Cloud Resource Name.
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Action description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def inventory(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Target inventory record ID, used by the action or ansible playbook.
        """
        return pulumi.get(self, "inventory")

    @inventory.setter
    def inventory(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "inventory", value)

    @_builtins.property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "location", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique name of your action. The name can be up to 128 characters long and can include alphanumeric characters,
        spaces, dashes, and underscores. **Example** you can use the name to stop action.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="playbookNames")
    def playbook_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Playbook names retrieved from the respository.
        """
        return pulumi.get(self, "playbook_names")

    @playbook_names.setter
    def playbook_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "playbook_names", value)

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Resource-group name for an action. By default, action is created in default resource group.
        """
        return pulumi.get(self, "resource_group")

    @resource_group.setter
    def resource_group(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_group", value)

    @_builtins.property
    @pulumi.getter(name="schematicsActionId")
    def schematics_action_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "schematics_action_id")

    @schematics_action_id.setter
    def schematics_action_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "schematics_action_id", value)

    @_builtins.property
    @pulumi.getter
    def settings(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSettingArgs']]]]:
        """
        Environment variables for the Action.
        """
        return pulumi.get(self, "settings")

    @settings.setter
    def settings(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSettingArgs']]]]):
        pulumi.set(self, "settings", value)

    @_builtins.property
    @pulumi.getter(name="sourceCreatedAt")
    def source_created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Action Playbook Source creation time.
        """
        return pulumi.get(self, "source_created_at")

    @source_created_at.setter
    def source_created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_created_at", value)

    @_builtins.property
    @pulumi.getter(name="sourceCreatedBy")
    def source_created_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        E-mail address of user who created the Action Playbook Source.
        """
        return pulumi.get(self, "source_created_by")

    @source_created_by.setter
    def source_created_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_created_by", value)

    @_builtins.property
    @pulumi.getter(name="sourceReadmeUrl")
    def source_readme_url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        URL of the `README` file, for the source URL.
        """
        return pulumi.get(self, "source_readme_url")

    @source_readme_url.setter
    def source_readme_url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_readme_url", value)

    @_builtins.property
    @pulumi.getter(name="sourceType")
    def source_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Type of source for the Template.
        """
        return pulumi.get(self, "source_type")

    @source_type.setter
    def source_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_type", value)

    @_builtins.property
    @pulumi.getter(name="sourceUpdatedAt")
    def source_updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The action playbook updation time.
        """
        return pulumi.get(self, "source_updated_at")

    @source_updated_at.setter
    def source_updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_updated_at", value)

    @_builtins.property
    @pulumi.getter(name="sourceUpdatedBy")
    def source_updated_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        E-mail address of user who updated the action playbook source.
        """
        return pulumi.get(self, "source_updated_by")

    @source_updated_by.setter
    def source_updated_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_updated_by", value)

    @_builtins.property
    @pulumi.getter
    def sources(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSourceArgs']]]]:
        """
        Source of templates, playbooks, or controls.
        """
        return pulumi.get(self, "sources")

    @sources.setter
    def sources(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSourceArgs']]]]):
        pulumi.set(self, "sources", value)

    @_builtins.property
    @pulumi.getter
    def states(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionStateArgs']]]]:
        """
        Computed state of the Action.
        """
        return pulumi.get(self, "states")

    @states.setter
    def states(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionStateArgs']]]]):
        pulumi.set(self, "states", value)

    @_builtins.property
    @pulumi.getter(name="sysLocks")
    def sys_locks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSysLockArgs']]]]:
        """
        System lock status.
        """
        return pulumi.get(self, "sys_locks")

    @sys_locks.setter
    def sys_locks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionSysLockArgs']]]]):
        pulumi.set(self, "sys_locks", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Action tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter(name="targetsIni")
    def targets_ini(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Inventory of host and host group for the playbook in `INI` file format. For example, `"targets_ini": "[webserverhost]
        172.22.192.6 [dbhost] 172.22.192.5"`. For more information, about an inventory host group syntax, see [Inventory host
        groups](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-inventory-host-grps).
        """
        return pulumi.get(self, "targets_ini")

    @targets_ini.setter
    def targets_ini(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "targets_ini", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Action updation time.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        E-mail address of the user who updated an action.
        """
        return pulumi.get(self, "updated_by")

    @updated_by.setter
    def updated_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_by", value)

    @_builtins.property
    @pulumi.getter(name="userStates")
    def user_states(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionUserStateArgs']]]]:
        """
        User defined status of the Schematics object.
        """
        return pulumi.get(self, "user_states")

    @user_states.setter
    def user_states(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SchematicsActionUserStateArgs']]]]):
        pulumi.set(self, "user_states", value)

    @_builtins.property
    @pulumi.getter(name="xGithubToken")
    def x_github_token(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "x_github_token")

    @x_github_token.setter
    def x_github_token(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "x_github_token", value)


@pulumi.type_token("ibm:index/schematicsAction:SchematicsAction")
class SchematicsAction(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action_inputs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionActionInputArgs', 'SchematicsActionActionInputArgsDict']]]]] = None,
                 action_outputs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionActionOutputArgs', 'SchematicsActionActionOutputArgsDict']]]]] = None,
                 bastion: Optional[pulumi.Input[Union['SchematicsActionBastionArgs', 'SchematicsActionBastionArgsDict']]] = None,
                 bastion_credential: Optional[pulumi.Input[Union['SchematicsActionBastionCredentialArgs', 'SchematicsActionBastionCredentialArgsDict']]] = None,
                 command_parameter: Optional[pulumi.Input[_builtins.str]] = None,
                 credentials: Optional[pulumi.Input[Union['SchematicsActionCredentialsArgs', 'SchematicsActionCredentialsArgsDict']]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 inventory: Optional[pulumi.Input[_builtins.str]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 schematics_action_id: Optional[pulumi.Input[_builtins.str]] = None,
                 settings: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionSettingArgs', 'SchematicsActionSettingArgsDict']]]]] = None,
                 source_readme_url: Optional[pulumi.Input[_builtins.str]] = None,
                 source_type: Optional[pulumi.Input[_builtins.str]] = None,
                 sources: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionSourceArgs', 'SchematicsActionSourceArgsDict']]]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 targets_ini: Optional[pulumi.Input[_builtins.str]] = None,
                 user_states: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionUserStateArgs', 'SchematicsActionUserStateArgsDict']]]]] = None,
                 x_github_token: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a SchematicsAction resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionActionInputArgs', 'SchematicsActionActionInputArgsDict']]]] action_inputs: Input variables for the Action.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionActionOutputArgs', 'SchematicsActionActionOutputArgsDict']]]] action_outputs: Output variables for the Action.
        :param pulumi.Input[Union['SchematicsActionBastionArgs', 'SchematicsActionBastionArgsDict']] bastion: Describes a bastion resource.
        :param pulumi.Input[Union['SchematicsActionBastionCredentialArgs', 'SchematicsActionBastionCredentialArgsDict']] bastion_credential: User editable variable data & system generated reference to value.
        :param pulumi.Input[_builtins.str] command_parameter: Schematics job command parameter (playbook-name).
        :param pulumi.Input[Union['SchematicsActionCredentialsArgs', 'SchematicsActionCredentialsArgsDict']] credentials: credentials of the Action.
        :param pulumi.Input[_builtins.str] description: Action description.
        :param pulumi.Input[_builtins.str] inventory: Target inventory record ID, used by the action or ansible playbook.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] name: The unique name of your action. The name can be up to 128 characters long and can include alphanumeric characters,
               spaces, dashes, and underscores. **Example** you can use the name to stop action.
        :param pulumi.Input[_builtins.str] resource_group: Resource-group name for an action. By default, action is created in default resource group.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionSettingArgs', 'SchematicsActionSettingArgsDict']]]] settings: Environment variables for the Action.
        :param pulumi.Input[_builtins.str] source_readme_url: URL of the `README` file, for the source URL.
        :param pulumi.Input[_builtins.str] source_type: Type of source for the Template.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionSourceArgs', 'SchematicsActionSourceArgsDict']]]] sources: Source of templates, playbooks, or controls.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: Action tags.
        :param pulumi.Input[_builtins.str] targets_ini: Inventory of host and host group for the playbook in `INI` file format. For example, `"targets_ini": "[webserverhost]
               172.22.192.6 [dbhost] 172.22.192.5"`. For more information, about an inventory host group syntax, see [Inventory host
               groups](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-inventory-host-grps).
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionUserStateArgs', 'SchematicsActionUserStateArgsDict']]]] user_states: User defined status of the Schematics object.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[SchematicsActionArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a SchematicsAction resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param SchematicsActionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SchematicsActionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action_inputs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionActionInputArgs', 'SchematicsActionActionInputArgsDict']]]]] = None,
                 action_outputs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionActionOutputArgs', 'SchematicsActionActionOutputArgsDict']]]]] = None,
                 bastion: Optional[pulumi.Input[Union['SchematicsActionBastionArgs', 'SchematicsActionBastionArgsDict']]] = None,
                 bastion_credential: Optional[pulumi.Input[Union['SchematicsActionBastionCredentialArgs', 'SchematicsActionBastionCredentialArgsDict']]] = None,
                 command_parameter: Optional[pulumi.Input[_builtins.str]] = None,
                 credentials: Optional[pulumi.Input[Union['SchematicsActionCredentialsArgs', 'SchematicsActionCredentialsArgsDict']]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 inventory: Optional[pulumi.Input[_builtins.str]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 schematics_action_id: Optional[pulumi.Input[_builtins.str]] = None,
                 settings: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionSettingArgs', 'SchematicsActionSettingArgsDict']]]]] = None,
                 source_readme_url: Optional[pulumi.Input[_builtins.str]] = None,
                 source_type: Optional[pulumi.Input[_builtins.str]] = None,
                 sources: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionSourceArgs', 'SchematicsActionSourceArgsDict']]]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 targets_ini: Optional[pulumi.Input[_builtins.str]] = None,
                 user_states: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionUserStateArgs', 'SchematicsActionUserStateArgsDict']]]]] = None,
                 x_github_token: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SchematicsActionArgs.__new__(SchematicsActionArgs)

            __props__.__dict__["action_inputs"] = action_inputs
            __props__.__dict__["action_outputs"] = action_outputs
            __props__.__dict__["bastion"] = bastion
            __props__.__dict__["bastion_credential"] = bastion_credential
            __props__.__dict__["command_parameter"] = command_parameter
            __props__.__dict__["credentials"] = credentials
            __props__.__dict__["description"] = description
            __props__.__dict__["inventory"] = inventory
            __props__.__dict__["location"] = location
            __props__.__dict__["name"] = name
            __props__.__dict__["resource_group"] = resource_group
            __props__.__dict__["schematics_action_id"] = schematics_action_id
            __props__.__dict__["settings"] = settings
            __props__.__dict__["source_readme_url"] = source_readme_url
            __props__.__dict__["source_type"] = source_type
            __props__.__dict__["sources"] = sources
            __props__.__dict__["tags"] = tags
            __props__.__dict__["targets_ini"] = targets_ini
            __props__.__dict__["user_states"] = user_states
            __props__.__dict__["x_github_token"] = x_github_token
            __props__.__dict__["account"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_by"] = None
            __props__.__dict__["crn"] = None
            __props__.__dict__["playbook_names"] = None
            __props__.__dict__["source_created_at"] = None
            __props__.__dict__["source_created_by"] = None
            __props__.__dict__["source_updated_at"] = None
            __props__.__dict__["source_updated_by"] = None
            __props__.__dict__["states"] = None
            __props__.__dict__["sys_locks"] = None
            __props__.__dict__["updated_at"] = None
            __props__.__dict__["updated_by"] = None
        super(SchematicsAction, __self__).__init__(
            'ibm:index/schematicsAction:SchematicsAction',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account: Optional[pulumi.Input[_builtins.str]] = None,
            action_inputs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionActionInputArgs', 'SchematicsActionActionInputArgsDict']]]]] = None,
            action_outputs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionActionOutputArgs', 'SchematicsActionActionOutputArgsDict']]]]] = None,
            bastion: Optional[pulumi.Input[Union['SchematicsActionBastionArgs', 'SchematicsActionBastionArgsDict']]] = None,
            bastion_credential: Optional[pulumi.Input[Union['SchematicsActionBastionCredentialArgs', 'SchematicsActionBastionCredentialArgsDict']]] = None,
            command_parameter: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_by: Optional[pulumi.Input[_builtins.str]] = None,
            credentials: Optional[pulumi.Input[Union['SchematicsActionCredentialsArgs', 'SchematicsActionCredentialsArgsDict']]] = None,
            crn: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            inventory: Optional[pulumi.Input[_builtins.str]] = None,
            location: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            playbook_names: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            resource_group: Optional[pulumi.Input[_builtins.str]] = None,
            schematics_action_id: Optional[pulumi.Input[_builtins.str]] = None,
            settings: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionSettingArgs', 'SchematicsActionSettingArgsDict']]]]] = None,
            source_created_at: Optional[pulumi.Input[_builtins.str]] = None,
            source_created_by: Optional[pulumi.Input[_builtins.str]] = None,
            source_readme_url: Optional[pulumi.Input[_builtins.str]] = None,
            source_type: Optional[pulumi.Input[_builtins.str]] = None,
            source_updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            source_updated_by: Optional[pulumi.Input[_builtins.str]] = None,
            sources: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionSourceArgs', 'SchematicsActionSourceArgsDict']]]]] = None,
            states: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionStateArgs', 'SchematicsActionStateArgsDict']]]]] = None,
            sys_locks: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionSysLockArgs', 'SchematicsActionSysLockArgsDict']]]]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            targets_ini: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            updated_by: Optional[pulumi.Input[_builtins.str]] = None,
            user_states: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionUserStateArgs', 'SchematicsActionUserStateArgsDict']]]]] = None,
            x_github_token: Optional[pulumi.Input[_builtins.str]] = None) -> 'SchematicsAction':
        """
        Get an existing SchematicsAction resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] account: Action account ID.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionActionInputArgs', 'SchematicsActionActionInputArgsDict']]]] action_inputs: Input variables for the Action.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionActionOutputArgs', 'SchematicsActionActionOutputArgsDict']]]] action_outputs: Output variables for the Action.
        :param pulumi.Input[Union['SchematicsActionBastionArgs', 'SchematicsActionBastionArgsDict']] bastion: Describes a bastion resource.
        :param pulumi.Input[Union['SchematicsActionBastionCredentialArgs', 'SchematicsActionBastionCredentialArgsDict']] bastion_credential: User editable variable data & system generated reference to value.
        :param pulumi.Input[_builtins.str] command_parameter: Schematics job command parameter (playbook-name).
        :param pulumi.Input[_builtins.str] created_at: Action creation time.
        :param pulumi.Input[_builtins.str] created_by: E-mail address of the user who created an action.
        :param pulumi.Input[Union['SchematicsActionCredentialsArgs', 'SchematicsActionCredentialsArgsDict']] credentials: credentials of the Action.
        :param pulumi.Input[_builtins.str] crn: Action Cloud Resource Name.
        :param pulumi.Input[_builtins.str] description: Action description.
        :param pulumi.Input[_builtins.str] inventory: Target inventory record ID, used by the action or ansible playbook.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] name: The unique name of your action. The name can be up to 128 characters long and can include alphanumeric characters,
               spaces, dashes, and underscores. **Example** you can use the name to stop action.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] playbook_names: Playbook names retrieved from the respository.
        :param pulumi.Input[_builtins.str] resource_group: Resource-group name for an action. By default, action is created in default resource group.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionSettingArgs', 'SchematicsActionSettingArgsDict']]]] settings: Environment variables for the Action.
        :param pulumi.Input[_builtins.str] source_created_at: Action Playbook Source creation time.
        :param pulumi.Input[_builtins.str] source_created_by: E-mail address of user who created the Action Playbook Source.
        :param pulumi.Input[_builtins.str] source_readme_url: URL of the `README` file, for the source URL.
        :param pulumi.Input[_builtins.str] source_type: Type of source for the Template.
        :param pulumi.Input[_builtins.str] source_updated_at: The action playbook updation time.
        :param pulumi.Input[_builtins.str] source_updated_by: E-mail address of user who updated the action playbook source.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionSourceArgs', 'SchematicsActionSourceArgsDict']]]] sources: Source of templates, playbooks, or controls.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionStateArgs', 'SchematicsActionStateArgsDict']]]] states: Computed state of the Action.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionSysLockArgs', 'SchematicsActionSysLockArgsDict']]]] sys_locks: System lock status.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: Action tags.
        :param pulumi.Input[_builtins.str] targets_ini: Inventory of host and host group for the playbook in `INI` file format. For example, `"targets_ini": "[webserverhost]
               172.22.192.6 [dbhost] 172.22.192.5"`. For more information, about an inventory host group syntax, see [Inventory host
               groups](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-inventory-host-grps).
        :param pulumi.Input[_builtins.str] updated_at: Action updation time.
        :param pulumi.Input[_builtins.str] updated_by: E-mail address of the user who updated an action.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SchematicsActionUserStateArgs', 'SchematicsActionUserStateArgsDict']]]] user_states: User defined status of the Schematics object.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SchematicsActionState.__new__(_SchematicsActionState)

        __props__.__dict__["account"] = account
        __props__.__dict__["action_inputs"] = action_inputs
        __props__.__dict__["action_outputs"] = action_outputs
        __props__.__dict__["bastion"] = bastion
        __props__.__dict__["bastion_credential"] = bastion_credential
        __props__.__dict__["command_parameter"] = command_parameter
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_by"] = created_by
        __props__.__dict__["credentials"] = credentials
        __props__.__dict__["crn"] = crn
        __props__.__dict__["description"] = description
        __props__.__dict__["inventory"] = inventory
        __props__.__dict__["location"] = location
        __props__.__dict__["name"] = name
        __props__.__dict__["playbook_names"] = playbook_names
        __props__.__dict__["resource_group"] = resource_group
        __props__.__dict__["schematics_action_id"] = schematics_action_id
        __props__.__dict__["settings"] = settings
        __props__.__dict__["source_created_at"] = source_created_at
        __props__.__dict__["source_created_by"] = source_created_by
        __props__.__dict__["source_readme_url"] = source_readme_url
        __props__.__dict__["source_type"] = source_type
        __props__.__dict__["source_updated_at"] = source_updated_at
        __props__.__dict__["source_updated_by"] = source_updated_by
        __props__.__dict__["sources"] = sources
        __props__.__dict__["states"] = states
        __props__.__dict__["sys_locks"] = sys_locks
        __props__.__dict__["tags"] = tags
        __props__.__dict__["targets_ini"] = targets_ini
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["updated_by"] = updated_by
        __props__.__dict__["user_states"] = user_states
        __props__.__dict__["x_github_token"] = x_github_token
        return SchematicsAction(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def account(self) -> pulumi.Output[_builtins.str]:
        """
        Action account ID.
        """
        return pulumi.get(self, "account")

    @_builtins.property
    @pulumi.getter(name="actionInputs")
    def action_inputs(self) -> pulumi.Output[Optional[Sequence['outputs.SchematicsActionActionInput']]]:
        """
        Input variables for the Action.
        """
        return pulumi.get(self, "action_inputs")

    @_builtins.property
    @pulumi.getter(name="actionOutputs")
    def action_outputs(self) -> pulumi.Output[Optional[Sequence['outputs.SchematicsActionActionOutput']]]:
        """
        Output variables for the Action.
        """
        return pulumi.get(self, "action_outputs")

    @_builtins.property
    @pulumi.getter
    def bastion(self) -> pulumi.Output[Optional['outputs.SchematicsActionBastion']]:
        """
        Describes a bastion resource.
        """
        return pulumi.get(self, "bastion")

    @_builtins.property
    @pulumi.getter(name="bastionCredential")
    def bastion_credential(self) -> pulumi.Output[Optional['outputs.SchematicsActionBastionCredential']]:
        """
        User editable variable data & system generated reference to value.
        """
        return pulumi.get(self, "bastion_credential")

    @_builtins.property
    @pulumi.getter(name="commandParameter")
    def command_parameter(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Schematics job command parameter (playbook-name).
        """
        return pulumi.get(self, "command_parameter")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Action creation time.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> pulumi.Output[_builtins.str]:
        """
        E-mail address of the user who created an action.
        """
        return pulumi.get(self, "created_by")

    @_builtins.property
    @pulumi.getter
    def credentials(self) -> pulumi.Output[Optional['outputs.SchematicsActionCredentials']]:
        """
        credentials of the Action.
        """
        return pulumi.get(self, "credentials")

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Output[_builtins.str]:
        """
        Action Cloud Resource Name.
        """
        return pulumi.get(self, "crn")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Action description.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def inventory(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Target inventory record ID, used by the action or ansible playbook.
        """
        return pulumi.get(self, "inventory")

    @_builtins.property
    @pulumi.getter
    def location(self) -> pulumi.Output[_builtins.str]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "location")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The unique name of your action. The name can be up to 128 characters long and can include alphanumeric characters,
        spaces, dashes, and underscores. **Example** you can use the name to stop action.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="playbookNames")
    def playbook_names(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        Playbook names retrieved from the respository.
        """
        return pulumi.get(self, "playbook_names")

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Resource-group name for an action. By default, action is created in default resource group.
        """
        return pulumi.get(self, "resource_group")

    @_builtins.property
    @pulumi.getter(name="schematicsActionId")
    def schematics_action_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "schematics_action_id")

    @_builtins.property
    @pulumi.getter
    def settings(self) -> pulumi.Output[Optional[Sequence['outputs.SchematicsActionSetting']]]:
        """
        Environment variables for the Action.
        """
        return pulumi.get(self, "settings")

    @_builtins.property
    @pulumi.getter(name="sourceCreatedAt")
    def source_created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Action Playbook Source creation time.
        """
        return pulumi.get(self, "source_created_at")

    @_builtins.property
    @pulumi.getter(name="sourceCreatedBy")
    def source_created_by(self) -> pulumi.Output[_builtins.str]:
        """
        E-mail address of user who created the Action Playbook Source.
        """
        return pulumi.get(self, "source_created_by")

    @_builtins.property
    @pulumi.getter(name="sourceReadmeUrl")
    def source_readme_url(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        URL of the `README` file, for the source URL.
        """
        return pulumi.get(self, "source_readme_url")

    @_builtins.property
    @pulumi.getter(name="sourceType")
    def source_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Type of source for the Template.
        """
        return pulumi.get(self, "source_type")

    @_builtins.property
    @pulumi.getter(name="sourceUpdatedAt")
    def source_updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The action playbook updation time.
        """
        return pulumi.get(self, "source_updated_at")

    @_builtins.property
    @pulumi.getter(name="sourceUpdatedBy")
    def source_updated_by(self) -> pulumi.Output[_builtins.str]:
        """
        E-mail address of user who updated the action playbook source.
        """
        return pulumi.get(self, "source_updated_by")

    @_builtins.property
    @pulumi.getter
    def sources(self) -> pulumi.Output[Optional[Sequence['outputs.SchematicsActionSource']]]:
        """
        Source of templates, playbooks, or controls.
        """
        return pulumi.get(self, "sources")

    @_builtins.property
    @pulumi.getter
    def states(self) -> pulumi.Output[Sequence['outputs.SchematicsActionState']]:
        """
        Computed state of the Action.
        """
        return pulumi.get(self, "states")

    @_builtins.property
    @pulumi.getter(name="sysLocks")
    def sys_locks(self) -> pulumi.Output[Sequence['outputs.SchematicsActionSysLock']]:
        """
        System lock status.
        """
        return pulumi.get(self, "sys_locks")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Action tags.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter(name="targetsIni")
    def targets_ini(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Inventory of host and host group for the playbook in `INI` file format. For example, `"targets_ini": "[webserverhost]
        172.22.192.6 [dbhost] 172.22.192.5"`. For more information, about an inventory host group syntax, see [Inventory host
        groups](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-inventory-host-grps).
        """
        return pulumi.get(self, "targets_ini")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Action updation time.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> pulumi.Output[_builtins.str]:
        """
        E-mail address of the user who updated an action.
        """
        return pulumi.get(self, "updated_by")

    @_builtins.property
    @pulumi.getter(name="userStates")
    def user_states(self) -> pulumi.Output[Optional[Sequence['outputs.SchematicsActionUserState']]]:
        """
        User defined status of the Schematics object.
        """
        return pulumi.get(self, "user_states")

    @_builtins.property
    @pulumi.getter(name="xGithubToken")
    def x_github_token(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "x_github_token")

