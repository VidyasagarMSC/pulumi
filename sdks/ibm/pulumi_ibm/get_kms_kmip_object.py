# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetKmsKmipObjectResult',
    'AwaitableGetKmsKmipObjectResult',
    'get_kms_kmip_object',
    'get_kms_kmip_object_output',
]

@pulumi.output_type
class GetKmsKmipObjectResult:
    """
    A collection of values returned by getKmsKmipObject.
    """
    def __init__(__self__, adapter_id=None, adapter_name=None, created_at=None, created_by=None, created_by_cert_id=None, destroyed_at=None, destroyed_by=None, destroyed_by_cert_id=None, endpoint_type=None, id=None, instance_id=None, object_id=None, object_state=None, object_type=None, updated_at=None, updated_by=None, updated_by_cert_id=None):
        if adapter_id and not isinstance(adapter_id, str):
            raise TypeError("Expected argument 'adapter_id' to be a str")
        pulumi.set(__self__, "adapter_id", adapter_id)
        if adapter_name and not isinstance(adapter_name, str):
            raise TypeError("Expected argument 'adapter_name' to be a str")
        pulumi.set(__self__, "adapter_name", adapter_name)
        if created_at and not isinstance(created_at, str):
            raise TypeError("Expected argument 'created_at' to be a str")
        pulumi.set(__self__, "created_at", created_at)
        if created_by and not isinstance(created_by, str):
            raise TypeError("Expected argument 'created_by' to be a str")
        pulumi.set(__self__, "created_by", created_by)
        if created_by_cert_id and not isinstance(created_by_cert_id, str):
            raise TypeError("Expected argument 'created_by_cert_id' to be a str")
        pulumi.set(__self__, "created_by_cert_id", created_by_cert_id)
        if destroyed_at and not isinstance(destroyed_at, str):
            raise TypeError("Expected argument 'destroyed_at' to be a str")
        pulumi.set(__self__, "destroyed_at", destroyed_at)
        if destroyed_by and not isinstance(destroyed_by, str):
            raise TypeError("Expected argument 'destroyed_by' to be a str")
        pulumi.set(__self__, "destroyed_by", destroyed_by)
        if destroyed_by_cert_id and not isinstance(destroyed_by_cert_id, str):
            raise TypeError("Expected argument 'destroyed_by_cert_id' to be a str")
        pulumi.set(__self__, "destroyed_by_cert_id", destroyed_by_cert_id)
        if endpoint_type and not isinstance(endpoint_type, str):
            raise TypeError("Expected argument 'endpoint_type' to be a str")
        pulumi.set(__self__, "endpoint_type", endpoint_type)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if object_id and not isinstance(object_id, str):
            raise TypeError("Expected argument 'object_id' to be a str")
        pulumi.set(__self__, "object_id", object_id)
        if object_state and not isinstance(object_state, float):
            raise TypeError("Expected argument 'object_state' to be a float")
        pulumi.set(__self__, "object_state", object_state)
        if object_type and not isinstance(object_type, float):
            raise TypeError("Expected argument 'object_type' to be a float")
        pulumi.set(__self__, "object_type", object_type)
        if updated_at and not isinstance(updated_at, str):
            raise TypeError("Expected argument 'updated_at' to be a str")
        pulumi.set(__self__, "updated_at", updated_at)
        if updated_by and not isinstance(updated_by, str):
            raise TypeError("Expected argument 'updated_by' to be a str")
        pulumi.set(__self__, "updated_by", updated_by)
        if updated_by_cert_id and not isinstance(updated_by_cert_id, str):
            raise TypeError("Expected argument 'updated_by_cert_id' to be a str")
        pulumi.set(__self__, "updated_by_cert_id", updated_by_cert_id)

    @_builtins.property
    @pulumi.getter(name="adapterId")
    def adapter_id(self) -> _builtins.str:
        return pulumi.get(self, "adapter_id")

    @_builtins.property
    @pulumi.getter(name="adapterName")
    def adapter_name(self) -> _builtins.str:
        return pulumi.get(self, "adapter_name")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> _builtins.str:
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> _builtins.str:
        return pulumi.get(self, "created_by")

    @_builtins.property
    @pulumi.getter(name="createdByCertId")
    def created_by_cert_id(self) -> _builtins.str:
        return pulumi.get(self, "created_by_cert_id")

    @_builtins.property
    @pulumi.getter(name="destroyedAt")
    def destroyed_at(self) -> _builtins.str:
        return pulumi.get(self, "destroyed_at")

    @_builtins.property
    @pulumi.getter(name="destroyedBy")
    def destroyed_by(self) -> _builtins.str:
        return pulumi.get(self, "destroyed_by")

    @_builtins.property
    @pulumi.getter(name="destroyedByCertId")
    def destroyed_by_cert_id(self) -> _builtins.str:
        return pulumi.get(self, "destroyed_by_cert_id")

    @_builtins.property
    @pulumi.getter(name="endpointType")
    def endpoint_type(self) -> _builtins.str:
        return pulumi.get(self, "endpoint_type")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> _builtins.str:
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter(name="objectId")
    def object_id(self) -> _builtins.str:
        return pulumi.get(self, "object_id")

    @_builtins.property
    @pulumi.getter(name="objectState")
    def object_state(self) -> _builtins.float:
        return pulumi.get(self, "object_state")

    @_builtins.property
    @pulumi.getter(name="objectType")
    def object_type(self) -> _builtins.float:
        return pulumi.get(self, "object_type")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> _builtins.str:
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> _builtins.str:
        return pulumi.get(self, "updated_by")

    @_builtins.property
    @pulumi.getter(name="updatedByCertId")
    def updated_by_cert_id(self) -> _builtins.str:
        return pulumi.get(self, "updated_by_cert_id")


class AwaitableGetKmsKmipObjectResult(GetKmsKmipObjectResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetKmsKmipObjectResult(
            adapter_id=self.adapter_id,
            adapter_name=self.adapter_name,
            created_at=self.created_at,
            created_by=self.created_by,
            created_by_cert_id=self.created_by_cert_id,
            destroyed_at=self.destroyed_at,
            destroyed_by=self.destroyed_by,
            destroyed_by_cert_id=self.destroyed_by_cert_id,
            endpoint_type=self.endpoint_type,
            id=self.id,
            instance_id=self.instance_id,
            object_id=self.object_id,
            object_state=self.object_state,
            object_type=self.object_type,
            updated_at=self.updated_at,
            updated_by=self.updated_by,
            updated_by_cert_id=self.updated_by_cert_id)


def get_kms_kmip_object(adapter_id: Optional[_builtins.str] = None,
                        adapter_name: Optional[_builtins.str] = None,
                        endpoint_type: Optional[_builtins.str] = None,
                        id: Optional[_builtins.str] = None,
                        instance_id: Optional[_builtins.str] = None,
                        object_id: Optional[_builtins.str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetKmsKmipObjectResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['adapterId'] = adapter_id
    __args__['adapterName'] = adapter_name
    __args__['endpointType'] = endpoint_type
    __args__['id'] = id
    __args__['instanceId'] = instance_id
    __args__['objectId'] = object_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getKmsKmipObject:getKmsKmipObject', __args__, opts=opts, typ=GetKmsKmipObjectResult, package_ref=_utilities.get_package()).value

    return AwaitableGetKmsKmipObjectResult(
        adapter_id=pulumi.get(__ret__, 'adapter_id'),
        adapter_name=pulumi.get(__ret__, 'adapter_name'),
        created_at=pulumi.get(__ret__, 'created_at'),
        created_by=pulumi.get(__ret__, 'created_by'),
        created_by_cert_id=pulumi.get(__ret__, 'created_by_cert_id'),
        destroyed_at=pulumi.get(__ret__, 'destroyed_at'),
        destroyed_by=pulumi.get(__ret__, 'destroyed_by'),
        destroyed_by_cert_id=pulumi.get(__ret__, 'destroyed_by_cert_id'),
        endpoint_type=pulumi.get(__ret__, 'endpoint_type'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        object_id=pulumi.get(__ret__, 'object_id'),
        object_state=pulumi.get(__ret__, 'object_state'),
        object_type=pulumi.get(__ret__, 'object_type'),
        updated_at=pulumi.get(__ret__, 'updated_at'),
        updated_by=pulumi.get(__ret__, 'updated_by'),
        updated_by_cert_id=pulumi.get(__ret__, 'updated_by_cert_id'))
def get_kms_kmip_object_output(adapter_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               adapter_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               endpoint_type: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                               object_id: Optional[pulumi.Input[_builtins.str]] = None,
                               opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetKmsKmipObjectResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['adapterId'] = adapter_id
    __args__['adapterName'] = adapter_name
    __args__['endpointType'] = endpoint_type
    __args__['id'] = id
    __args__['instanceId'] = instance_id
    __args__['objectId'] = object_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getKmsKmipObject:getKmsKmipObject', __args__, opts=opts, typ=GetKmsKmipObjectResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetKmsKmipObjectResult(
        adapter_id=pulumi.get(__response__, 'adapter_id'),
        adapter_name=pulumi.get(__response__, 'adapter_name'),
        created_at=pulumi.get(__response__, 'created_at'),
        created_by=pulumi.get(__response__, 'created_by'),
        created_by_cert_id=pulumi.get(__response__, 'created_by_cert_id'),
        destroyed_at=pulumi.get(__response__, 'destroyed_at'),
        destroyed_by=pulumi.get(__response__, 'destroyed_by'),
        destroyed_by_cert_id=pulumi.get(__response__, 'destroyed_by_cert_id'),
        endpoint_type=pulumi.get(__response__, 'endpoint_type'),
        id=pulumi.get(__response__, 'id'),
        instance_id=pulumi.get(__response__, 'instance_id'),
        object_id=pulumi.get(__response__, 'object_id'),
        object_state=pulumi.get(__response__, 'object_state'),
        object_type=pulumi.get(__response__, 'object_type'),
        updated_at=pulumi.get(__response__, 'updated_at'),
        updated_by=pulumi.get(__response__, 'updated_by'),
        updated_by_cert_id=pulumi.get(__response__, 'updated_by_cert_id')))
