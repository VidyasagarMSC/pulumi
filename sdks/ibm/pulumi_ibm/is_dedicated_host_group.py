# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IsDedicatedHostGroupArgs', 'IsDedicatedHostGroup']

@pulumi.input_type
class IsDedicatedHostGroupArgs:
    def __init__(__self__, *,
                 class_: pulumi.Input[_builtins.str],
                 family: pulumi.Input[_builtins.str],
                 zone: pulumi.Input[_builtins.str],
                 is_dedicated_host_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a IsDedicatedHostGroup resource.
        :param pulumi.Input[_builtins.str] class_: The dedicated host profile class for hosts in this group.
        :param pulumi.Input[_builtins.str] family: The dedicated host profile family for hosts in this group.
        :param pulumi.Input[_builtins.str] zone: The globally unique name of the zone this dedicated host group will reside in.
        :param pulumi.Input[_builtins.str] name: The unique user-defined name for this dedicated host group. If unspecified, the name will be a hyphenated list of
               randomly-selected words.
        :param pulumi.Input[_builtins.str] resource_group: The unique identifier of the resource group to use. If unspecified, the account's [default
               resourcegroup](https://cloud.ibm.com/apidocs/resource-manager#introduction) is used.
        """
        pulumi.set(__self__, "class_", class_)
        pulumi.set(__self__, "family", family)
        pulumi.set(__self__, "zone", zone)
        if is_dedicated_host_group_id is not None:
            pulumi.set(__self__, "is_dedicated_host_group_id", is_dedicated_host_group_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if resource_group is not None:
            pulumi.set(__self__, "resource_group", resource_group)

    @_builtins.property
    @pulumi.getter(name="class")
    def class_(self) -> pulumi.Input[_builtins.str]:
        """
        The dedicated host profile class for hosts in this group.
        """
        return pulumi.get(self, "class_")

    @class_.setter
    def class_(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "class_", value)

    @_builtins.property
    @pulumi.getter
    def family(self) -> pulumi.Input[_builtins.str]:
        """
        The dedicated host profile family for hosts in this group.
        """
        return pulumi.get(self, "family")

    @family.setter
    def family(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "family", value)

    @_builtins.property
    @pulumi.getter
    def zone(self) -> pulumi.Input[_builtins.str]:
        """
        The globally unique name of the zone this dedicated host group will reside in.
        """
        return pulumi.get(self, "zone")

    @zone.setter
    def zone(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "zone", value)

    @_builtins.property
    @pulumi.getter(name="isDedicatedHostGroupId")
    def is_dedicated_host_group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "is_dedicated_host_group_id")

    @is_dedicated_host_group_id.setter
    def is_dedicated_host_group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "is_dedicated_host_group_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique user-defined name for this dedicated host group. If unspecified, the name will be a hyphenated list of
        randomly-selected words.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique identifier of the resource group to use. If unspecified, the account's [default
        resourcegroup](https://cloud.ibm.com/apidocs/resource-manager#introduction) is used.
        """
        return pulumi.get(self, "resource_group")

    @resource_group.setter
    def resource_group(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_group", value)


@pulumi.input_type
class _IsDedicatedHostGroupState:
    def __init__(__self__, *,
                 class_: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 dedicated_hosts: Optional[pulumi.Input[Sequence[pulumi.Input['IsDedicatedHostGroupDedicatedHostArgs']]]] = None,
                 family: Optional[pulumi.Input[_builtins.str]] = None,
                 href: Optional[pulumi.Input[_builtins.str]] = None,
                 is_dedicated_host_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_type: Optional[pulumi.Input[_builtins.str]] = None,
                 supported_instance_profiles: Optional[pulumi.Input[Sequence[pulumi.Input['IsDedicatedHostGroupSupportedInstanceProfileArgs']]]] = None,
                 zone: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering IsDedicatedHostGroup resources.
        :param pulumi.Input[_builtins.str] class_: The dedicated host profile class for hosts in this group.
        :param pulumi.Input[_builtins.str] created_at: The date and time that the dedicated host group was created.
        :param pulumi.Input[_builtins.str] crn: The CRN for this dedicated host group.
        :param pulumi.Input[Sequence[pulumi.Input['IsDedicatedHostGroupDedicatedHostArgs']]] dedicated_hosts: The dedicated hosts that are in this dedicated host group.
        :param pulumi.Input[_builtins.str] family: The dedicated host profile family for hosts in this group.
        :param pulumi.Input[_builtins.str] href: The URL for this dedicated host group.
        :param pulumi.Input[_builtins.str] name: The unique user-defined name for this dedicated host group. If unspecified, the name will be a hyphenated list of
               randomly-selected words.
        :param pulumi.Input[_builtins.str] resource_group: The unique identifier of the resource group to use. If unspecified, the account's [default
               resourcegroup](https://cloud.ibm.com/apidocs/resource-manager#introduction) is used.
        :param pulumi.Input[_builtins.str] resource_type: The type of resource referenced.
        :param pulumi.Input[Sequence[pulumi.Input['IsDedicatedHostGroupSupportedInstanceProfileArgs']]] supported_instance_profiles: Array of instance profiles that can be used by instances placed on this dedicated host group.
        :param pulumi.Input[_builtins.str] zone: The globally unique name of the zone this dedicated host group will reside in.
        """
        if class_ is not None:
            pulumi.set(__self__, "class_", class_)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if crn is not None:
            pulumi.set(__self__, "crn", crn)
        if dedicated_hosts is not None:
            pulumi.set(__self__, "dedicated_hosts", dedicated_hosts)
        if family is not None:
            pulumi.set(__self__, "family", family)
        if href is not None:
            pulumi.set(__self__, "href", href)
        if is_dedicated_host_group_id is not None:
            pulumi.set(__self__, "is_dedicated_host_group_id", is_dedicated_host_group_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if resource_group is not None:
            pulumi.set(__self__, "resource_group", resource_group)
        if resource_type is not None:
            pulumi.set(__self__, "resource_type", resource_type)
        if supported_instance_profiles is not None:
            pulumi.set(__self__, "supported_instance_profiles", supported_instance_profiles)
        if zone is not None:
            pulumi.set(__self__, "zone", zone)

    @_builtins.property
    @pulumi.getter(name="class")
    def class_(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The dedicated host profile class for hosts in this group.
        """
        return pulumi.get(self, "class_")

    @class_.setter
    def class_(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "class_", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date and time that the dedicated host group was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The CRN for this dedicated host group.
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter(name="dedicatedHosts")
    def dedicated_hosts(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IsDedicatedHostGroupDedicatedHostArgs']]]]:
        """
        The dedicated hosts that are in this dedicated host group.
        """
        return pulumi.get(self, "dedicated_hosts")

    @dedicated_hosts.setter
    def dedicated_hosts(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IsDedicatedHostGroupDedicatedHostArgs']]]]):
        pulumi.set(self, "dedicated_hosts", value)

    @_builtins.property
    @pulumi.getter
    def family(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The dedicated host profile family for hosts in this group.
        """
        return pulumi.get(self, "family")

    @family.setter
    def family(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "family", value)

    @_builtins.property
    @pulumi.getter
    def href(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL for this dedicated host group.
        """
        return pulumi.get(self, "href")

    @href.setter
    def href(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "href", value)

    @_builtins.property
    @pulumi.getter(name="isDedicatedHostGroupId")
    def is_dedicated_host_group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "is_dedicated_host_group_id")

    @is_dedicated_host_group_id.setter
    def is_dedicated_host_group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "is_dedicated_host_group_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique user-defined name for this dedicated host group. If unspecified, the name will be a hyphenated list of
        randomly-selected words.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique identifier of the resource group to use. If unspecified, the account's [default
        resourcegroup](https://cloud.ibm.com/apidocs/resource-manager#introduction) is used.
        """
        return pulumi.get(self, "resource_group")

    @resource_group.setter
    def resource_group(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_group", value)

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The type of resource referenced.
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_type", value)

    @_builtins.property
    @pulumi.getter(name="supportedInstanceProfiles")
    def supported_instance_profiles(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IsDedicatedHostGroupSupportedInstanceProfileArgs']]]]:
        """
        Array of instance profiles that can be used by instances placed on this dedicated host group.
        """
        return pulumi.get(self, "supported_instance_profiles")

    @supported_instance_profiles.setter
    def supported_instance_profiles(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IsDedicatedHostGroupSupportedInstanceProfileArgs']]]]):
        pulumi.set(self, "supported_instance_profiles", value)

    @_builtins.property
    @pulumi.getter
    def zone(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The globally unique name of the zone this dedicated host group will reside in.
        """
        return pulumi.get(self, "zone")

    @zone.setter
    def zone(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "zone", value)


@pulumi.type_token("ibm:index/isDedicatedHostGroup:IsDedicatedHostGroup")
class IsDedicatedHostGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 class_: Optional[pulumi.Input[_builtins.str]] = None,
                 family: Optional[pulumi.Input[_builtins.str]] = None,
                 is_dedicated_host_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 zone: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a IsDedicatedHostGroup resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] class_: The dedicated host profile class for hosts in this group.
        :param pulumi.Input[_builtins.str] family: The dedicated host profile family for hosts in this group.
        :param pulumi.Input[_builtins.str] name: The unique user-defined name for this dedicated host group. If unspecified, the name will be a hyphenated list of
               randomly-selected words.
        :param pulumi.Input[_builtins.str] resource_group: The unique identifier of the resource group to use. If unspecified, the account's [default
               resourcegroup](https://cloud.ibm.com/apidocs/resource-manager#introduction) is used.
        :param pulumi.Input[_builtins.str] zone: The globally unique name of the zone this dedicated host group will reside in.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IsDedicatedHostGroupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a IsDedicatedHostGroup resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param IsDedicatedHostGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IsDedicatedHostGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 class_: Optional[pulumi.Input[_builtins.str]] = None,
                 family: Optional[pulumi.Input[_builtins.str]] = None,
                 is_dedicated_host_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 zone: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IsDedicatedHostGroupArgs.__new__(IsDedicatedHostGroupArgs)

            if class_ is None and not opts.urn:
                raise TypeError("Missing required property 'class_'")
            __props__.__dict__["class_"] = class_
            if family is None and not opts.urn:
                raise TypeError("Missing required property 'family'")
            __props__.__dict__["family"] = family
            __props__.__dict__["is_dedicated_host_group_id"] = is_dedicated_host_group_id
            __props__.__dict__["name"] = name
            __props__.__dict__["resource_group"] = resource_group
            if zone is None and not opts.urn:
                raise TypeError("Missing required property 'zone'")
            __props__.__dict__["zone"] = zone
            __props__.__dict__["created_at"] = None
            __props__.__dict__["crn"] = None
            __props__.__dict__["dedicated_hosts"] = None
            __props__.__dict__["href"] = None
            __props__.__dict__["resource_type"] = None
            __props__.__dict__["supported_instance_profiles"] = None
        super(IsDedicatedHostGroup, __self__).__init__(
            'ibm:index/isDedicatedHostGroup:IsDedicatedHostGroup',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            class_: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            crn: Optional[pulumi.Input[_builtins.str]] = None,
            dedicated_hosts: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IsDedicatedHostGroupDedicatedHostArgs', 'IsDedicatedHostGroupDedicatedHostArgsDict']]]]] = None,
            family: Optional[pulumi.Input[_builtins.str]] = None,
            href: Optional[pulumi.Input[_builtins.str]] = None,
            is_dedicated_host_group_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            resource_group: Optional[pulumi.Input[_builtins.str]] = None,
            resource_type: Optional[pulumi.Input[_builtins.str]] = None,
            supported_instance_profiles: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IsDedicatedHostGroupSupportedInstanceProfileArgs', 'IsDedicatedHostGroupSupportedInstanceProfileArgsDict']]]]] = None,
            zone: Optional[pulumi.Input[_builtins.str]] = None) -> 'IsDedicatedHostGroup':
        """
        Get an existing IsDedicatedHostGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] class_: The dedicated host profile class for hosts in this group.
        :param pulumi.Input[_builtins.str] created_at: The date and time that the dedicated host group was created.
        :param pulumi.Input[_builtins.str] crn: The CRN for this dedicated host group.
        :param pulumi.Input[Sequence[pulumi.Input[Union['IsDedicatedHostGroupDedicatedHostArgs', 'IsDedicatedHostGroupDedicatedHostArgsDict']]]] dedicated_hosts: The dedicated hosts that are in this dedicated host group.
        :param pulumi.Input[_builtins.str] family: The dedicated host profile family for hosts in this group.
        :param pulumi.Input[_builtins.str] href: The URL for this dedicated host group.
        :param pulumi.Input[_builtins.str] name: The unique user-defined name for this dedicated host group. If unspecified, the name will be a hyphenated list of
               randomly-selected words.
        :param pulumi.Input[_builtins.str] resource_group: The unique identifier of the resource group to use. If unspecified, the account's [default
               resourcegroup](https://cloud.ibm.com/apidocs/resource-manager#introduction) is used.
        :param pulumi.Input[_builtins.str] resource_type: The type of resource referenced.
        :param pulumi.Input[Sequence[pulumi.Input[Union['IsDedicatedHostGroupSupportedInstanceProfileArgs', 'IsDedicatedHostGroupSupportedInstanceProfileArgsDict']]]] supported_instance_profiles: Array of instance profiles that can be used by instances placed on this dedicated host group.
        :param pulumi.Input[_builtins.str] zone: The globally unique name of the zone this dedicated host group will reside in.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IsDedicatedHostGroupState.__new__(_IsDedicatedHostGroupState)

        __props__.__dict__["class_"] = class_
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["crn"] = crn
        __props__.__dict__["dedicated_hosts"] = dedicated_hosts
        __props__.__dict__["family"] = family
        __props__.__dict__["href"] = href
        __props__.__dict__["is_dedicated_host_group_id"] = is_dedicated_host_group_id
        __props__.__dict__["name"] = name
        __props__.__dict__["resource_group"] = resource_group
        __props__.__dict__["resource_type"] = resource_type
        __props__.__dict__["supported_instance_profiles"] = supported_instance_profiles
        __props__.__dict__["zone"] = zone
        return IsDedicatedHostGroup(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="class")
    def class_(self) -> pulumi.Output[_builtins.str]:
        """
        The dedicated host profile class for hosts in this group.
        """
        return pulumi.get(self, "class_")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The date and time that the dedicated host group was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Output[_builtins.str]:
        """
        The CRN for this dedicated host group.
        """
        return pulumi.get(self, "crn")

    @_builtins.property
    @pulumi.getter(name="dedicatedHosts")
    def dedicated_hosts(self) -> pulumi.Output[Sequence['outputs.IsDedicatedHostGroupDedicatedHost']]:
        """
        The dedicated hosts that are in this dedicated host group.
        """
        return pulumi.get(self, "dedicated_hosts")

    @_builtins.property
    @pulumi.getter
    def family(self) -> pulumi.Output[_builtins.str]:
        """
        The dedicated host profile family for hosts in this group.
        """
        return pulumi.get(self, "family")

    @_builtins.property
    @pulumi.getter
    def href(self) -> pulumi.Output[_builtins.str]:
        """
        The URL for this dedicated host group.
        """
        return pulumi.get(self, "href")

    @_builtins.property
    @pulumi.getter(name="isDedicatedHostGroupId")
    def is_dedicated_host_group_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "is_dedicated_host_group_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The unique user-defined name for this dedicated host group. If unspecified, the name will be a hyphenated list of
        randomly-selected words.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> pulumi.Output[_builtins.str]:
        """
        The unique identifier of the resource group to use. If unspecified, the account's [default
        resourcegroup](https://cloud.ibm.com/apidocs/resource-manager#introduction) is used.
        """
        return pulumi.get(self, "resource_group")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> pulumi.Output[_builtins.str]:
        """
        The type of resource referenced.
        """
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter(name="supportedInstanceProfiles")
    def supported_instance_profiles(self) -> pulumi.Output[Sequence['outputs.IsDedicatedHostGroupSupportedInstanceProfile']]:
        """
        Array of instance profiles that can be used by instances placed on this dedicated host group.
        """
        return pulumi.get(self, "supported_instance_profiles")

    @_builtins.property
    @pulumi.getter
    def zone(self) -> pulumi.Output[_builtins.str]:
        """
        The globally unique name of the zone this dedicated host group will reside in.
        """
        return pulumi.get(self, "zone")

