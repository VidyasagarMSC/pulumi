# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetDlGatewayMacsecCaksResult',
    'AwaitableGetDlGatewayMacsecCaksResult',
    'get_dl_gateway_macsec_caks',
    'get_dl_gateway_macsec_caks_output',
]

@pulumi.output_type
class GetDlGatewayMacsecCaksResult:
    """
    A collection of values returned by getDlGatewayMacsecCaks.
    """
    def __init__(__self__, caks=None, gateway=None, id=None):
        if caks and not isinstance(caks, list):
            raise TypeError("Expected argument 'caks' to be a list")
        pulumi.set(__self__, "caks", caks)
        if gateway and not isinstance(gateway, str):
            raise TypeError("Expected argument 'gateway' to be a str")
        pulumi.set(__self__, "gateway", gateway)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter
    def caks(self) -> Sequence['outputs.GetDlGatewayMacsecCaksCakResult']:
        return pulumi.get(self, "caks")

    @_builtins.property
    @pulumi.getter
    def gateway(self) -> _builtins.str:
        return pulumi.get(self, "gateway")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")


class AwaitableGetDlGatewayMacsecCaksResult(GetDlGatewayMacsecCaksResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDlGatewayMacsecCaksResult(
            caks=self.caks,
            gateway=self.gateway,
            id=self.id)


def get_dl_gateway_macsec_caks(gateway: Optional[_builtins.str] = None,
                               id: Optional[_builtins.str] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDlGatewayMacsecCaksResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['gateway'] = gateway
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getDlGatewayMacsecCaks:getDlGatewayMacsecCaks', __args__, opts=opts, typ=GetDlGatewayMacsecCaksResult, package_ref=_utilities.get_package()).value

    return AwaitableGetDlGatewayMacsecCaksResult(
        caks=pulumi.get(__ret__, 'caks'),
        gateway=pulumi.get(__ret__, 'gateway'),
        id=pulumi.get(__ret__, 'id'))
def get_dl_gateway_macsec_caks_output(gateway: Optional[pulumi.Input[_builtins.str]] = None,
                                      id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                      opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDlGatewayMacsecCaksResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['gateway'] = gateway
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getDlGatewayMacsecCaks:getDlGatewayMacsecCaks', __args__, opts=opts, typ=GetDlGatewayMacsecCaksResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetDlGatewayMacsecCaksResult(
        caks=pulumi.get(__response__, 'caks'),
        gateway=pulumi.get(__response__, 'gateway'),
        id=pulumi.get(__response__, 'id')))
