# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['SchematicsInventoryArgs', 'SchematicsInventory']

@pulumi.input_type
class SchematicsInventoryArgs:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 inventories_ini: Optional[pulumi.Input[_builtins.str]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_queries: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 schematics_inventory_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a SchematicsInventory resource.
        :param pulumi.Input[_builtins.str] description: The description of your Inventory definition. The description can be up to 2048 characters long in size.
        :param pulumi.Input[_builtins.str] inventories_ini: Input inventory of host and host group for the playbook, in the `.ini` file format.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] name: The unique name of your Inventory definition. The name can be up to 128 characters long and can include alphanumeric
               characters, spaces, dashes, and underscores.
        :param pulumi.Input[_builtins.str] resource_group: Resource-group name for the Inventory definition. By default, Inventory definition will be created in Default Resource
               Group.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] resource_queries: Input resource query definitions that is used to dynamically generate the inventory of host and host group for the
               playbook.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if inventories_ini is not None:
            pulumi.set(__self__, "inventories_ini", inventories_ini)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if resource_group is not None:
            pulumi.set(__self__, "resource_group", resource_group)
        if resource_queries is not None:
            pulumi.set(__self__, "resource_queries", resource_queries)
        if schematics_inventory_id is not None:
            pulumi.set(__self__, "schematics_inventory_id", schematics_inventory_id)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of your Inventory definition. The description can be up to 2048 characters long in size.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="inventoriesIni")
    def inventories_ini(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Input inventory of host and host group for the playbook, in the `.ini` file format.
        """
        return pulumi.get(self, "inventories_ini")

    @inventories_ini.setter
    def inventories_ini(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "inventories_ini", value)

    @_builtins.property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "location", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique name of your Inventory definition. The name can be up to 128 characters long and can include alphanumeric
        characters, spaces, dashes, and underscores.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Resource-group name for the Inventory definition. By default, Inventory definition will be created in Default Resource
        Group.
        """
        return pulumi.get(self, "resource_group")

    @resource_group.setter
    def resource_group(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_group", value)

    @_builtins.property
    @pulumi.getter(name="resourceQueries")
    def resource_queries(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Input resource query definitions that is used to dynamically generate the inventory of host and host group for the
        playbook.
        """
        return pulumi.get(self, "resource_queries")

    @resource_queries.setter
    def resource_queries(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "resource_queries", value)

    @_builtins.property
    @pulumi.getter(name="schematicsInventoryId")
    def schematics_inventory_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "schematics_inventory_id")

    @schematics_inventory_id.setter
    def schematics_inventory_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "schematics_inventory_id", value)


@pulumi.input_type
class _SchematicsInventoryState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_by: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 inventories_ini: Optional[pulumi.Input[_builtins.str]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_queries: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 schematics_inventory_id: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_by: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering SchematicsInventory resources.
        :param pulumi.Input[_builtins.str] created_at: Inventory creation time.
        :param pulumi.Input[_builtins.str] created_by: Email address of user who created the Inventory.
        :param pulumi.Input[_builtins.str] description: The description of your Inventory definition. The description can be up to 2048 characters long in size.
        :param pulumi.Input[_builtins.str] inventories_ini: Input inventory of host and host group for the playbook, in the `.ini` file format.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] name: The unique name of your Inventory definition. The name can be up to 128 characters long and can include alphanumeric
               characters, spaces, dashes, and underscores.
        :param pulumi.Input[_builtins.str] resource_group: Resource-group name for the Inventory definition. By default, Inventory definition will be created in Default Resource
               Group.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] resource_queries: Input resource query definitions that is used to dynamically generate the inventory of host and host group for the
               playbook.
        :param pulumi.Input[_builtins.str] updated_at: Inventory updation time.
        :param pulumi.Input[_builtins.str] updated_by: Email address of user who updated the Inventory.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if inventories_ini is not None:
            pulumi.set(__self__, "inventories_ini", inventories_ini)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if resource_group is not None:
            pulumi.set(__self__, "resource_group", resource_group)
        if resource_queries is not None:
            pulumi.set(__self__, "resource_queries", resource_queries)
        if schematics_inventory_id is not None:
            pulumi.set(__self__, "schematics_inventory_id", schematics_inventory_id)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if updated_by is not None:
            pulumi.set(__self__, "updated_by", updated_by)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Inventory creation time.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Email address of user who created the Inventory.
        """
        return pulumi.get(self, "created_by")

    @created_by.setter
    def created_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_by", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of your Inventory definition. The description can be up to 2048 characters long in size.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="inventoriesIni")
    def inventories_ini(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Input inventory of host and host group for the playbook, in the `.ini` file format.
        """
        return pulumi.get(self, "inventories_ini")

    @inventories_ini.setter
    def inventories_ini(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "inventories_ini", value)

    @_builtins.property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "location", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique name of your Inventory definition. The name can be up to 128 characters long and can include alphanumeric
        characters, spaces, dashes, and underscores.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Resource-group name for the Inventory definition. By default, Inventory definition will be created in Default Resource
        Group.
        """
        return pulumi.get(self, "resource_group")

    @resource_group.setter
    def resource_group(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_group", value)

    @_builtins.property
    @pulumi.getter(name="resourceQueries")
    def resource_queries(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Input resource query definitions that is used to dynamically generate the inventory of host and host group for the
        playbook.
        """
        return pulumi.get(self, "resource_queries")

    @resource_queries.setter
    def resource_queries(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "resource_queries", value)

    @_builtins.property
    @pulumi.getter(name="schematicsInventoryId")
    def schematics_inventory_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "schematics_inventory_id")

    @schematics_inventory_id.setter
    def schematics_inventory_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "schematics_inventory_id", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Inventory updation time.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Email address of user who updated the Inventory.
        """
        return pulumi.get(self, "updated_by")

    @updated_by.setter
    def updated_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_by", value)


@pulumi.type_token("ibm:index/schematicsInventory:SchematicsInventory")
class SchematicsInventory(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 inventories_ini: Optional[pulumi.Input[_builtins.str]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_queries: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 schematics_inventory_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a SchematicsInventory resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: The description of your Inventory definition. The description can be up to 2048 characters long in size.
        :param pulumi.Input[_builtins.str] inventories_ini: Input inventory of host and host group for the playbook, in the `.ini` file format.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] name: The unique name of your Inventory definition. The name can be up to 128 characters long and can include alphanumeric
               characters, spaces, dashes, and underscores.
        :param pulumi.Input[_builtins.str] resource_group: Resource-group name for the Inventory definition. By default, Inventory definition will be created in Default Resource
               Group.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] resource_queries: Input resource query definitions that is used to dynamically generate the inventory of host and host group for the
               playbook.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[SchematicsInventoryArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a SchematicsInventory resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param SchematicsInventoryArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SchematicsInventoryArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 inventories_ini: Optional[pulumi.Input[_builtins.str]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_queries: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 schematics_inventory_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SchematicsInventoryArgs.__new__(SchematicsInventoryArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["inventories_ini"] = inventories_ini
            __props__.__dict__["location"] = location
            __props__.__dict__["name"] = name
            __props__.__dict__["resource_group"] = resource_group
            __props__.__dict__["resource_queries"] = resource_queries
            __props__.__dict__["schematics_inventory_id"] = schematics_inventory_id
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_by"] = None
            __props__.__dict__["updated_at"] = None
            __props__.__dict__["updated_by"] = None
        super(SchematicsInventory, __self__).__init__(
            'ibm:index/schematicsInventory:SchematicsInventory',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_by: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            inventories_ini: Optional[pulumi.Input[_builtins.str]] = None,
            location: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            resource_group: Optional[pulumi.Input[_builtins.str]] = None,
            resource_queries: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            schematics_inventory_id: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            updated_by: Optional[pulumi.Input[_builtins.str]] = None) -> 'SchematicsInventory':
        """
        Get an existing SchematicsInventory resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: Inventory creation time.
        :param pulumi.Input[_builtins.str] created_by: Email address of user who created the Inventory.
        :param pulumi.Input[_builtins.str] description: The description of your Inventory definition. The description can be up to 2048 characters long in size.
        :param pulumi.Input[_builtins.str] inventories_ini: Input inventory of host and host group for the playbook, in the `.ini` file format.
        :param pulumi.Input[_builtins.str] location: List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
               region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
               Schematics.
        :param pulumi.Input[_builtins.str] name: The unique name of your Inventory definition. The name can be up to 128 characters long and can include alphanumeric
               characters, spaces, dashes, and underscores.
        :param pulumi.Input[_builtins.str] resource_group: Resource-group name for the Inventory definition. By default, Inventory definition will be created in Default Resource
               Group.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] resource_queries: Input resource query definitions that is used to dynamically generate the inventory of host and host group for the
               playbook.
        :param pulumi.Input[_builtins.str] updated_at: Inventory updation time.
        :param pulumi.Input[_builtins.str] updated_by: Email address of user who updated the Inventory.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SchematicsInventoryState.__new__(_SchematicsInventoryState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_by"] = created_by
        __props__.__dict__["description"] = description
        __props__.__dict__["inventories_ini"] = inventories_ini
        __props__.__dict__["location"] = location
        __props__.__dict__["name"] = name
        __props__.__dict__["resource_group"] = resource_group
        __props__.__dict__["resource_queries"] = resource_queries
        __props__.__dict__["schematics_inventory_id"] = schematics_inventory_id
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["updated_by"] = updated_by
        return SchematicsInventory(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Inventory creation time.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> pulumi.Output[_builtins.str]:
        """
        Email address of user who created the Inventory.
        """
        return pulumi.get(self, "created_by")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The description of your Inventory definition. The description can be up to 2048 characters long in size.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="inventoriesIni")
    def inventories_ini(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Input inventory of host and host group for the playbook, in the `.ini` file format.
        """
        return pulumi.get(self, "inventories_ini")

    @_builtins.property
    @pulumi.getter
    def location(self) -> pulumi.Output[_builtins.str]:
        """
        List of locations supported by IBM Cloud Schematics service. While creating your workspace or action, choose the right
        region, since it cannot be changed. Note, this does not limit the location of the IBM Cloud resources, provisioned using
        Schematics.
        """
        return pulumi.get(self, "location")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The unique name of your Inventory definition. The name can be up to 128 characters long and can include alphanumeric
        characters, spaces, dashes, and underscores.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Resource-group name for the Inventory definition. By default, Inventory definition will be created in Default Resource
        Group.
        """
        return pulumi.get(self, "resource_group")

    @_builtins.property
    @pulumi.getter(name="resourceQueries")
    def resource_queries(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Input resource query definitions that is used to dynamically generate the inventory of host and host group for the
        playbook.
        """
        return pulumi.get(self, "resource_queries")

    @_builtins.property
    @pulumi.getter(name="schematicsInventoryId")
    def schematics_inventory_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "schematics_inventory_id")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Inventory updation time.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> pulumi.Output[_builtins.str]:
        """
        Email address of user who updated the Inventory.
        """
        return pulumi.get(self, "updated_by")

