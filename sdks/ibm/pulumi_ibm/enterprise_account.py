# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['EnterpriseAccountArgs', 'EnterpriseAccount']

@pulumi.input_type
class EnterpriseAccountArgs:
    def __init__(__self__, *,
                 parent: pulumi.Input[_builtins.str],
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ibm_enterprise_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 options: Optional[pulumi.Input['EnterpriseAccountOptionsArgs']] = None,
                 owner_iam_id: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['EnterpriseAccountTimeoutsArgs']] = None,
                 traits: Optional[pulumi.Input[Sequence[pulumi.Input['EnterpriseAccountTraitArgs']]]] = None):
        """
        The set of arguments for constructing a EnterpriseAccount resource.
        :param pulumi.Input[_builtins.str] parent: The CRN of the parent under which the account will be created. The parent can be an existing account group or the
               enterprise itself.
        :param pulumi.Input[_builtins.str] account_id: The source account id of account to be imported
        :param pulumi.Input[_builtins.str] enterprise_account_id: The enterprise account ID.
        :param pulumi.Input[_builtins.str] enterprise_id: The enterprise ID that the account is a part of.
        :param pulumi.Input[_builtins.str] name: The name of the account. This field must have 3 - 60 characters.
        :param pulumi.Input['EnterpriseAccountOptionsArgs'] options: By default create_iam_service_id_with_apikey_and_owner_policies is turned off for a newly created child account. You can
               enable this property by passing 'true' in this boolean field. IAM service id has account owner IAM policies and the API
               key associated with it can generate a token and setup resources in the account.
        :param pulumi.Input[_builtins.str] owner_iam_id: The IAM ID of the account owner, such as `IBMid-0123ABC`. The IAM ID must already exist.
        :param pulumi.Input[Sequence[pulumi.Input['EnterpriseAccountTraitArgs']]] traits: The traits object can be used to set properties on child accounts of an enterprise. You can pass a field to opt-out of
               Multi-Factor Authentication setting or setup enterprise IAM settings when creating a child account in the enterprise.
               This is an optional field.
        """
        pulumi.set(__self__, "parent", parent)
        if account_id is not None:
            pulumi.set(__self__, "account_id", account_id)
        if enterprise_account_id is not None:
            pulumi.set(__self__, "enterprise_account_id", enterprise_account_id)
        if enterprise_id is not None:
            pulumi.set(__self__, "enterprise_id", enterprise_id)
        if ibm_enterprise_account_id is not None:
            pulumi.set(__self__, "ibm_enterprise_account_id", ibm_enterprise_account_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if options is not None:
            pulumi.set(__self__, "options", options)
        if owner_iam_id is not None:
            pulumi.set(__self__, "owner_iam_id", owner_iam_id)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)
        if traits is not None:
            pulumi.set(__self__, "traits", traits)

    @_builtins.property
    @pulumi.getter
    def parent(self) -> pulumi.Input[_builtins.str]:
        """
        The CRN of the parent under which the account will be created. The parent can be an existing account group or the
        enterprise itself.
        """
        return pulumi.get(self, "parent")

    @parent.setter
    def parent(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "parent", value)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The source account id of account to be imported
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "account_id", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseAccountId")
    def enterprise_account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The enterprise account ID.
        """
        return pulumi.get(self, "enterprise_account_id")

    @enterprise_account_id.setter
    def enterprise_account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_account_id", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseId")
    def enterprise_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The enterprise ID that the account is a part of.
        """
        return pulumi.get(self, "enterprise_id")

    @enterprise_id.setter
    def enterprise_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_id", value)

    @_builtins.property
    @pulumi.getter(name="ibmEnterpriseAccountId")
    def ibm_enterprise_account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "ibm_enterprise_account_id")

    @ibm_enterprise_account_id.setter
    def ibm_enterprise_account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ibm_enterprise_account_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the account. This field must have 3 - 60 characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def options(self) -> Optional[pulumi.Input['EnterpriseAccountOptionsArgs']]:
        """
        By default create_iam_service_id_with_apikey_and_owner_policies is turned off for a newly created child account. You can
        enable this property by passing 'true' in this boolean field. IAM service id has account owner IAM policies and the API
        key associated with it can generate a token and setup resources in the account.
        """
        return pulumi.get(self, "options")

    @options.setter
    def options(self, value: Optional[pulumi.Input['EnterpriseAccountOptionsArgs']]):
        pulumi.set(self, "options", value)

    @_builtins.property
    @pulumi.getter(name="ownerIamId")
    def owner_iam_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The IAM ID of the account owner, such as `IBMid-0123ABC`. The IAM ID must already exist.
        """
        return pulumi.get(self, "owner_iam_id")

    @owner_iam_id.setter
    def owner_iam_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "owner_iam_id", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['EnterpriseAccountTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['EnterpriseAccountTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)

    @_builtins.property
    @pulumi.getter
    def traits(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EnterpriseAccountTraitArgs']]]]:
        """
        The traits object can be used to set properties on child accounts of an enterprise. You can pass a field to opt-out of
        Multi-Factor Authentication setting or setup enterprise IAM settings when creating a child account in the enterprise.
        This is an optional field.
        """
        return pulumi.get(self, "traits")

    @traits.setter
    def traits(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EnterpriseAccountTraitArgs']]]]):
        pulumi.set(self, "traits", value)


@pulumi.input_type
class _EnterpriseAccountState:
    def __init__(__self__, *,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_by: Optional[pulumi.Input[_builtins.str]] = None,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_path: Optional[pulumi.Input[_builtins.str]] = None,
                 iam_apikey: Optional[pulumi.Input[_builtins.str]] = None,
                 iam_apikey_id: Optional[pulumi.Input[_builtins.str]] = None,
                 iam_service_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ibm_enterprise_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_enterprise_account: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 options: Optional[pulumi.Input['EnterpriseAccountOptionsArgs']] = None,
                 owner_email: Optional[pulumi.Input[_builtins.str]] = None,
                 owner_iam_id: Optional[pulumi.Input[_builtins.str]] = None,
                 paid: Optional[pulumi.Input[_builtins.bool]] = None,
                 parent: Optional[pulumi.Input[_builtins.str]] = None,
                 state: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['EnterpriseAccountTimeoutsArgs']] = None,
                 traits: Optional[pulumi.Input[Sequence[pulumi.Input['EnterpriseAccountTraitArgs']]]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_by: Optional[pulumi.Input[_builtins.str]] = None,
                 url: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering EnterpriseAccount resources.
        :param pulumi.Input[_builtins.str] account_id: The source account id of account to be imported
        :param pulumi.Input[_builtins.str] created_at: The time stamp at which the account was created.
        :param pulumi.Input[_builtins.str] created_by: The IAM ID of the user or service that created the account.
        :param pulumi.Input[_builtins.str] crn: The Cloud Resource Name (CRN) of the account.
        :param pulumi.Input[_builtins.str] enterprise_account_id: The enterprise account ID.
        :param pulumi.Input[_builtins.str] enterprise_id: The enterprise ID that the account is a part of.
        :param pulumi.Input[_builtins.str] enterprise_path: The path from the enterprise to this particular account.
        :param pulumi.Input[_builtins.str] iam_apikey: The IAM API KEY of the account with owner IAM policies.
        :param pulumi.Input[_builtins.str] iam_apikey_id: The ID of IAM APIKEY which has owner IAM policies
        :param pulumi.Input[_builtins.str] iam_service_id: The IAM Service ID of the account will be used to create IAM_API_KEY with owner IAM policies.
        :param pulumi.Input[_builtins.bool] is_enterprise_account: The flag to indicate whether the account is an enterprise account or not.
        :param pulumi.Input[_builtins.str] name: The name of the account. This field must have 3 - 60 characters.
        :param pulumi.Input['EnterpriseAccountOptionsArgs'] options: By default create_iam_service_id_with_apikey_and_owner_policies is turned off for a newly created child account. You can
               enable this property by passing 'true' in this boolean field. IAM service id has account owner IAM policies and the API
               key associated with it can generate a token and setup resources in the account.
        :param pulumi.Input[_builtins.str] owner_email: The email address of the owner of the account.
        :param pulumi.Input[_builtins.str] owner_iam_id: The IAM ID of the account owner, such as `IBMid-0123ABC`. The IAM ID must already exist.
        :param pulumi.Input[_builtins.bool] paid: The type of account - whether it is free or paid.
        :param pulumi.Input[_builtins.str] parent: The CRN of the parent under which the account will be created. The parent can be an existing account group or the
               enterprise itself.
        :param pulumi.Input[_builtins.str] state: The state of the account.
        :param pulumi.Input[Sequence[pulumi.Input['EnterpriseAccountTraitArgs']]] traits: The traits object can be used to set properties on child accounts of an enterprise. You can pass a field to opt-out of
               Multi-Factor Authentication setting or setup enterprise IAM settings when creating a child account in the enterprise.
               This is an optional field.
        :param pulumi.Input[_builtins.str] updated_at: The time stamp at which the account was last updated.
        :param pulumi.Input[_builtins.str] updated_by: The IAM ID of the user or service that updated the account.
        :param pulumi.Input[_builtins.str] url: The URL of the account.
        """
        if account_id is not None:
            pulumi.set(__self__, "account_id", account_id)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if crn is not None:
            pulumi.set(__self__, "crn", crn)
        if enterprise_account_id is not None:
            pulumi.set(__self__, "enterprise_account_id", enterprise_account_id)
        if enterprise_id is not None:
            pulumi.set(__self__, "enterprise_id", enterprise_id)
        if enterprise_path is not None:
            pulumi.set(__self__, "enterprise_path", enterprise_path)
        if iam_apikey is not None:
            pulumi.set(__self__, "iam_apikey", iam_apikey)
        if iam_apikey_id is not None:
            pulumi.set(__self__, "iam_apikey_id", iam_apikey_id)
        if iam_service_id is not None:
            pulumi.set(__self__, "iam_service_id", iam_service_id)
        if ibm_enterprise_account_id is not None:
            pulumi.set(__self__, "ibm_enterprise_account_id", ibm_enterprise_account_id)
        if is_enterprise_account is not None:
            pulumi.set(__self__, "is_enterprise_account", is_enterprise_account)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if options is not None:
            pulumi.set(__self__, "options", options)
        if owner_email is not None:
            pulumi.set(__self__, "owner_email", owner_email)
        if owner_iam_id is not None:
            pulumi.set(__self__, "owner_iam_id", owner_iam_id)
        if paid is not None:
            pulumi.set(__self__, "paid", paid)
        if parent is not None:
            pulumi.set(__self__, "parent", parent)
        if state is not None:
            pulumi.set(__self__, "state", state)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)
        if traits is not None:
            pulumi.set(__self__, "traits", traits)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if updated_by is not None:
            pulumi.set(__self__, "updated_by", updated_by)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The source account id of account to be imported
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "account_id", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time stamp at which the account was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The IAM ID of the user or service that created the account.
        """
        return pulumi.get(self, "created_by")

    @created_by.setter
    def created_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_by", value)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Cloud Resource Name (CRN) of the account.
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseAccountId")
    def enterprise_account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The enterprise account ID.
        """
        return pulumi.get(self, "enterprise_account_id")

    @enterprise_account_id.setter
    def enterprise_account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_account_id", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseId")
    def enterprise_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The enterprise ID that the account is a part of.
        """
        return pulumi.get(self, "enterprise_id")

    @enterprise_id.setter
    def enterprise_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_id", value)

    @_builtins.property
    @pulumi.getter(name="enterprisePath")
    def enterprise_path(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The path from the enterprise to this particular account.
        """
        return pulumi.get(self, "enterprise_path")

    @enterprise_path.setter
    def enterprise_path(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_path", value)

    @_builtins.property
    @pulumi.getter(name="iamApikey")
    def iam_apikey(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The IAM API KEY of the account with owner IAM policies.
        """
        return pulumi.get(self, "iam_apikey")

    @iam_apikey.setter
    def iam_apikey(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "iam_apikey", value)

    @_builtins.property
    @pulumi.getter(name="iamApikeyId")
    def iam_apikey_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of IAM APIKEY which has owner IAM policies
        """
        return pulumi.get(self, "iam_apikey_id")

    @iam_apikey_id.setter
    def iam_apikey_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "iam_apikey_id", value)

    @_builtins.property
    @pulumi.getter(name="iamServiceId")
    def iam_service_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The IAM Service ID of the account will be used to create IAM_API_KEY with owner IAM policies.
        """
        return pulumi.get(self, "iam_service_id")

    @iam_service_id.setter
    def iam_service_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "iam_service_id", value)

    @_builtins.property
    @pulumi.getter(name="ibmEnterpriseAccountId")
    def ibm_enterprise_account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "ibm_enterprise_account_id")

    @ibm_enterprise_account_id.setter
    def ibm_enterprise_account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ibm_enterprise_account_id", value)

    @_builtins.property
    @pulumi.getter(name="isEnterpriseAccount")
    def is_enterprise_account(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        The flag to indicate whether the account is an enterprise account or not.
        """
        return pulumi.get(self, "is_enterprise_account")

    @is_enterprise_account.setter
    def is_enterprise_account(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "is_enterprise_account", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the account. This field must have 3 - 60 characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def options(self) -> Optional[pulumi.Input['EnterpriseAccountOptionsArgs']]:
        """
        By default create_iam_service_id_with_apikey_and_owner_policies is turned off for a newly created child account. You can
        enable this property by passing 'true' in this boolean field. IAM service id has account owner IAM policies and the API
        key associated with it can generate a token and setup resources in the account.
        """
        return pulumi.get(self, "options")

    @options.setter
    def options(self, value: Optional[pulumi.Input['EnterpriseAccountOptionsArgs']]):
        pulumi.set(self, "options", value)

    @_builtins.property
    @pulumi.getter(name="ownerEmail")
    def owner_email(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The email address of the owner of the account.
        """
        return pulumi.get(self, "owner_email")

    @owner_email.setter
    def owner_email(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "owner_email", value)

    @_builtins.property
    @pulumi.getter(name="ownerIamId")
    def owner_iam_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The IAM ID of the account owner, such as `IBMid-0123ABC`. The IAM ID must already exist.
        """
        return pulumi.get(self, "owner_iam_id")

    @owner_iam_id.setter
    def owner_iam_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "owner_iam_id", value)

    @_builtins.property
    @pulumi.getter
    def paid(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        The type of account - whether it is free or paid.
        """
        return pulumi.get(self, "paid")

    @paid.setter
    def paid(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "paid", value)

    @_builtins.property
    @pulumi.getter
    def parent(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The CRN of the parent under which the account will be created. The parent can be an existing account group or the
        enterprise itself.
        """
        return pulumi.get(self, "parent")

    @parent.setter
    def parent(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "parent", value)

    @_builtins.property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The state of the account.
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "state", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['EnterpriseAccountTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['EnterpriseAccountTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)

    @_builtins.property
    @pulumi.getter
    def traits(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EnterpriseAccountTraitArgs']]]]:
        """
        The traits object can be used to set properties on child accounts of an enterprise. You can pass a field to opt-out of
        Multi-Factor Authentication setting or setup enterprise IAM settings when creating a child account in the enterprise.
        This is an optional field.
        """
        return pulumi.get(self, "traits")

    @traits.setter
    def traits(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EnterpriseAccountTraitArgs']]]]):
        pulumi.set(self, "traits", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time stamp at which the account was last updated.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The IAM ID of the user or service that updated the account.
        """
        return pulumi.get(self, "updated_by")

    @updated_by.setter
    def updated_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_by", value)

    @_builtins.property
    @pulumi.getter
    def url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL of the account.
        """
        return pulumi.get(self, "url")

    @url.setter
    def url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "url", value)


@pulumi.type_token("ibm:index/enterpriseAccount:EnterpriseAccount")
class EnterpriseAccount(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ibm_enterprise_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 options: Optional[pulumi.Input[Union['EnterpriseAccountOptionsArgs', 'EnterpriseAccountOptionsArgsDict']]] = None,
                 owner_iam_id: Optional[pulumi.Input[_builtins.str]] = None,
                 parent: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input[Union['EnterpriseAccountTimeoutsArgs', 'EnterpriseAccountTimeoutsArgsDict']]] = None,
                 traits: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EnterpriseAccountTraitArgs', 'EnterpriseAccountTraitArgsDict']]]]] = None,
                 __props__=None):
        """
        Create a EnterpriseAccount resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] account_id: The source account id of account to be imported
        :param pulumi.Input[_builtins.str] enterprise_account_id: The enterprise account ID.
        :param pulumi.Input[_builtins.str] enterprise_id: The enterprise ID that the account is a part of.
        :param pulumi.Input[_builtins.str] name: The name of the account. This field must have 3 - 60 characters.
        :param pulumi.Input[Union['EnterpriseAccountOptionsArgs', 'EnterpriseAccountOptionsArgsDict']] options: By default create_iam_service_id_with_apikey_and_owner_policies is turned off for a newly created child account. You can
               enable this property by passing 'true' in this boolean field. IAM service id has account owner IAM policies and the API
               key associated with it can generate a token and setup resources in the account.
        :param pulumi.Input[_builtins.str] owner_iam_id: The IAM ID of the account owner, such as `IBMid-0123ABC`. The IAM ID must already exist.
        :param pulumi.Input[_builtins.str] parent: The CRN of the parent under which the account will be created. The parent can be an existing account group or the
               enterprise itself.
        :param pulumi.Input[Sequence[pulumi.Input[Union['EnterpriseAccountTraitArgs', 'EnterpriseAccountTraitArgsDict']]]] traits: The traits object can be used to set properties on child accounts of an enterprise. You can pass a field to opt-out of
               Multi-Factor Authentication setting or setup enterprise IAM settings when creating a child account in the enterprise.
               This is an optional field.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: EnterpriseAccountArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a EnterpriseAccount resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param EnterpriseAccountArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(EnterpriseAccountArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ibm_enterprise_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 options: Optional[pulumi.Input[Union['EnterpriseAccountOptionsArgs', 'EnterpriseAccountOptionsArgsDict']]] = None,
                 owner_iam_id: Optional[pulumi.Input[_builtins.str]] = None,
                 parent: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input[Union['EnterpriseAccountTimeoutsArgs', 'EnterpriseAccountTimeoutsArgsDict']]] = None,
                 traits: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EnterpriseAccountTraitArgs', 'EnterpriseAccountTraitArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = EnterpriseAccountArgs.__new__(EnterpriseAccountArgs)

            __props__.__dict__["account_id"] = account_id
            __props__.__dict__["enterprise_account_id"] = enterprise_account_id
            __props__.__dict__["enterprise_id"] = enterprise_id
            __props__.__dict__["ibm_enterprise_account_id"] = ibm_enterprise_account_id
            __props__.__dict__["name"] = name
            __props__.__dict__["options"] = options
            __props__.__dict__["owner_iam_id"] = owner_iam_id
            if parent is None and not opts.urn:
                raise TypeError("Missing required property 'parent'")
            __props__.__dict__["parent"] = parent
            __props__.__dict__["timeouts"] = timeouts
            __props__.__dict__["traits"] = traits
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_by"] = None
            __props__.__dict__["crn"] = None
            __props__.__dict__["enterprise_path"] = None
            __props__.__dict__["iam_apikey"] = None
            __props__.__dict__["iam_apikey_id"] = None
            __props__.__dict__["iam_service_id"] = None
            __props__.__dict__["is_enterprise_account"] = None
            __props__.__dict__["owner_email"] = None
            __props__.__dict__["paid"] = None
            __props__.__dict__["state"] = None
            __props__.__dict__["updated_at"] = None
            __props__.__dict__["updated_by"] = None
            __props__.__dict__["url"] = None
        secret_opts = pulumi.ResourceOptions(additional_secret_outputs=["iamApikey"])
        opts = pulumi.ResourceOptions.merge(opts, secret_opts)
        super(EnterpriseAccount, __self__).__init__(
            'ibm:index/enterpriseAccount:EnterpriseAccount',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_id: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_by: Optional[pulumi.Input[_builtins.str]] = None,
            crn: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_account_id: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_id: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_path: Optional[pulumi.Input[_builtins.str]] = None,
            iam_apikey: Optional[pulumi.Input[_builtins.str]] = None,
            iam_apikey_id: Optional[pulumi.Input[_builtins.str]] = None,
            iam_service_id: Optional[pulumi.Input[_builtins.str]] = None,
            ibm_enterprise_account_id: Optional[pulumi.Input[_builtins.str]] = None,
            is_enterprise_account: Optional[pulumi.Input[_builtins.bool]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            options: Optional[pulumi.Input[Union['EnterpriseAccountOptionsArgs', 'EnterpriseAccountOptionsArgsDict']]] = None,
            owner_email: Optional[pulumi.Input[_builtins.str]] = None,
            owner_iam_id: Optional[pulumi.Input[_builtins.str]] = None,
            paid: Optional[pulumi.Input[_builtins.bool]] = None,
            parent: Optional[pulumi.Input[_builtins.str]] = None,
            state: Optional[pulumi.Input[_builtins.str]] = None,
            timeouts: Optional[pulumi.Input[Union['EnterpriseAccountTimeoutsArgs', 'EnterpriseAccountTimeoutsArgsDict']]] = None,
            traits: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EnterpriseAccountTraitArgs', 'EnterpriseAccountTraitArgsDict']]]]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            updated_by: Optional[pulumi.Input[_builtins.str]] = None,
            url: Optional[pulumi.Input[_builtins.str]] = None) -> 'EnterpriseAccount':
        """
        Get an existing EnterpriseAccount resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] account_id: The source account id of account to be imported
        :param pulumi.Input[_builtins.str] created_at: The time stamp at which the account was created.
        :param pulumi.Input[_builtins.str] created_by: The IAM ID of the user or service that created the account.
        :param pulumi.Input[_builtins.str] crn: The Cloud Resource Name (CRN) of the account.
        :param pulumi.Input[_builtins.str] enterprise_account_id: The enterprise account ID.
        :param pulumi.Input[_builtins.str] enterprise_id: The enterprise ID that the account is a part of.
        :param pulumi.Input[_builtins.str] enterprise_path: The path from the enterprise to this particular account.
        :param pulumi.Input[_builtins.str] iam_apikey: The IAM API KEY of the account with owner IAM policies.
        :param pulumi.Input[_builtins.str] iam_apikey_id: The ID of IAM APIKEY which has owner IAM policies
        :param pulumi.Input[_builtins.str] iam_service_id: The IAM Service ID of the account will be used to create IAM_API_KEY with owner IAM policies.
        :param pulumi.Input[_builtins.bool] is_enterprise_account: The flag to indicate whether the account is an enterprise account or not.
        :param pulumi.Input[_builtins.str] name: The name of the account. This field must have 3 - 60 characters.
        :param pulumi.Input[Union['EnterpriseAccountOptionsArgs', 'EnterpriseAccountOptionsArgsDict']] options: By default create_iam_service_id_with_apikey_and_owner_policies is turned off for a newly created child account. You can
               enable this property by passing 'true' in this boolean field. IAM service id has account owner IAM policies and the API
               key associated with it can generate a token and setup resources in the account.
        :param pulumi.Input[_builtins.str] owner_email: The email address of the owner of the account.
        :param pulumi.Input[_builtins.str] owner_iam_id: The IAM ID of the account owner, such as `IBMid-0123ABC`. The IAM ID must already exist.
        :param pulumi.Input[_builtins.bool] paid: The type of account - whether it is free or paid.
        :param pulumi.Input[_builtins.str] parent: The CRN of the parent under which the account will be created. The parent can be an existing account group or the
               enterprise itself.
        :param pulumi.Input[_builtins.str] state: The state of the account.
        :param pulumi.Input[Sequence[pulumi.Input[Union['EnterpriseAccountTraitArgs', 'EnterpriseAccountTraitArgsDict']]]] traits: The traits object can be used to set properties on child accounts of an enterprise. You can pass a field to opt-out of
               Multi-Factor Authentication setting or setup enterprise IAM settings when creating a child account in the enterprise.
               This is an optional field.
        :param pulumi.Input[_builtins.str] updated_at: The time stamp at which the account was last updated.
        :param pulumi.Input[_builtins.str] updated_by: The IAM ID of the user or service that updated the account.
        :param pulumi.Input[_builtins.str] url: The URL of the account.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _EnterpriseAccountState.__new__(_EnterpriseAccountState)

        __props__.__dict__["account_id"] = account_id
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_by"] = created_by
        __props__.__dict__["crn"] = crn
        __props__.__dict__["enterprise_account_id"] = enterprise_account_id
        __props__.__dict__["enterprise_id"] = enterprise_id
        __props__.__dict__["enterprise_path"] = enterprise_path
        __props__.__dict__["iam_apikey"] = iam_apikey
        __props__.__dict__["iam_apikey_id"] = iam_apikey_id
        __props__.__dict__["iam_service_id"] = iam_service_id
        __props__.__dict__["ibm_enterprise_account_id"] = ibm_enterprise_account_id
        __props__.__dict__["is_enterprise_account"] = is_enterprise_account
        __props__.__dict__["name"] = name
        __props__.__dict__["options"] = options
        __props__.__dict__["owner_email"] = owner_email
        __props__.__dict__["owner_iam_id"] = owner_iam_id
        __props__.__dict__["paid"] = paid
        __props__.__dict__["parent"] = parent
        __props__.__dict__["state"] = state
        __props__.__dict__["timeouts"] = timeouts
        __props__.__dict__["traits"] = traits
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["updated_by"] = updated_by
        __props__.__dict__["url"] = url
        return EnterpriseAccount(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Output[_builtins.str]:
        """
        The source account id of account to be imported
        """
        return pulumi.get(self, "account_id")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The time stamp at which the account was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> pulumi.Output[_builtins.str]:
        """
        The IAM ID of the user or service that created the account.
        """
        return pulumi.get(self, "created_by")

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Output[_builtins.str]:
        """
        The Cloud Resource Name (CRN) of the account.
        """
        return pulumi.get(self, "crn")

    @_builtins.property
    @pulumi.getter(name="enterpriseAccountId")
    def enterprise_account_id(self) -> pulumi.Output[_builtins.str]:
        """
        The enterprise account ID.
        """
        return pulumi.get(self, "enterprise_account_id")

    @_builtins.property
    @pulumi.getter(name="enterpriseId")
    def enterprise_id(self) -> pulumi.Output[_builtins.str]:
        """
        The enterprise ID that the account is a part of.
        """
        return pulumi.get(self, "enterprise_id")

    @_builtins.property
    @pulumi.getter(name="enterprisePath")
    def enterprise_path(self) -> pulumi.Output[_builtins.str]:
        """
        The path from the enterprise to this particular account.
        """
        return pulumi.get(self, "enterprise_path")

    @_builtins.property
    @pulumi.getter(name="iamApikey")
    def iam_apikey(self) -> pulumi.Output[_builtins.str]:
        """
        The IAM API KEY of the account with owner IAM policies.
        """
        return pulumi.get(self, "iam_apikey")

    @_builtins.property
    @pulumi.getter(name="iamApikeyId")
    def iam_apikey_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of IAM APIKEY which has owner IAM policies
        """
        return pulumi.get(self, "iam_apikey_id")

    @_builtins.property
    @pulumi.getter(name="iamServiceId")
    def iam_service_id(self) -> pulumi.Output[_builtins.str]:
        """
        The IAM Service ID of the account will be used to create IAM_API_KEY with owner IAM policies.
        """
        return pulumi.get(self, "iam_service_id")

    @_builtins.property
    @pulumi.getter(name="ibmEnterpriseAccountId")
    def ibm_enterprise_account_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "ibm_enterprise_account_id")

    @_builtins.property
    @pulumi.getter(name="isEnterpriseAccount")
    def is_enterprise_account(self) -> pulumi.Output[_builtins.bool]:
        """
        The flag to indicate whether the account is an enterprise account or not.
        """
        return pulumi.get(self, "is_enterprise_account")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the account. This field must have 3 - 60 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def options(self) -> pulumi.Output[Optional['outputs.EnterpriseAccountOptions']]:
        """
        By default create_iam_service_id_with_apikey_and_owner_policies is turned off for a newly created child account. You can
        enable this property by passing 'true' in this boolean field. IAM service id has account owner IAM policies and the API
        key associated with it can generate a token and setup resources in the account.
        """
        return pulumi.get(self, "options")

    @_builtins.property
    @pulumi.getter(name="ownerEmail")
    def owner_email(self) -> pulumi.Output[_builtins.str]:
        """
        The email address of the owner of the account.
        """
        return pulumi.get(self, "owner_email")

    @_builtins.property
    @pulumi.getter(name="ownerIamId")
    def owner_iam_id(self) -> pulumi.Output[_builtins.str]:
        """
        The IAM ID of the account owner, such as `IBMid-0123ABC`. The IAM ID must already exist.
        """
        return pulumi.get(self, "owner_iam_id")

    @_builtins.property
    @pulumi.getter
    def paid(self) -> pulumi.Output[_builtins.bool]:
        """
        The type of account - whether it is free or paid.
        """
        return pulumi.get(self, "paid")

    @_builtins.property
    @pulumi.getter
    def parent(self) -> pulumi.Output[_builtins.str]:
        """
        The CRN of the parent under which the account will be created. The parent can be an existing account group or the
        enterprise itself.
        """
        return pulumi.get(self, "parent")

    @_builtins.property
    @pulumi.getter
    def state(self) -> pulumi.Output[_builtins.str]:
        """
        The state of the account.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> pulumi.Output[Optional['outputs.EnterpriseAccountTimeouts']]:
        return pulumi.get(self, "timeouts")

    @_builtins.property
    @pulumi.getter
    def traits(self) -> pulumi.Output[Optional[Sequence['outputs.EnterpriseAccountTrait']]]:
        """
        The traits object can be used to set properties on child accounts of an enterprise. You can pass a field to opt-out of
        Multi-Factor Authentication setting or setup enterprise IAM settings when creating a child account in the enterprise.
        This is an optional field.
        """
        return pulumi.get(self, "traits")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The time stamp at which the account was last updated.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> pulumi.Output[_builtins.str]:
        """
        The IAM ID of the user or service that updated the account.
        """
        return pulumi.get(self, "updated_by")

    @_builtins.property
    @pulumi.getter
    def url(self) -> pulumi.Output[_builtins.str]:
        """
        The URL of the account.
        """
        return pulumi.get(self, "url")

