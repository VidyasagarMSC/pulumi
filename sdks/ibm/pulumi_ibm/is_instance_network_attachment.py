# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IsInstanceNetworkAttachmentInitArgs', 'IsInstanceNetworkAttachment']

@pulumi.input_type
class IsInstanceNetworkAttachmentInitArgs:
    def __init__(__self__, *,
                 instance: pulumi.Input[_builtins.str],
                 is_instance_network_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 virtual_network_interface: Optional[pulumi.Input['IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgs']] = None):
        """
        The set of arguments for constructing a IsInstanceNetworkAttachment resource.
        :param pulumi.Input[_builtins.str] instance: The virtual server instance identifier.
        :param pulumi.Input[_builtins.str] name: The name for this instance network attachment. The name is unique across all network attachments for the instance.
        :param pulumi.Input['IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgs'] virtual_network_interface: A virtual network interface for the instance network attachment. This can be specified using an existing virtual network
               interface, or a prototype object for a new virtual network interface.
        """
        pulumi.set(__self__, "instance", instance)
        if is_instance_network_attachment_id is not None:
            pulumi.set(__self__, "is_instance_network_attachment_id", is_instance_network_attachment_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if virtual_network_interface is not None:
            pulumi.set(__self__, "virtual_network_interface", virtual_network_interface)

    @_builtins.property
    @pulumi.getter
    def instance(self) -> pulumi.Input[_builtins.str]:
        """
        The virtual server instance identifier.
        """
        return pulumi.get(self, "instance")

    @instance.setter
    def instance(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance", value)

    @_builtins.property
    @pulumi.getter(name="isInstanceNetworkAttachmentId")
    def is_instance_network_attachment_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "is_instance_network_attachment_id")

    @is_instance_network_attachment_id.setter
    def is_instance_network_attachment_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "is_instance_network_attachment_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name for this instance network attachment. The name is unique across all network attachments for the instance.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="virtualNetworkInterface")
    def virtual_network_interface(self) -> Optional[pulumi.Input['IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgs']]:
        """
        A virtual network interface for the instance network attachment. This can be specified using an existing virtual network
        interface, or a prototype object for a new virtual network interface.
        """
        return pulumi.get(self, "virtual_network_interface")

    @virtual_network_interface.setter
    def virtual_network_interface(self, value: Optional[pulumi.Input['IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgs']]):
        pulumi.set(self, "virtual_network_interface", value)


@pulumi.input_type
class _IsInstanceNetworkAttachmentState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 href: Optional[pulumi.Input[_builtins.str]] = None,
                 instance: Optional[pulumi.Input[_builtins.str]] = None,
                 is_instance_network_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lifecycle_state: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 network_attachment: Optional[pulumi.Input[_builtins.str]] = None,
                 port_speed: Optional[pulumi.Input[_builtins.float]] = None,
                 resource_type: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 virtual_network_interface: Optional[pulumi.Input['IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgs']] = None):
        """
        Input properties used for looking up and filtering IsInstanceNetworkAttachment resources.
        :param pulumi.Input[_builtins.str] created_at: The date and time that the instance network attachment was created.
        :param pulumi.Input[_builtins.str] href: The URL for this instance network attachment.
        :param pulumi.Input[_builtins.str] instance: The virtual server instance identifier.
        :param pulumi.Input[_builtins.str] lifecycle_state: The lifecycle state of the instance network attachment.
        :param pulumi.Input[_builtins.str] name: The name for this instance network attachment. The name is unique across all network attachments for the instance.
        :param pulumi.Input[_builtins.str] network_attachment: The unique identifier for this instance network attachment.
        :param pulumi.Input[_builtins.float] port_speed: The port speed for this instance network attachment in Mbps.
        :param pulumi.Input[_builtins.str] resource_type: The resource type.
        :param pulumi.Input[_builtins.str] type: The instance network attachment type.
        :param pulumi.Input['IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgs'] virtual_network_interface: A virtual network interface for the instance network attachment. This can be specified using an existing virtual network
               interface, or a prototype object for a new virtual network interface.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if href is not None:
            pulumi.set(__self__, "href", href)
        if instance is not None:
            pulumi.set(__self__, "instance", instance)
        if is_instance_network_attachment_id is not None:
            pulumi.set(__self__, "is_instance_network_attachment_id", is_instance_network_attachment_id)
        if lifecycle_state is not None:
            pulumi.set(__self__, "lifecycle_state", lifecycle_state)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if network_attachment is not None:
            pulumi.set(__self__, "network_attachment", network_attachment)
        if port_speed is not None:
            pulumi.set(__self__, "port_speed", port_speed)
        if resource_type is not None:
            pulumi.set(__self__, "resource_type", resource_type)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if virtual_network_interface is not None:
            pulumi.set(__self__, "virtual_network_interface", virtual_network_interface)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date and time that the instance network attachment was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def href(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL for this instance network attachment.
        """
        return pulumi.get(self, "href")

    @href.setter
    def href(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "href", value)

    @_builtins.property
    @pulumi.getter
    def instance(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The virtual server instance identifier.
        """
        return pulumi.get(self, "instance")

    @instance.setter
    def instance(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance", value)

    @_builtins.property
    @pulumi.getter(name="isInstanceNetworkAttachmentId")
    def is_instance_network_attachment_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "is_instance_network_attachment_id")

    @is_instance_network_attachment_id.setter
    def is_instance_network_attachment_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "is_instance_network_attachment_id", value)

    @_builtins.property
    @pulumi.getter(name="lifecycleState")
    def lifecycle_state(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The lifecycle state of the instance network attachment.
        """
        return pulumi.get(self, "lifecycle_state")

    @lifecycle_state.setter
    def lifecycle_state(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lifecycle_state", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name for this instance network attachment. The name is unique across all network attachments for the instance.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="networkAttachment")
    def network_attachment(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique identifier for this instance network attachment.
        """
        return pulumi.get(self, "network_attachment")

    @network_attachment.setter
    def network_attachment(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "network_attachment", value)

    @_builtins.property
    @pulumi.getter(name="portSpeed")
    def port_speed(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        The port speed for this instance network attachment in Mbps.
        """
        return pulumi.get(self, "port_speed")

    @port_speed.setter
    def port_speed(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "port_speed", value)

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The resource type.
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_type", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The instance network attachment type.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="virtualNetworkInterface")
    def virtual_network_interface(self) -> Optional[pulumi.Input['IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgs']]:
        """
        A virtual network interface for the instance network attachment. This can be specified using an existing virtual network
        interface, or a prototype object for a new virtual network interface.
        """
        return pulumi.get(self, "virtual_network_interface")

    @virtual_network_interface.setter
    def virtual_network_interface(self, value: Optional[pulumi.Input['IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgs']]):
        pulumi.set(self, "virtual_network_interface", value)


@pulumi.type_token("ibm:index/isInstanceNetworkAttachment:IsInstanceNetworkAttachment")
class IsInstanceNetworkAttachment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instance: Optional[pulumi.Input[_builtins.str]] = None,
                 is_instance_network_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 virtual_network_interface: Optional[pulumi.Input[Union['IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgs', 'IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgsDict']]] = None,
                 __props__=None):
        """
        Create a IsInstanceNetworkAttachment resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] instance: The virtual server instance identifier.
        :param pulumi.Input[_builtins.str] name: The name for this instance network attachment. The name is unique across all network attachments for the instance.
        :param pulumi.Input[Union['IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgs', 'IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgsDict']] virtual_network_interface: A virtual network interface for the instance network attachment. This can be specified using an existing virtual network
               interface, or a prototype object for a new virtual network interface.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IsInstanceNetworkAttachmentInitArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a IsInstanceNetworkAttachment resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param IsInstanceNetworkAttachmentInitArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IsInstanceNetworkAttachmentInitArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instance: Optional[pulumi.Input[_builtins.str]] = None,
                 is_instance_network_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 virtual_network_interface: Optional[pulumi.Input[Union['IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgs', 'IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IsInstanceNetworkAttachmentInitArgs.__new__(IsInstanceNetworkAttachmentInitArgs)

            if instance is None and not opts.urn:
                raise TypeError("Missing required property 'instance'")
            __props__.__dict__["instance"] = instance
            __props__.__dict__["is_instance_network_attachment_id"] = is_instance_network_attachment_id
            __props__.__dict__["name"] = name
            __props__.__dict__["virtual_network_interface"] = virtual_network_interface
            __props__.__dict__["created_at"] = None
            __props__.__dict__["href"] = None
            __props__.__dict__["lifecycle_state"] = None
            __props__.__dict__["network_attachment"] = None
            __props__.__dict__["port_speed"] = None
            __props__.__dict__["resource_type"] = None
            __props__.__dict__["type"] = None
        super(IsInstanceNetworkAttachment, __self__).__init__(
            'ibm:index/isInstanceNetworkAttachment:IsInstanceNetworkAttachment',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            href: Optional[pulumi.Input[_builtins.str]] = None,
            instance: Optional[pulumi.Input[_builtins.str]] = None,
            is_instance_network_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
            lifecycle_state: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            network_attachment: Optional[pulumi.Input[_builtins.str]] = None,
            port_speed: Optional[pulumi.Input[_builtins.float]] = None,
            resource_type: Optional[pulumi.Input[_builtins.str]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            virtual_network_interface: Optional[pulumi.Input[Union['IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgs', 'IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgsDict']]] = None) -> 'IsInstanceNetworkAttachment':
        """
        Get an existing IsInstanceNetworkAttachment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: The date and time that the instance network attachment was created.
        :param pulumi.Input[_builtins.str] href: The URL for this instance network attachment.
        :param pulumi.Input[_builtins.str] instance: The virtual server instance identifier.
        :param pulumi.Input[_builtins.str] lifecycle_state: The lifecycle state of the instance network attachment.
        :param pulumi.Input[_builtins.str] name: The name for this instance network attachment. The name is unique across all network attachments for the instance.
        :param pulumi.Input[_builtins.str] network_attachment: The unique identifier for this instance network attachment.
        :param pulumi.Input[_builtins.float] port_speed: The port speed for this instance network attachment in Mbps.
        :param pulumi.Input[_builtins.str] resource_type: The resource type.
        :param pulumi.Input[_builtins.str] type: The instance network attachment type.
        :param pulumi.Input[Union['IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgs', 'IsInstanceNetworkAttachmentVirtualNetworkInterfaceArgsDict']] virtual_network_interface: A virtual network interface for the instance network attachment. This can be specified using an existing virtual network
               interface, or a prototype object for a new virtual network interface.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IsInstanceNetworkAttachmentState.__new__(_IsInstanceNetworkAttachmentState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["href"] = href
        __props__.__dict__["instance"] = instance
        __props__.__dict__["is_instance_network_attachment_id"] = is_instance_network_attachment_id
        __props__.__dict__["lifecycle_state"] = lifecycle_state
        __props__.__dict__["name"] = name
        __props__.__dict__["network_attachment"] = network_attachment
        __props__.__dict__["port_speed"] = port_speed
        __props__.__dict__["resource_type"] = resource_type
        __props__.__dict__["type"] = type
        __props__.__dict__["virtual_network_interface"] = virtual_network_interface
        return IsInstanceNetworkAttachment(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The date and time that the instance network attachment was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def href(self) -> pulumi.Output[_builtins.str]:
        """
        The URL for this instance network attachment.
        """
        return pulumi.get(self, "href")

    @_builtins.property
    @pulumi.getter
    def instance(self) -> pulumi.Output[_builtins.str]:
        """
        The virtual server instance identifier.
        """
        return pulumi.get(self, "instance")

    @_builtins.property
    @pulumi.getter(name="isInstanceNetworkAttachmentId")
    def is_instance_network_attachment_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "is_instance_network_attachment_id")

    @_builtins.property
    @pulumi.getter(name="lifecycleState")
    def lifecycle_state(self) -> pulumi.Output[_builtins.str]:
        """
        The lifecycle state of the instance network attachment.
        """
        return pulumi.get(self, "lifecycle_state")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name for this instance network attachment. The name is unique across all network attachments for the instance.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="networkAttachment")
    def network_attachment(self) -> pulumi.Output[_builtins.str]:
        """
        The unique identifier for this instance network attachment.
        """
        return pulumi.get(self, "network_attachment")

    @_builtins.property
    @pulumi.getter(name="portSpeed")
    def port_speed(self) -> pulumi.Output[_builtins.float]:
        """
        The port speed for this instance network attachment in Mbps.
        """
        return pulumi.get(self, "port_speed")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> pulumi.Output[_builtins.str]:
        """
        The resource type.
        """
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        The instance network attachment type.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter(name="virtualNetworkInterface")
    def virtual_network_interface(self) -> pulumi.Output[Optional['outputs.IsInstanceNetworkAttachmentVirtualNetworkInterface']]:
        """
        A virtual network interface for the instance network attachment. This can be specified using an existing virtual network
        interface, or a prototype object for a new virtual network interface.
        """
        return pulumi.get(self, "virtual_network_interface")

