# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['NetworkGatewayArgs', 'NetworkGateway']

@pulumi.input_type
class NetworkGatewayArgs:
    def __init__(__self__, *,
                 members: pulumi.Input[Sequence[pulumi.Input['NetworkGatewayMemberArgs']]],
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 network_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 post_install_script_uri: Optional[pulumi.Input[_builtins.str]] = None,
                 ssh_key_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.float]]]] = None):
        """
        The set of arguments for constructing a NetworkGateway resource.
        :param pulumi.Input[Sequence[pulumi.Input['NetworkGatewayMemberArgs']]] members: The hardware members of this network Gateway
        :param pulumi.Input[_builtins.str] name: The name of the gateway
        """
        pulumi.set(__self__, "members", members)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if network_gateway_id is not None:
            pulumi.set(__self__, "network_gateway_id", network_gateway_id)
        if post_install_script_uri is not None:
            pulumi.set(__self__, "post_install_script_uri", post_install_script_uri)
        if ssh_key_ids is not None:
            pulumi.set(__self__, "ssh_key_ids", ssh_key_ids)

    @_builtins.property
    @pulumi.getter
    def members(self) -> pulumi.Input[Sequence[pulumi.Input['NetworkGatewayMemberArgs']]]:
        """
        The hardware members of this network Gateway
        """
        return pulumi.get(self, "members")

    @members.setter
    def members(self, value: pulumi.Input[Sequence[pulumi.Input['NetworkGatewayMemberArgs']]]):
        pulumi.set(self, "members", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the gateway
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="networkGatewayId")
    def network_gateway_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "network_gateway_id")

    @network_gateway_id.setter
    def network_gateway_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "network_gateway_id", value)

    @_builtins.property
    @pulumi.getter(name="postInstallScriptUri")
    def post_install_script_uri(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "post_install_script_uri")

    @post_install_script_uri.setter
    def post_install_script_uri(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "post_install_script_uri", value)

    @_builtins.property
    @pulumi.getter(name="sshKeyIds")
    def ssh_key_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.float]]]]:
        return pulumi.get(self, "ssh_key_ids")

    @ssh_key_ids.setter
    def ssh_key_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.float]]]]):
        pulumi.set(self, "ssh_key_ids", value)


@pulumi.input_type
class _NetworkGatewayState:
    def __init__(__self__, *,
                 associated_vlans: Optional[pulumi.Input[Sequence[pulumi.Input['NetworkGatewayAssociatedVlanArgs']]]] = None,
                 members: Optional[pulumi.Input[Sequence[pulumi.Input['NetworkGatewayMemberArgs']]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 network_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 post_install_script_uri: Optional[pulumi.Input[_builtins.str]] = None,
                 private_ip_address_id: Optional[pulumi.Input[_builtins.float]] = None,
                 private_ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
                 private_vlan_id: Optional[pulumi.Input[_builtins.float]] = None,
                 public_ip_address_id: Optional[pulumi.Input[_builtins.float]] = None,
                 public_ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
                 public_ipv6_address_id: Optional[pulumi.Input[_builtins.float]] = None,
                 public_vlan_id: Optional[pulumi.Input[_builtins.float]] = None,
                 ssh_key_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.float]]]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering NetworkGateway resources.
        :param pulumi.Input[Sequence[pulumi.Input['NetworkGatewayAssociatedVlanArgs']]] associated_vlans: The VLAN instances associated with this Network Gateway
        :param pulumi.Input[Sequence[pulumi.Input['NetworkGatewayMemberArgs']]] members: The hardware members of this network Gateway
        :param pulumi.Input[_builtins.str] name: The name of the gateway
        """
        if associated_vlans is not None:
            pulumi.set(__self__, "associated_vlans", associated_vlans)
        if members is not None:
            pulumi.set(__self__, "members", members)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if network_gateway_id is not None:
            pulumi.set(__self__, "network_gateway_id", network_gateway_id)
        if post_install_script_uri is not None:
            pulumi.set(__self__, "post_install_script_uri", post_install_script_uri)
        if private_ip_address_id is not None:
            pulumi.set(__self__, "private_ip_address_id", private_ip_address_id)
        if private_ipv4_address is not None:
            pulumi.set(__self__, "private_ipv4_address", private_ipv4_address)
        if private_vlan_id is not None:
            pulumi.set(__self__, "private_vlan_id", private_vlan_id)
        if public_ip_address_id is not None:
            pulumi.set(__self__, "public_ip_address_id", public_ip_address_id)
        if public_ipv4_address is not None:
            pulumi.set(__self__, "public_ipv4_address", public_ipv4_address)
        if public_ipv6_address_id is not None:
            pulumi.set(__self__, "public_ipv6_address_id", public_ipv6_address_id)
        if public_vlan_id is not None:
            pulumi.set(__self__, "public_vlan_id", public_vlan_id)
        if ssh_key_ids is not None:
            pulumi.set(__self__, "ssh_key_ids", ssh_key_ids)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter(name="associatedVlans")
    def associated_vlans(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['NetworkGatewayAssociatedVlanArgs']]]]:
        """
        The VLAN instances associated with this Network Gateway
        """
        return pulumi.get(self, "associated_vlans")

    @associated_vlans.setter
    def associated_vlans(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['NetworkGatewayAssociatedVlanArgs']]]]):
        pulumi.set(self, "associated_vlans", value)

    @_builtins.property
    @pulumi.getter
    def members(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['NetworkGatewayMemberArgs']]]]:
        """
        The hardware members of this network Gateway
        """
        return pulumi.get(self, "members")

    @members.setter
    def members(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['NetworkGatewayMemberArgs']]]]):
        pulumi.set(self, "members", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the gateway
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="networkGatewayId")
    def network_gateway_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "network_gateway_id")

    @network_gateway_id.setter
    def network_gateway_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "network_gateway_id", value)

    @_builtins.property
    @pulumi.getter(name="postInstallScriptUri")
    def post_install_script_uri(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "post_install_script_uri")

    @post_install_script_uri.setter
    def post_install_script_uri(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "post_install_script_uri", value)

    @_builtins.property
    @pulumi.getter(name="privateIpAddressId")
    def private_ip_address_id(self) -> Optional[pulumi.Input[_builtins.float]]:
        return pulumi.get(self, "private_ip_address_id")

    @private_ip_address_id.setter
    def private_ip_address_id(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "private_ip_address_id", value)

    @_builtins.property
    @pulumi.getter(name="privateIpv4Address")
    def private_ipv4_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "private_ipv4_address")

    @private_ipv4_address.setter
    def private_ipv4_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "private_ipv4_address", value)

    @_builtins.property
    @pulumi.getter(name="privateVlanId")
    def private_vlan_id(self) -> Optional[pulumi.Input[_builtins.float]]:
        return pulumi.get(self, "private_vlan_id")

    @private_vlan_id.setter
    def private_vlan_id(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "private_vlan_id", value)

    @_builtins.property
    @pulumi.getter(name="publicIpAddressId")
    def public_ip_address_id(self) -> Optional[pulumi.Input[_builtins.float]]:
        return pulumi.get(self, "public_ip_address_id")

    @public_ip_address_id.setter
    def public_ip_address_id(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "public_ip_address_id", value)

    @_builtins.property
    @pulumi.getter(name="publicIpv4Address")
    def public_ipv4_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "public_ipv4_address")

    @public_ipv4_address.setter
    def public_ipv4_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "public_ipv4_address", value)

    @_builtins.property
    @pulumi.getter(name="publicIpv6AddressId")
    def public_ipv6_address_id(self) -> Optional[pulumi.Input[_builtins.float]]:
        return pulumi.get(self, "public_ipv6_address_id")

    @public_ipv6_address_id.setter
    def public_ipv6_address_id(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "public_ipv6_address_id", value)

    @_builtins.property
    @pulumi.getter(name="publicVlanId")
    def public_vlan_id(self) -> Optional[pulumi.Input[_builtins.float]]:
        return pulumi.get(self, "public_vlan_id")

    @public_vlan_id.setter
    def public_vlan_id(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "public_vlan_id", value)

    @_builtins.property
    @pulumi.getter(name="sshKeyIds")
    def ssh_key_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.float]]]]:
        return pulumi.get(self, "ssh_key_ids")

    @ssh_key_ids.setter
    def ssh_key_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.float]]]]):
        pulumi.set(self, "ssh_key_ids", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)


@pulumi.type_token("ibm:index/networkGateway:NetworkGateway")
class NetworkGateway(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 members: Optional[pulumi.Input[Sequence[pulumi.Input[Union['NetworkGatewayMemberArgs', 'NetworkGatewayMemberArgsDict']]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 network_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 post_install_script_uri: Optional[pulumi.Input[_builtins.str]] = None,
                 ssh_key_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.float]]]] = None,
                 __props__=None):
        """
        Create a NetworkGateway resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['NetworkGatewayMemberArgs', 'NetworkGatewayMemberArgsDict']]]] members: The hardware members of this network Gateway
        :param pulumi.Input[_builtins.str] name: The name of the gateway
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: NetworkGatewayArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a NetworkGateway resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param NetworkGatewayArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(NetworkGatewayArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 members: Optional[pulumi.Input[Sequence[pulumi.Input[Union['NetworkGatewayMemberArgs', 'NetworkGatewayMemberArgsDict']]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 network_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 post_install_script_uri: Optional[pulumi.Input[_builtins.str]] = None,
                 ssh_key_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.float]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = NetworkGatewayArgs.__new__(NetworkGatewayArgs)

            if members is None and not opts.urn:
                raise TypeError("Missing required property 'members'")
            __props__.__dict__["members"] = members
            __props__.__dict__["name"] = name
            __props__.__dict__["network_gateway_id"] = network_gateway_id
            __props__.__dict__["post_install_script_uri"] = post_install_script_uri
            __props__.__dict__["ssh_key_ids"] = ssh_key_ids
            __props__.__dict__["associated_vlans"] = None
            __props__.__dict__["private_ip_address_id"] = None
            __props__.__dict__["private_ipv4_address"] = None
            __props__.__dict__["private_vlan_id"] = None
            __props__.__dict__["public_ip_address_id"] = None
            __props__.__dict__["public_ipv4_address"] = None
            __props__.__dict__["public_ipv6_address_id"] = None
            __props__.__dict__["public_vlan_id"] = None
            __props__.__dict__["status"] = None
        super(NetworkGateway, __self__).__init__(
            'ibm:index/networkGateway:NetworkGateway',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            associated_vlans: Optional[pulumi.Input[Sequence[pulumi.Input[Union['NetworkGatewayAssociatedVlanArgs', 'NetworkGatewayAssociatedVlanArgsDict']]]]] = None,
            members: Optional[pulumi.Input[Sequence[pulumi.Input[Union['NetworkGatewayMemberArgs', 'NetworkGatewayMemberArgsDict']]]]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            network_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
            post_install_script_uri: Optional[pulumi.Input[_builtins.str]] = None,
            private_ip_address_id: Optional[pulumi.Input[_builtins.float]] = None,
            private_ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
            private_vlan_id: Optional[pulumi.Input[_builtins.float]] = None,
            public_ip_address_id: Optional[pulumi.Input[_builtins.float]] = None,
            public_ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
            public_ipv6_address_id: Optional[pulumi.Input[_builtins.float]] = None,
            public_vlan_id: Optional[pulumi.Input[_builtins.float]] = None,
            ssh_key_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.float]]]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None) -> 'NetworkGateway':
        """
        Get an existing NetworkGateway resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['NetworkGatewayAssociatedVlanArgs', 'NetworkGatewayAssociatedVlanArgsDict']]]] associated_vlans: The VLAN instances associated with this Network Gateway
        :param pulumi.Input[Sequence[pulumi.Input[Union['NetworkGatewayMemberArgs', 'NetworkGatewayMemberArgsDict']]]] members: The hardware members of this network Gateway
        :param pulumi.Input[_builtins.str] name: The name of the gateway
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _NetworkGatewayState.__new__(_NetworkGatewayState)

        __props__.__dict__["associated_vlans"] = associated_vlans
        __props__.__dict__["members"] = members
        __props__.__dict__["name"] = name
        __props__.__dict__["network_gateway_id"] = network_gateway_id
        __props__.__dict__["post_install_script_uri"] = post_install_script_uri
        __props__.__dict__["private_ip_address_id"] = private_ip_address_id
        __props__.__dict__["private_ipv4_address"] = private_ipv4_address
        __props__.__dict__["private_vlan_id"] = private_vlan_id
        __props__.__dict__["public_ip_address_id"] = public_ip_address_id
        __props__.__dict__["public_ipv4_address"] = public_ipv4_address
        __props__.__dict__["public_ipv6_address_id"] = public_ipv6_address_id
        __props__.__dict__["public_vlan_id"] = public_vlan_id
        __props__.__dict__["ssh_key_ids"] = ssh_key_ids
        __props__.__dict__["status"] = status
        return NetworkGateway(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="associatedVlans")
    def associated_vlans(self) -> pulumi.Output[Sequence['outputs.NetworkGatewayAssociatedVlan']]:
        """
        The VLAN instances associated with this Network Gateway
        """
        return pulumi.get(self, "associated_vlans")

    @_builtins.property
    @pulumi.getter
    def members(self) -> pulumi.Output[Sequence['outputs.NetworkGatewayMember']]:
        """
        The hardware members of this network Gateway
        """
        return pulumi.get(self, "members")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the gateway
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="networkGatewayId")
    def network_gateway_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "network_gateway_id")

    @_builtins.property
    @pulumi.getter(name="postInstallScriptUri")
    def post_install_script_uri(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "post_install_script_uri")

    @_builtins.property
    @pulumi.getter(name="privateIpAddressId")
    def private_ip_address_id(self) -> pulumi.Output[_builtins.float]:
        return pulumi.get(self, "private_ip_address_id")

    @_builtins.property
    @pulumi.getter(name="privateIpv4Address")
    def private_ipv4_address(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "private_ipv4_address")

    @_builtins.property
    @pulumi.getter(name="privateVlanId")
    def private_vlan_id(self) -> pulumi.Output[_builtins.float]:
        return pulumi.get(self, "private_vlan_id")

    @_builtins.property
    @pulumi.getter(name="publicIpAddressId")
    def public_ip_address_id(self) -> pulumi.Output[_builtins.float]:
        return pulumi.get(self, "public_ip_address_id")

    @_builtins.property
    @pulumi.getter(name="publicIpv4Address")
    def public_ipv4_address(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "public_ipv4_address")

    @_builtins.property
    @pulumi.getter(name="publicIpv6AddressId")
    def public_ipv6_address_id(self) -> pulumi.Output[_builtins.float]:
        return pulumi.get(self, "public_ipv6_address_id")

    @_builtins.property
    @pulumi.getter(name="publicVlanId")
    def public_vlan_id(self) -> pulumi.Output[_builtins.float]:
        return pulumi.get(self, "public_vlan_id")

    @_builtins.property
    @pulumi.getter(name="sshKeyIds")
    def ssh_key_ids(self) -> pulumi.Output[Optional[Sequence[_builtins.float]]]:
        return pulumi.get(self, "ssh_key_ids")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "status")

