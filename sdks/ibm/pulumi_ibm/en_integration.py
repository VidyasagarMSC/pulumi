# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['EnIntegrationArgs', 'EnIntegration']

@pulumi.input_type
class EnIntegrationArgs:
    def __init__(__self__, *,
                 instance_guid: pulumi.Input[_builtins.str],
                 integration_id: pulumi.Input[_builtins.str],
                 metadata: pulumi.Input['EnIntegrationMetadataArgs'],
                 type: pulumi.Input[_builtins.str],
                 en_integration_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a EnIntegration resource.
        :param pulumi.Input[_builtins.str] instance_guid: Unique identifier for IBM Cloud Event Notifications instance.
        :param pulumi.Input[_builtins.str] integration_id: Unique identifier for IBM Cloud Event Notifications instance.
        :param pulumi.Input[_builtins.str] type: The type of key integration kms/hs-crypto.
        """
        pulumi.set(__self__, "instance_guid", instance_guid)
        pulumi.set(__self__, "integration_id", integration_id)
        pulumi.set(__self__, "metadata", metadata)
        pulumi.set(__self__, "type", type)
        if en_integration_id is not None:
            pulumi.set(__self__, "en_integration_id", en_integration_id)

    @_builtins.property
    @pulumi.getter(name="instanceGuid")
    def instance_guid(self) -> pulumi.Input[_builtins.str]:
        """
        Unique identifier for IBM Cloud Event Notifications instance.
        """
        return pulumi.get(self, "instance_guid")

    @instance_guid.setter
    def instance_guid(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_guid", value)

    @_builtins.property
    @pulumi.getter(name="integrationId")
    def integration_id(self) -> pulumi.Input[_builtins.str]:
        """
        Unique identifier for IBM Cloud Event Notifications instance.
        """
        return pulumi.get(self, "integration_id")

    @integration_id.setter
    def integration_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "integration_id", value)

    @_builtins.property
    @pulumi.getter
    def metadata(self) -> pulumi.Input['EnIntegrationMetadataArgs']:
        return pulumi.get(self, "metadata")

    @metadata.setter
    def metadata(self, value: pulumi.Input['EnIntegrationMetadataArgs']):
        pulumi.set(self, "metadata", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Input[_builtins.str]:
        """
        The type of key integration kms/hs-crypto.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="enIntegrationId")
    def en_integration_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "en_integration_id")

    @en_integration_id.setter
    def en_integration_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "en_integration_id", value)


@pulumi.input_type
class _EnIntegrationState:
    def __init__(__self__, *,
                 en_integration_id: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_guid: Optional[pulumi.Input[_builtins.str]] = None,
                 integration_id: Optional[pulumi.Input[_builtins.str]] = None,
                 metadata: Optional[pulumi.Input['EnIntegrationMetadataArgs']] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering EnIntegration resources.
        :param pulumi.Input[_builtins.str] instance_guid: Unique identifier for IBM Cloud Event Notifications instance.
        :param pulumi.Input[_builtins.str] integration_id: Unique identifier for IBM Cloud Event Notifications instance.
        :param pulumi.Input[_builtins.str] type: The type of key integration kms/hs-crypto.
        :param pulumi.Input[_builtins.str] updated_at: Last updated time.
        """
        if en_integration_id is not None:
            pulumi.set(__self__, "en_integration_id", en_integration_id)
        if instance_guid is not None:
            pulumi.set(__self__, "instance_guid", instance_guid)
        if integration_id is not None:
            pulumi.set(__self__, "integration_id", integration_id)
        if metadata is not None:
            pulumi.set(__self__, "metadata", metadata)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="enIntegrationId")
    def en_integration_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "en_integration_id")

    @en_integration_id.setter
    def en_integration_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "en_integration_id", value)

    @_builtins.property
    @pulumi.getter(name="instanceGuid")
    def instance_guid(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Unique identifier for IBM Cloud Event Notifications instance.
        """
        return pulumi.get(self, "instance_guid")

    @instance_guid.setter
    def instance_guid(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_guid", value)

    @_builtins.property
    @pulumi.getter(name="integrationId")
    def integration_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Unique identifier for IBM Cloud Event Notifications instance.
        """
        return pulumi.get(self, "integration_id")

    @integration_id.setter
    def integration_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "integration_id", value)

    @_builtins.property
    @pulumi.getter
    def metadata(self) -> Optional[pulumi.Input['EnIntegrationMetadataArgs']]:
        return pulumi.get(self, "metadata")

    @metadata.setter
    def metadata(self, value: Optional[pulumi.Input['EnIntegrationMetadataArgs']]):
        pulumi.set(self, "metadata", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The type of key integration kms/hs-crypto.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Last updated time.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("ibm:index/enIntegration:EnIntegration")
class EnIntegration(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 en_integration_id: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_guid: Optional[pulumi.Input[_builtins.str]] = None,
                 integration_id: Optional[pulumi.Input[_builtins.str]] = None,
                 metadata: Optional[pulumi.Input[Union['EnIntegrationMetadataArgs', 'EnIntegrationMetadataArgsDict']]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a EnIntegration resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] instance_guid: Unique identifier for IBM Cloud Event Notifications instance.
        :param pulumi.Input[_builtins.str] integration_id: Unique identifier for IBM Cloud Event Notifications instance.
        :param pulumi.Input[_builtins.str] type: The type of key integration kms/hs-crypto.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: EnIntegrationArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a EnIntegration resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param EnIntegrationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(EnIntegrationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 en_integration_id: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_guid: Optional[pulumi.Input[_builtins.str]] = None,
                 integration_id: Optional[pulumi.Input[_builtins.str]] = None,
                 metadata: Optional[pulumi.Input[Union['EnIntegrationMetadataArgs', 'EnIntegrationMetadataArgsDict']]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = EnIntegrationArgs.__new__(EnIntegrationArgs)

            __props__.__dict__["en_integration_id"] = en_integration_id
            if instance_guid is None and not opts.urn:
                raise TypeError("Missing required property 'instance_guid'")
            __props__.__dict__["instance_guid"] = instance_guid
            if integration_id is None and not opts.urn:
                raise TypeError("Missing required property 'integration_id'")
            __props__.__dict__["integration_id"] = integration_id
            if metadata is None and not opts.urn:
                raise TypeError("Missing required property 'metadata'")
            __props__.__dict__["metadata"] = metadata
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            __props__.__dict__["updated_at"] = None
        super(EnIntegration, __self__).__init__(
            'ibm:index/enIntegration:EnIntegration',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            en_integration_id: Optional[pulumi.Input[_builtins.str]] = None,
            instance_guid: Optional[pulumi.Input[_builtins.str]] = None,
            integration_id: Optional[pulumi.Input[_builtins.str]] = None,
            metadata: Optional[pulumi.Input[Union['EnIntegrationMetadataArgs', 'EnIntegrationMetadataArgsDict']]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'EnIntegration':
        """
        Get an existing EnIntegration resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] instance_guid: Unique identifier for IBM Cloud Event Notifications instance.
        :param pulumi.Input[_builtins.str] integration_id: Unique identifier for IBM Cloud Event Notifications instance.
        :param pulumi.Input[_builtins.str] type: The type of key integration kms/hs-crypto.
        :param pulumi.Input[_builtins.str] updated_at: Last updated time.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _EnIntegrationState.__new__(_EnIntegrationState)

        __props__.__dict__["en_integration_id"] = en_integration_id
        __props__.__dict__["instance_guid"] = instance_guid
        __props__.__dict__["integration_id"] = integration_id
        __props__.__dict__["metadata"] = metadata
        __props__.__dict__["type"] = type
        __props__.__dict__["updated_at"] = updated_at
        return EnIntegration(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="enIntegrationId")
    def en_integration_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "en_integration_id")

    @_builtins.property
    @pulumi.getter(name="instanceGuid")
    def instance_guid(self) -> pulumi.Output[_builtins.str]:
        """
        Unique identifier for IBM Cloud Event Notifications instance.
        """
        return pulumi.get(self, "instance_guid")

    @_builtins.property
    @pulumi.getter(name="integrationId")
    def integration_id(self) -> pulumi.Output[_builtins.str]:
        """
        Unique identifier for IBM Cloud Event Notifications instance.
        """
        return pulumi.get(self, "integration_id")

    @_builtins.property
    @pulumi.getter
    def metadata(self) -> pulumi.Output['outputs.EnIntegrationMetadata']:
        return pulumi.get(self, "metadata")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        The type of key integration kms/hs-crypto.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Last updated time.
        """
        return pulumi.get(self, "updated_at")

