# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['DlProviderGatewayArgs', 'DlProviderGateway']

@pulumi.input_type
class DlProviderGatewayArgs:
    def __init__(__self__, *,
                 bgp_asn: pulumi.Input[_builtins.float],
                 customer_account_id: pulumi.Input[_builtins.str],
                 port: pulumi.Input[_builtins.str],
                 speed_mbps: pulumi.Input[_builtins.float],
                 bgp_cer_cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 bgp_ibm_cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 dl_provider_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 vlan: Optional[pulumi.Input[_builtins.float]] = None):
        """
        The set of arguments for constructing a DlProviderGateway resource.
        :param pulumi.Input[_builtins.float] bgp_asn: BGP ASN
        :param pulumi.Input[_builtins.str] customer_account_id: Customer IBM Cloud account ID for the new gateway. A gateway object containing the pending create request will become
               available in the specified account.
        :param pulumi.Input[_builtins.str] port: Gateway port
        :param pulumi.Input[_builtins.float] speed_mbps: Gateway speed in megabits per second
        :param pulumi.Input[_builtins.str] bgp_cer_cidr: BGP customer edge router CIDR
        :param pulumi.Input[_builtins.str] bgp_ibm_cidr: BGP IBM CIDR
        :param pulumi.Input[_builtins.str] name: The unique user-defined name for this gateway
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: Tags for the direct link gateway
        :param pulumi.Input[_builtins.float] vlan: VLAN allocated for this gateway
        """
        pulumi.set(__self__, "bgp_asn", bgp_asn)
        pulumi.set(__self__, "customer_account_id", customer_account_id)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "speed_mbps", speed_mbps)
        if bgp_cer_cidr is not None:
            pulumi.set(__self__, "bgp_cer_cidr", bgp_cer_cidr)
        if bgp_ibm_cidr is not None:
            pulumi.set(__self__, "bgp_ibm_cidr", bgp_ibm_cidr)
        if dl_provider_gateway_id is not None:
            pulumi.set(__self__, "dl_provider_gateway_id", dl_provider_gateway_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if vlan is not None:
            pulumi.set(__self__, "vlan", vlan)

    @_builtins.property
    @pulumi.getter(name="bgpAsn")
    def bgp_asn(self) -> pulumi.Input[_builtins.float]:
        """
        BGP ASN
        """
        return pulumi.get(self, "bgp_asn")

    @bgp_asn.setter
    def bgp_asn(self, value: pulumi.Input[_builtins.float]):
        pulumi.set(self, "bgp_asn", value)

    @_builtins.property
    @pulumi.getter(name="customerAccountId")
    def customer_account_id(self) -> pulumi.Input[_builtins.str]:
        """
        Customer IBM Cloud account ID for the new gateway. A gateway object containing the pending create request will become
        available in the specified account.
        """
        return pulumi.get(self, "customer_account_id")

    @customer_account_id.setter
    def customer_account_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "customer_account_id", value)

    @_builtins.property
    @pulumi.getter
    def port(self) -> pulumi.Input[_builtins.str]:
        """
        Gateway port
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "port", value)

    @_builtins.property
    @pulumi.getter(name="speedMbps")
    def speed_mbps(self) -> pulumi.Input[_builtins.float]:
        """
        Gateway speed in megabits per second
        """
        return pulumi.get(self, "speed_mbps")

    @speed_mbps.setter
    def speed_mbps(self, value: pulumi.Input[_builtins.float]):
        pulumi.set(self, "speed_mbps", value)

    @_builtins.property
    @pulumi.getter(name="bgpCerCidr")
    def bgp_cer_cidr(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        BGP customer edge router CIDR
        """
        return pulumi.get(self, "bgp_cer_cidr")

    @bgp_cer_cidr.setter
    def bgp_cer_cidr(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "bgp_cer_cidr", value)

    @_builtins.property
    @pulumi.getter(name="bgpIbmCidr")
    def bgp_ibm_cidr(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        BGP IBM CIDR
        """
        return pulumi.get(self, "bgp_ibm_cidr")

    @bgp_ibm_cidr.setter
    def bgp_ibm_cidr(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "bgp_ibm_cidr", value)

    @_builtins.property
    @pulumi.getter(name="dlProviderGatewayId")
    def dl_provider_gateway_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "dl_provider_gateway_id")

    @dl_provider_gateway_id.setter
    def dl_provider_gateway_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dl_provider_gateway_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique user-defined name for this gateway
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Tags for the direct link gateway
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter
    def vlan(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        VLAN allocated for this gateway
        """
        return pulumi.get(self, "vlan")

    @vlan.setter
    def vlan(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "vlan", value)


@pulumi.input_type
class _DlProviderGatewayState:
    def __init__(__self__, *,
                 bgp_asn: Optional[pulumi.Input[_builtins.float]] = None,
                 bgp_cer_cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 bgp_ibm_asn: Optional[pulumi.Input[_builtins.float]] = None,
                 bgp_ibm_cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 bgp_status: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 customer_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 dl_provider_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 operational_status: Optional[pulumi.Input[_builtins.str]] = None,
                 port: Optional[pulumi.Input[_builtins.str]] = None,
                 provider_api_managed: Optional[pulumi.Input[_builtins.bool]] = None,
                 resource_controller_url: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_crn: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_group_name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_name: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_status: Optional[pulumi.Input[_builtins.str]] = None,
                 speed_mbps: Optional[pulumi.Input[_builtins.float]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 vlan: Optional[pulumi.Input[_builtins.float]] = None):
        """
        Input properties used for looking up and filtering DlProviderGateway resources.
        :param pulumi.Input[_builtins.float] bgp_asn: BGP ASN
        :param pulumi.Input[_builtins.str] bgp_cer_cidr: BGP customer edge router CIDR
        :param pulumi.Input[_builtins.float] bgp_ibm_asn: IBM BGP ASN
        :param pulumi.Input[_builtins.str] bgp_ibm_cidr: BGP IBM CIDR
        :param pulumi.Input[_builtins.str] bgp_status: Gateway BGP status
        :param pulumi.Input[_builtins.str] created_at: The date and time resource was created
        :param pulumi.Input[_builtins.str] crn: The CRN (Cloud Resource Name) of this gateway
        :param pulumi.Input[_builtins.str] customer_account_id: Customer IBM Cloud account ID for the new gateway. A gateway object containing the pending create request will become
               available in the specified account.
        :param pulumi.Input[_builtins.str] name: The unique user-defined name for this gateway
        :param pulumi.Input[_builtins.str] operational_status: Gateway operational status
        :param pulumi.Input[_builtins.str] port: Gateway port
        :param pulumi.Input[_builtins.bool] provider_api_managed: Indicates whether gateway was created through a provider portal
        :param pulumi.Input[_builtins.str] resource_controller_url: The URL of the IBM Cloud dashboard that can be used to explore and view details about this instance
        :param pulumi.Input[_builtins.str] resource_crn: The crn of the resource
        :param pulumi.Input[_builtins.str] resource_group_name: The resource group name in which resource is provisioned
        :param pulumi.Input[_builtins.str] resource_name: The name of the resource
        :param pulumi.Input[_builtins.str] resource_status: The status of the resource
        :param pulumi.Input[_builtins.float] speed_mbps: Gateway speed in megabits per second
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: Tags for the direct link gateway
        :param pulumi.Input[_builtins.str] type: Gateway type
        :param pulumi.Input[_builtins.float] vlan: VLAN allocated for this gateway
        """
        if bgp_asn is not None:
            pulumi.set(__self__, "bgp_asn", bgp_asn)
        if bgp_cer_cidr is not None:
            pulumi.set(__self__, "bgp_cer_cidr", bgp_cer_cidr)
        if bgp_ibm_asn is not None:
            pulumi.set(__self__, "bgp_ibm_asn", bgp_ibm_asn)
        if bgp_ibm_cidr is not None:
            pulumi.set(__self__, "bgp_ibm_cidr", bgp_ibm_cidr)
        if bgp_status is not None:
            pulumi.set(__self__, "bgp_status", bgp_status)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if crn is not None:
            pulumi.set(__self__, "crn", crn)
        if customer_account_id is not None:
            pulumi.set(__self__, "customer_account_id", customer_account_id)
        if dl_provider_gateway_id is not None:
            pulumi.set(__self__, "dl_provider_gateway_id", dl_provider_gateway_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if operational_status is not None:
            pulumi.set(__self__, "operational_status", operational_status)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if provider_api_managed is not None:
            pulumi.set(__self__, "provider_api_managed", provider_api_managed)
        if resource_controller_url is not None:
            pulumi.set(__self__, "resource_controller_url", resource_controller_url)
        if resource_crn is not None:
            pulumi.set(__self__, "resource_crn", resource_crn)
        if resource_group_name is not None:
            pulumi.set(__self__, "resource_group_name", resource_group_name)
        if resource_name is not None:
            pulumi.set(__self__, "resource_name", resource_name)
        if resource_status is not None:
            pulumi.set(__self__, "resource_status", resource_status)
        if speed_mbps is not None:
            pulumi.set(__self__, "speed_mbps", speed_mbps)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if vlan is not None:
            pulumi.set(__self__, "vlan", vlan)

    @_builtins.property
    @pulumi.getter(name="bgpAsn")
    def bgp_asn(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        BGP ASN
        """
        return pulumi.get(self, "bgp_asn")

    @bgp_asn.setter
    def bgp_asn(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "bgp_asn", value)

    @_builtins.property
    @pulumi.getter(name="bgpCerCidr")
    def bgp_cer_cidr(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        BGP customer edge router CIDR
        """
        return pulumi.get(self, "bgp_cer_cidr")

    @bgp_cer_cidr.setter
    def bgp_cer_cidr(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "bgp_cer_cidr", value)

    @_builtins.property
    @pulumi.getter(name="bgpIbmAsn")
    def bgp_ibm_asn(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        IBM BGP ASN
        """
        return pulumi.get(self, "bgp_ibm_asn")

    @bgp_ibm_asn.setter
    def bgp_ibm_asn(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "bgp_ibm_asn", value)

    @_builtins.property
    @pulumi.getter(name="bgpIbmCidr")
    def bgp_ibm_cidr(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        BGP IBM CIDR
        """
        return pulumi.get(self, "bgp_ibm_cidr")

    @bgp_ibm_cidr.setter
    def bgp_ibm_cidr(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "bgp_ibm_cidr", value)

    @_builtins.property
    @pulumi.getter(name="bgpStatus")
    def bgp_status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Gateway BGP status
        """
        return pulumi.get(self, "bgp_status")

    @bgp_status.setter
    def bgp_status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "bgp_status", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date and time resource was created
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The CRN (Cloud Resource Name) of this gateway
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter(name="customerAccountId")
    def customer_account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Customer IBM Cloud account ID for the new gateway. A gateway object containing the pending create request will become
        available in the specified account.
        """
        return pulumi.get(self, "customer_account_id")

    @customer_account_id.setter
    def customer_account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "customer_account_id", value)

    @_builtins.property
    @pulumi.getter(name="dlProviderGatewayId")
    def dl_provider_gateway_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "dl_provider_gateway_id")

    @dl_provider_gateway_id.setter
    def dl_provider_gateway_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dl_provider_gateway_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique user-defined name for this gateway
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="operationalStatus")
    def operational_status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Gateway operational status
        """
        return pulumi.get(self, "operational_status")

    @operational_status.setter
    def operational_status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "operational_status", value)

    @_builtins.property
    @pulumi.getter
    def port(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Gateway port
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "port", value)

    @_builtins.property
    @pulumi.getter(name="providerApiManaged")
    def provider_api_managed(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Indicates whether gateway was created through a provider portal
        """
        return pulumi.get(self, "provider_api_managed")

    @provider_api_managed.setter
    def provider_api_managed(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "provider_api_managed", value)

    @_builtins.property
    @pulumi.getter(name="resourceControllerUrl")
    def resource_controller_url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL of the IBM Cloud dashboard that can be used to explore and view details about this instance
        """
        return pulumi.get(self, "resource_controller_url")

    @resource_controller_url.setter
    def resource_controller_url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_controller_url", value)

    @_builtins.property
    @pulumi.getter(name="resourceCrn")
    def resource_crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The crn of the resource
        """
        return pulumi.get(self, "resource_crn")

    @resource_crn.setter
    def resource_crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_crn", value)

    @_builtins.property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The resource group name in which resource is provisioned
        """
        return pulumi.get(self, "resource_group_name")

    @resource_group_name.setter
    def resource_group_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_group_name", value)

    @_builtins.property
    @pulumi.getter(name="resourceName")
    def resource_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the resource
        """
        return pulumi.get(self, "resource_name")

    @resource_name.setter
    def resource_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_name", value)

    @_builtins.property
    @pulumi.getter(name="resourceStatus")
    def resource_status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status of the resource
        """
        return pulumi.get(self, "resource_status")

    @resource_status.setter
    def resource_status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_status", value)

    @_builtins.property
    @pulumi.getter(name="speedMbps")
    def speed_mbps(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Gateway speed in megabits per second
        """
        return pulumi.get(self, "speed_mbps")

    @speed_mbps.setter
    def speed_mbps(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "speed_mbps", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Tags for the direct link gateway
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Gateway type
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter
    def vlan(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        VLAN allocated for this gateway
        """
        return pulumi.get(self, "vlan")

    @vlan.setter
    def vlan(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "vlan", value)


@pulumi.type_token("ibm:index/dlProviderGateway:DlProviderGateway")
class DlProviderGateway(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bgp_asn: Optional[pulumi.Input[_builtins.float]] = None,
                 bgp_cer_cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 bgp_ibm_cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 customer_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 dl_provider_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 port: Optional[pulumi.Input[_builtins.str]] = None,
                 speed_mbps: Optional[pulumi.Input[_builtins.float]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 vlan: Optional[pulumi.Input[_builtins.float]] = None,
                 __props__=None):
        """
        Create a DlProviderGateway resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.float] bgp_asn: BGP ASN
        :param pulumi.Input[_builtins.str] bgp_cer_cidr: BGP customer edge router CIDR
        :param pulumi.Input[_builtins.str] bgp_ibm_cidr: BGP IBM CIDR
        :param pulumi.Input[_builtins.str] customer_account_id: Customer IBM Cloud account ID for the new gateway. A gateway object containing the pending create request will become
               available in the specified account.
        :param pulumi.Input[_builtins.str] name: The unique user-defined name for this gateway
        :param pulumi.Input[_builtins.str] port: Gateway port
        :param pulumi.Input[_builtins.float] speed_mbps: Gateway speed in megabits per second
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: Tags for the direct link gateway
        :param pulumi.Input[_builtins.float] vlan: VLAN allocated for this gateway
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: DlProviderGatewayArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a DlProviderGateway resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param DlProviderGatewayArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DlProviderGatewayArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bgp_asn: Optional[pulumi.Input[_builtins.float]] = None,
                 bgp_cer_cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 bgp_ibm_cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 customer_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 dl_provider_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 port: Optional[pulumi.Input[_builtins.str]] = None,
                 speed_mbps: Optional[pulumi.Input[_builtins.float]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 vlan: Optional[pulumi.Input[_builtins.float]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DlProviderGatewayArgs.__new__(DlProviderGatewayArgs)

            if bgp_asn is None and not opts.urn:
                raise TypeError("Missing required property 'bgp_asn'")
            __props__.__dict__["bgp_asn"] = bgp_asn
            __props__.__dict__["bgp_cer_cidr"] = bgp_cer_cidr
            __props__.__dict__["bgp_ibm_cidr"] = bgp_ibm_cidr
            if customer_account_id is None and not opts.urn:
                raise TypeError("Missing required property 'customer_account_id'")
            __props__.__dict__["customer_account_id"] = customer_account_id
            __props__.__dict__["dl_provider_gateway_id"] = dl_provider_gateway_id
            __props__.__dict__["name"] = name
            if port is None and not opts.urn:
                raise TypeError("Missing required property 'port'")
            __props__.__dict__["port"] = port
            if speed_mbps is None and not opts.urn:
                raise TypeError("Missing required property 'speed_mbps'")
            __props__.__dict__["speed_mbps"] = speed_mbps
            __props__.__dict__["tags"] = tags
            __props__.__dict__["vlan"] = vlan
            __props__.__dict__["bgp_ibm_asn"] = None
            __props__.__dict__["bgp_status"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["crn"] = None
            __props__.__dict__["operational_status"] = None
            __props__.__dict__["provider_api_managed"] = None
            __props__.__dict__["resource_controller_url"] = None
            __props__.__dict__["resource_crn"] = None
            __props__.__dict__["resource_group_name"] = None
            __props__.__dict__["resource_name"] = None
            __props__.__dict__["resource_status"] = None
            __props__.__dict__["type"] = None
        super(DlProviderGateway, __self__).__init__(
            'ibm:index/dlProviderGateway:DlProviderGateway',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            bgp_asn: Optional[pulumi.Input[_builtins.float]] = None,
            bgp_cer_cidr: Optional[pulumi.Input[_builtins.str]] = None,
            bgp_ibm_asn: Optional[pulumi.Input[_builtins.float]] = None,
            bgp_ibm_cidr: Optional[pulumi.Input[_builtins.str]] = None,
            bgp_status: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            crn: Optional[pulumi.Input[_builtins.str]] = None,
            customer_account_id: Optional[pulumi.Input[_builtins.str]] = None,
            dl_provider_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            operational_status: Optional[pulumi.Input[_builtins.str]] = None,
            port: Optional[pulumi.Input[_builtins.str]] = None,
            provider_api_managed: Optional[pulumi.Input[_builtins.bool]] = None,
            resource_controller_url: Optional[pulumi.Input[_builtins.str]] = None,
            resource_crn: Optional[pulumi.Input[_builtins.str]] = None,
            resource_group_name: Optional[pulumi.Input[_builtins.str]] = None,
            resource_name_: Optional[pulumi.Input[_builtins.str]] = None,
            resource_status: Optional[pulumi.Input[_builtins.str]] = None,
            speed_mbps: Optional[pulumi.Input[_builtins.float]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            vlan: Optional[pulumi.Input[_builtins.float]] = None) -> 'DlProviderGateway':
        """
        Get an existing DlProviderGateway resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.float] bgp_asn: BGP ASN
        :param pulumi.Input[_builtins.str] bgp_cer_cidr: BGP customer edge router CIDR
        :param pulumi.Input[_builtins.float] bgp_ibm_asn: IBM BGP ASN
        :param pulumi.Input[_builtins.str] bgp_ibm_cidr: BGP IBM CIDR
        :param pulumi.Input[_builtins.str] bgp_status: Gateway BGP status
        :param pulumi.Input[_builtins.str] created_at: The date and time resource was created
        :param pulumi.Input[_builtins.str] crn: The CRN (Cloud Resource Name) of this gateway
        :param pulumi.Input[_builtins.str] customer_account_id: Customer IBM Cloud account ID for the new gateway. A gateway object containing the pending create request will become
               available in the specified account.
        :param pulumi.Input[_builtins.str] name: The unique user-defined name for this gateway
        :param pulumi.Input[_builtins.str] operational_status: Gateway operational status
        :param pulumi.Input[_builtins.str] port: Gateway port
        :param pulumi.Input[_builtins.bool] provider_api_managed: Indicates whether gateway was created through a provider portal
        :param pulumi.Input[_builtins.str] resource_controller_url: The URL of the IBM Cloud dashboard that can be used to explore and view details about this instance
        :param pulumi.Input[_builtins.str] resource_crn: The crn of the resource
        :param pulumi.Input[_builtins.str] resource_group_name: The resource group name in which resource is provisioned
        :param pulumi.Input[_builtins.str] resource_name_: The name of the resource
        :param pulumi.Input[_builtins.str] resource_status: The status of the resource
        :param pulumi.Input[_builtins.float] speed_mbps: Gateway speed in megabits per second
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: Tags for the direct link gateway
        :param pulumi.Input[_builtins.str] type: Gateway type
        :param pulumi.Input[_builtins.float] vlan: VLAN allocated for this gateway
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _DlProviderGatewayState.__new__(_DlProviderGatewayState)

        __props__.__dict__["bgp_asn"] = bgp_asn
        __props__.__dict__["bgp_cer_cidr"] = bgp_cer_cidr
        __props__.__dict__["bgp_ibm_asn"] = bgp_ibm_asn
        __props__.__dict__["bgp_ibm_cidr"] = bgp_ibm_cidr
        __props__.__dict__["bgp_status"] = bgp_status
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["crn"] = crn
        __props__.__dict__["customer_account_id"] = customer_account_id
        __props__.__dict__["dl_provider_gateway_id"] = dl_provider_gateway_id
        __props__.__dict__["name"] = name
        __props__.__dict__["operational_status"] = operational_status
        __props__.__dict__["port"] = port
        __props__.__dict__["provider_api_managed"] = provider_api_managed
        __props__.__dict__["resource_controller_url"] = resource_controller_url
        __props__.__dict__["resource_crn"] = resource_crn
        __props__.__dict__["resource_group_name"] = resource_group_name
        __props__.__dict__["resource_name"] = resource_name_
        __props__.__dict__["resource_status"] = resource_status
        __props__.__dict__["speed_mbps"] = speed_mbps
        __props__.__dict__["tags"] = tags
        __props__.__dict__["type"] = type
        __props__.__dict__["vlan"] = vlan
        return DlProviderGateway(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="bgpAsn")
    def bgp_asn(self) -> pulumi.Output[_builtins.float]:
        """
        BGP ASN
        """
        return pulumi.get(self, "bgp_asn")

    @_builtins.property
    @pulumi.getter(name="bgpCerCidr")
    def bgp_cer_cidr(self) -> pulumi.Output[_builtins.str]:
        """
        BGP customer edge router CIDR
        """
        return pulumi.get(self, "bgp_cer_cidr")

    @_builtins.property
    @pulumi.getter(name="bgpIbmAsn")
    def bgp_ibm_asn(self) -> pulumi.Output[_builtins.float]:
        """
        IBM BGP ASN
        """
        return pulumi.get(self, "bgp_ibm_asn")

    @_builtins.property
    @pulumi.getter(name="bgpIbmCidr")
    def bgp_ibm_cidr(self) -> pulumi.Output[_builtins.str]:
        """
        BGP IBM CIDR
        """
        return pulumi.get(self, "bgp_ibm_cidr")

    @_builtins.property
    @pulumi.getter(name="bgpStatus")
    def bgp_status(self) -> pulumi.Output[_builtins.str]:
        """
        Gateway BGP status
        """
        return pulumi.get(self, "bgp_status")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The date and time resource was created
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Output[_builtins.str]:
        """
        The CRN (Cloud Resource Name) of this gateway
        """
        return pulumi.get(self, "crn")

    @_builtins.property
    @pulumi.getter(name="customerAccountId")
    def customer_account_id(self) -> pulumi.Output[_builtins.str]:
        """
        Customer IBM Cloud account ID for the new gateway. A gateway object containing the pending create request will become
        available in the specified account.
        """
        return pulumi.get(self, "customer_account_id")

    @_builtins.property
    @pulumi.getter(name="dlProviderGatewayId")
    def dl_provider_gateway_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "dl_provider_gateway_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The unique user-defined name for this gateway
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="operationalStatus")
    def operational_status(self) -> pulumi.Output[_builtins.str]:
        """
        Gateway operational status
        """
        return pulumi.get(self, "operational_status")

    @_builtins.property
    @pulumi.getter
    def port(self) -> pulumi.Output[_builtins.str]:
        """
        Gateway port
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter(name="providerApiManaged")
    def provider_api_managed(self) -> pulumi.Output[_builtins.bool]:
        """
        Indicates whether gateway was created through a provider portal
        """
        return pulumi.get(self, "provider_api_managed")

    @_builtins.property
    @pulumi.getter(name="resourceControllerUrl")
    def resource_controller_url(self) -> pulumi.Output[_builtins.str]:
        """
        The URL of the IBM Cloud dashboard that can be used to explore and view details about this instance
        """
        return pulumi.get(self, "resource_controller_url")

    @_builtins.property
    @pulumi.getter(name="resourceCrn")
    def resource_crn(self) -> pulumi.Output[_builtins.str]:
        """
        The crn of the resource
        """
        return pulumi.get(self, "resource_crn")

    @_builtins.property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> pulumi.Output[_builtins.str]:
        """
        The resource group name in which resource is provisioned
        """
        return pulumi.get(self, "resource_group_name")

    @_builtins.property
    @pulumi.getter(name="resourceName")
    def resource_name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "resource_name")

    @_builtins.property
    @pulumi.getter(name="resourceStatus")
    def resource_status(self) -> pulumi.Output[_builtins.str]:
        """
        The status of the resource
        """
        return pulumi.get(self, "resource_status")

    @_builtins.property
    @pulumi.getter(name="speedMbps")
    def speed_mbps(self) -> pulumi.Output[_builtins.float]:
        """
        Gateway speed in megabits per second
        """
        return pulumi.get(self, "speed_mbps")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        Tags for the direct link gateway
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        Gateway type
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter
    def vlan(self) -> pulumi.Output[_builtins.float]:
        """
        VLAN allocated for this gateway
        """
        return pulumi.get(self, "vlan")

