# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetBackupRecoveryProtectionSourcesResult',
    'AwaitableGetBackupRecoveryProtectionSourcesResult',
    'get_backup_recovery_protection_sources',
    'get_backup_recovery_protection_sources_output',
]

@pulumi.output_type
class GetBackupRecoveryProtectionSourcesResult:
    """
    A collection of values returned by getBackupRecoveryProtectionSources.
    """
    def __init__(__self__, after_cursor_entity_id=None, all_under_hierarchy=None, backup_recovery_protection_source_nodes_id=None, before_cursor_entity_id=None, encryption_key=None, environment=None, environments=None, exclude_aws_types=None, exclude_kubernetes_types=None, exclude_office365_types=None, exclude_types=None, get_teams_channels=None, has_valid_mailbox=None, has_valid_onedrive=None, id=None, include_datastores=None, include_entity_permission_info=None, include_networks=None, include_object_protection_info=None, include_sfdc_fields=None, include_source_credentials=None, include_system_v_apps=None, include_vm_folders=None, is_security_group=None, node_id=None, num_levels=None, page_size=None, protection_sources=None, prune_aggregation_info=None, prune_non_critical_info=None, request_initiator_type=None, sids=None, use_cached_data=None, x_ibm_tenant_id=None):
        if after_cursor_entity_id and not isinstance(after_cursor_entity_id, float):
            raise TypeError("Expected argument 'after_cursor_entity_id' to be a float")
        pulumi.set(__self__, "after_cursor_entity_id", after_cursor_entity_id)
        if all_under_hierarchy and not isinstance(all_under_hierarchy, bool):
            raise TypeError("Expected argument 'all_under_hierarchy' to be a bool")
        pulumi.set(__self__, "all_under_hierarchy", all_under_hierarchy)
        if backup_recovery_protection_source_nodes_id and not isinstance(backup_recovery_protection_source_nodes_id, float):
            raise TypeError("Expected argument 'backup_recovery_protection_source_nodes_id' to be a float")
        pulumi.set(__self__, "backup_recovery_protection_source_nodes_id", backup_recovery_protection_source_nodes_id)
        if before_cursor_entity_id and not isinstance(before_cursor_entity_id, float):
            raise TypeError("Expected argument 'before_cursor_entity_id' to be a float")
        pulumi.set(__self__, "before_cursor_entity_id", before_cursor_entity_id)
        if encryption_key and not isinstance(encryption_key, str):
            raise TypeError("Expected argument 'encryption_key' to be a str")
        pulumi.set(__self__, "encryption_key", encryption_key)
        if environment and not isinstance(environment, str):
            raise TypeError("Expected argument 'environment' to be a str")
        pulumi.set(__self__, "environment", environment)
        if environments and not isinstance(environments, list):
            raise TypeError("Expected argument 'environments' to be a list")
        pulumi.set(__self__, "environments", environments)
        if exclude_aws_types and not isinstance(exclude_aws_types, list):
            raise TypeError("Expected argument 'exclude_aws_types' to be a list")
        pulumi.set(__self__, "exclude_aws_types", exclude_aws_types)
        if exclude_kubernetes_types and not isinstance(exclude_kubernetes_types, list):
            raise TypeError("Expected argument 'exclude_kubernetes_types' to be a list")
        pulumi.set(__self__, "exclude_kubernetes_types", exclude_kubernetes_types)
        if exclude_office365_types and not isinstance(exclude_office365_types, list):
            raise TypeError("Expected argument 'exclude_office365_types' to be a list")
        pulumi.set(__self__, "exclude_office365_types", exclude_office365_types)
        if exclude_types and not isinstance(exclude_types, list):
            raise TypeError("Expected argument 'exclude_types' to be a list")
        pulumi.set(__self__, "exclude_types", exclude_types)
        if get_teams_channels and not isinstance(get_teams_channels, bool):
            raise TypeError("Expected argument 'get_teams_channels' to be a bool")
        pulumi.set(__self__, "get_teams_channels", get_teams_channels)
        if has_valid_mailbox and not isinstance(has_valid_mailbox, bool):
            raise TypeError("Expected argument 'has_valid_mailbox' to be a bool")
        pulumi.set(__self__, "has_valid_mailbox", has_valid_mailbox)
        if has_valid_onedrive and not isinstance(has_valid_onedrive, bool):
            raise TypeError("Expected argument 'has_valid_onedrive' to be a bool")
        pulumi.set(__self__, "has_valid_onedrive", has_valid_onedrive)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if include_datastores and not isinstance(include_datastores, bool):
            raise TypeError("Expected argument 'include_datastores' to be a bool")
        pulumi.set(__self__, "include_datastores", include_datastores)
        if include_entity_permission_info and not isinstance(include_entity_permission_info, bool):
            raise TypeError("Expected argument 'include_entity_permission_info' to be a bool")
        pulumi.set(__self__, "include_entity_permission_info", include_entity_permission_info)
        if include_networks and not isinstance(include_networks, bool):
            raise TypeError("Expected argument 'include_networks' to be a bool")
        pulumi.set(__self__, "include_networks", include_networks)
        if include_object_protection_info and not isinstance(include_object_protection_info, bool):
            raise TypeError("Expected argument 'include_object_protection_info' to be a bool")
        pulumi.set(__self__, "include_object_protection_info", include_object_protection_info)
        if include_sfdc_fields and not isinstance(include_sfdc_fields, bool):
            raise TypeError("Expected argument 'include_sfdc_fields' to be a bool")
        pulumi.set(__self__, "include_sfdc_fields", include_sfdc_fields)
        if include_source_credentials and not isinstance(include_source_credentials, bool):
            raise TypeError("Expected argument 'include_source_credentials' to be a bool")
        pulumi.set(__self__, "include_source_credentials", include_source_credentials)
        if include_system_v_apps and not isinstance(include_system_v_apps, bool):
            raise TypeError("Expected argument 'include_system_v_apps' to be a bool")
        pulumi.set(__self__, "include_system_v_apps", include_system_v_apps)
        if include_vm_folders and not isinstance(include_vm_folders, bool):
            raise TypeError("Expected argument 'include_vm_folders' to be a bool")
        pulumi.set(__self__, "include_vm_folders", include_vm_folders)
        if is_security_group and not isinstance(is_security_group, bool):
            raise TypeError("Expected argument 'is_security_group' to be a bool")
        pulumi.set(__self__, "is_security_group", is_security_group)
        if node_id and not isinstance(node_id, float):
            raise TypeError("Expected argument 'node_id' to be a float")
        pulumi.set(__self__, "node_id", node_id)
        if num_levels and not isinstance(num_levels, float):
            raise TypeError("Expected argument 'num_levels' to be a float")
        pulumi.set(__self__, "num_levels", num_levels)
        if page_size and not isinstance(page_size, float):
            raise TypeError("Expected argument 'page_size' to be a float")
        pulumi.set(__self__, "page_size", page_size)
        if protection_sources and not isinstance(protection_sources, list):
            raise TypeError("Expected argument 'protection_sources' to be a list")
        pulumi.set(__self__, "protection_sources", protection_sources)
        if prune_aggregation_info and not isinstance(prune_aggregation_info, bool):
            raise TypeError("Expected argument 'prune_aggregation_info' to be a bool")
        pulumi.set(__self__, "prune_aggregation_info", prune_aggregation_info)
        if prune_non_critical_info and not isinstance(prune_non_critical_info, bool):
            raise TypeError("Expected argument 'prune_non_critical_info' to be a bool")
        pulumi.set(__self__, "prune_non_critical_info", prune_non_critical_info)
        if request_initiator_type and not isinstance(request_initiator_type, str):
            raise TypeError("Expected argument 'request_initiator_type' to be a str")
        pulumi.set(__self__, "request_initiator_type", request_initiator_type)
        if sids and not isinstance(sids, list):
            raise TypeError("Expected argument 'sids' to be a list")
        pulumi.set(__self__, "sids", sids)
        if use_cached_data and not isinstance(use_cached_data, bool):
            raise TypeError("Expected argument 'use_cached_data' to be a bool")
        pulumi.set(__self__, "use_cached_data", use_cached_data)
        if x_ibm_tenant_id and not isinstance(x_ibm_tenant_id, str):
            raise TypeError("Expected argument 'x_ibm_tenant_id' to be a str")
        pulumi.set(__self__, "x_ibm_tenant_id", x_ibm_tenant_id)

    @_builtins.property
    @pulumi.getter(name="afterCursorEntityId")
    def after_cursor_entity_id(self) -> Optional[_builtins.float]:
        return pulumi.get(self, "after_cursor_entity_id")

    @_builtins.property
    @pulumi.getter(name="allUnderHierarchy")
    def all_under_hierarchy(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "all_under_hierarchy")

    @_builtins.property
    @pulumi.getter(name="backupRecoveryProtectionSourceNodesId")
    def backup_recovery_protection_source_nodes_id(self) -> Optional[_builtins.float]:
        return pulumi.get(self, "backup_recovery_protection_source_nodes_id")

    @_builtins.property
    @pulumi.getter(name="beforeCursorEntityId")
    def before_cursor_entity_id(self) -> Optional[_builtins.float]:
        return pulumi.get(self, "before_cursor_entity_id")

    @_builtins.property
    @pulumi.getter(name="encryptionKey")
    def encryption_key(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "encryption_key")

    @_builtins.property
    @pulumi.getter
    def environment(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "environment")

    @_builtins.property
    @pulumi.getter
    def environments(self) -> Optional[Sequence[_builtins.str]]:
        return pulumi.get(self, "environments")

    @_builtins.property
    @pulumi.getter(name="excludeAwsTypes")
    def exclude_aws_types(self) -> Optional[Sequence[_builtins.str]]:
        return pulumi.get(self, "exclude_aws_types")

    @_builtins.property
    @pulumi.getter(name="excludeKubernetesTypes")
    def exclude_kubernetes_types(self) -> Optional[Sequence[_builtins.str]]:
        return pulumi.get(self, "exclude_kubernetes_types")

    @_builtins.property
    @pulumi.getter(name="excludeOffice365Types")
    def exclude_office365_types(self) -> Optional[Sequence[_builtins.str]]:
        return pulumi.get(self, "exclude_office365_types")

    @_builtins.property
    @pulumi.getter(name="excludeTypes")
    def exclude_types(self) -> Optional[Sequence[_builtins.str]]:
        return pulumi.get(self, "exclude_types")

    @_builtins.property
    @pulumi.getter(name="getTeamsChannels")
    def get_teams_channels(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "get_teams_channels")

    @_builtins.property
    @pulumi.getter(name="hasValidMailbox")
    def has_valid_mailbox(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "has_valid_mailbox")

    @_builtins.property
    @pulumi.getter(name="hasValidOnedrive")
    def has_valid_onedrive(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "has_valid_onedrive")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="includeDatastores")
    def include_datastores(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "include_datastores")

    @_builtins.property
    @pulumi.getter(name="includeEntityPermissionInfo")
    def include_entity_permission_info(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "include_entity_permission_info")

    @_builtins.property
    @pulumi.getter(name="includeNetworks")
    def include_networks(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "include_networks")

    @_builtins.property
    @pulumi.getter(name="includeObjectProtectionInfo")
    def include_object_protection_info(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "include_object_protection_info")

    @_builtins.property
    @pulumi.getter(name="includeSfdcFields")
    def include_sfdc_fields(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "include_sfdc_fields")

    @_builtins.property
    @pulumi.getter(name="includeSourceCredentials")
    def include_source_credentials(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "include_source_credentials")

    @_builtins.property
    @pulumi.getter(name="includeSystemVApps")
    def include_system_v_apps(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "include_system_v_apps")

    @_builtins.property
    @pulumi.getter(name="includeVmFolders")
    def include_vm_folders(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "include_vm_folders")

    @_builtins.property
    @pulumi.getter(name="isSecurityGroup")
    def is_security_group(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "is_security_group")

    @_builtins.property
    @pulumi.getter(name="nodeId")
    def node_id(self) -> Optional[_builtins.float]:
        return pulumi.get(self, "node_id")

    @_builtins.property
    @pulumi.getter(name="numLevels")
    def num_levels(self) -> Optional[_builtins.float]:
        return pulumi.get(self, "num_levels")

    @_builtins.property
    @pulumi.getter(name="pageSize")
    def page_size(self) -> Optional[_builtins.float]:
        return pulumi.get(self, "page_size")

    @_builtins.property
    @pulumi.getter(name="protectionSources")
    def protection_sources(self) -> Sequence['outputs.GetBackupRecoveryProtectionSourcesProtectionSourceResult']:
        return pulumi.get(self, "protection_sources")

    @_builtins.property
    @pulumi.getter(name="pruneAggregationInfo")
    def prune_aggregation_info(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "prune_aggregation_info")

    @_builtins.property
    @pulumi.getter(name="pruneNonCriticalInfo")
    def prune_non_critical_info(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "prune_non_critical_info")

    @_builtins.property
    @pulumi.getter(name="requestInitiatorType")
    def request_initiator_type(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "request_initiator_type")

    @_builtins.property
    @pulumi.getter
    def sids(self) -> Optional[Sequence[_builtins.str]]:
        return pulumi.get(self, "sids")

    @_builtins.property
    @pulumi.getter(name="useCachedData")
    def use_cached_data(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "use_cached_data")

    @_builtins.property
    @pulumi.getter(name="xIbmTenantId")
    def x_ibm_tenant_id(self) -> _builtins.str:
        return pulumi.get(self, "x_ibm_tenant_id")


class AwaitableGetBackupRecoveryProtectionSourcesResult(GetBackupRecoveryProtectionSourcesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBackupRecoveryProtectionSourcesResult(
            after_cursor_entity_id=self.after_cursor_entity_id,
            all_under_hierarchy=self.all_under_hierarchy,
            backup_recovery_protection_source_nodes_id=self.backup_recovery_protection_source_nodes_id,
            before_cursor_entity_id=self.before_cursor_entity_id,
            encryption_key=self.encryption_key,
            environment=self.environment,
            environments=self.environments,
            exclude_aws_types=self.exclude_aws_types,
            exclude_kubernetes_types=self.exclude_kubernetes_types,
            exclude_office365_types=self.exclude_office365_types,
            exclude_types=self.exclude_types,
            get_teams_channels=self.get_teams_channels,
            has_valid_mailbox=self.has_valid_mailbox,
            has_valid_onedrive=self.has_valid_onedrive,
            id=self.id,
            include_datastores=self.include_datastores,
            include_entity_permission_info=self.include_entity_permission_info,
            include_networks=self.include_networks,
            include_object_protection_info=self.include_object_protection_info,
            include_sfdc_fields=self.include_sfdc_fields,
            include_source_credentials=self.include_source_credentials,
            include_system_v_apps=self.include_system_v_apps,
            include_vm_folders=self.include_vm_folders,
            is_security_group=self.is_security_group,
            node_id=self.node_id,
            num_levels=self.num_levels,
            page_size=self.page_size,
            protection_sources=self.protection_sources,
            prune_aggregation_info=self.prune_aggregation_info,
            prune_non_critical_info=self.prune_non_critical_info,
            request_initiator_type=self.request_initiator_type,
            sids=self.sids,
            use_cached_data=self.use_cached_data,
            x_ibm_tenant_id=self.x_ibm_tenant_id)


def get_backup_recovery_protection_sources(after_cursor_entity_id: Optional[_builtins.float] = None,
                                           all_under_hierarchy: Optional[_builtins.bool] = None,
                                           backup_recovery_protection_source_nodes_id: Optional[_builtins.float] = None,
                                           before_cursor_entity_id: Optional[_builtins.float] = None,
                                           encryption_key: Optional[_builtins.str] = None,
                                           environment: Optional[_builtins.str] = None,
                                           environments: Optional[Sequence[_builtins.str]] = None,
                                           exclude_aws_types: Optional[Sequence[_builtins.str]] = None,
                                           exclude_kubernetes_types: Optional[Sequence[_builtins.str]] = None,
                                           exclude_office365_types: Optional[Sequence[_builtins.str]] = None,
                                           exclude_types: Optional[Sequence[_builtins.str]] = None,
                                           get_teams_channels: Optional[_builtins.bool] = None,
                                           has_valid_mailbox: Optional[_builtins.bool] = None,
                                           has_valid_onedrive: Optional[_builtins.bool] = None,
                                           id: Optional[_builtins.str] = None,
                                           include_datastores: Optional[_builtins.bool] = None,
                                           include_entity_permission_info: Optional[_builtins.bool] = None,
                                           include_networks: Optional[_builtins.bool] = None,
                                           include_object_protection_info: Optional[_builtins.bool] = None,
                                           include_sfdc_fields: Optional[_builtins.bool] = None,
                                           include_source_credentials: Optional[_builtins.bool] = None,
                                           include_system_v_apps: Optional[_builtins.bool] = None,
                                           include_vm_folders: Optional[_builtins.bool] = None,
                                           is_security_group: Optional[_builtins.bool] = None,
                                           node_id: Optional[_builtins.float] = None,
                                           num_levels: Optional[_builtins.float] = None,
                                           page_size: Optional[_builtins.float] = None,
                                           prune_aggregation_info: Optional[_builtins.bool] = None,
                                           prune_non_critical_info: Optional[_builtins.bool] = None,
                                           request_initiator_type: Optional[_builtins.str] = None,
                                           sids: Optional[Sequence[_builtins.str]] = None,
                                           use_cached_data: Optional[_builtins.bool] = None,
                                           x_ibm_tenant_id: Optional[_builtins.str] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBackupRecoveryProtectionSourcesResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['afterCursorEntityId'] = after_cursor_entity_id
    __args__['allUnderHierarchy'] = all_under_hierarchy
    __args__['backupRecoveryProtectionSourceNodesId'] = backup_recovery_protection_source_nodes_id
    __args__['beforeCursorEntityId'] = before_cursor_entity_id
    __args__['encryptionKey'] = encryption_key
    __args__['environment'] = environment
    __args__['environments'] = environments
    __args__['excludeAwsTypes'] = exclude_aws_types
    __args__['excludeKubernetesTypes'] = exclude_kubernetes_types
    __args__['excludeOffice365Types'] = exclude_office365_types
    __args__['excludeTypes'] = exclude_types
    __args__['getTeamsChannels'] = get_teams_channels
    __args__['hasValidMailbox'] = has_valid_mailbox
    __args__['hasValidOnedrive'] = has_valid_onedrive
    __args__['id'] = id
    __args__['includeDatastores'] = include_datastores
    __args__['includeEntityPermissionInfo'] = include_entity_permission_info
    __args__['includeNetworks'] = include_networks
    __args__['includeObjectProtectionInfo'] = include_object_protection_info
    __args__['includeSfdcFields'] = include_sfdc_fields
    __args__['includeSourceCredentials'] = include_source_credentials
    __args__['includeSystemVApps'] = include_system_v_apps
    __args__['includeVmFolders'] = include_vm_folders
    __args__['isSecurityGroup'] = is_security_group
    __args__['nodeId'] = node_id
    __args__['numLevels'] = num_levels
    __args__['pageSize'] = page_size
    __args__['pruneAggregationInfo'] = prune_aggregation_info
    __args__['pruneNonCriticalInfo'] = prune_non_critical_info
    __args__['requestInitiatorType'] = request_initiator_type
    __args__['sids'] = sids
    __args__['useCachedData'] = use_cached_data
    __args__['xIbmTenantId'] = x_ibm_tenant_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getBackupRecoveryProtectionSources:getBackupRecoveryProtectionSources', __args__, opts=opts, typ=GetBackupRecoveryProtectionSourcesResult, package_ref=_utilities.get_package()).value

    return AwaitableGetBackupRecoveryProtectionSourcesResult(
        after_cursor_entity_id=pulumi.get(__ret__, 'after_cursor_entity_id'),
        all_under_hierarchy=pulumi.get(__ret__, 'all_under_hierarchy'),
        backup_recovery_protection_source_nodes_id=pulumi.get(__ret__, 'backup_recovery_protection_source_nodes_id'),
        before_cursor_entity_id=pulumi.get(__ret__, 'before_cursor_entity_id'),
        encryption_key=pulumi.get(__ret__, 'encryption_key'),
        environment=pulumi.get(__ret__, 'environment'),
        environments=pulumi.get(__ret__, 'environments'),
        exclude_aws_types=pulumi.get(__ret__, 'exclude_aws_types'),
        exclude_kubernetes_types=pulumi.get(__ret__, 'exclude_kubernetes_types'),
        exclude_office365_types=pulumi.get(__ret__, 'exclude_office365_types'),
        exclude_types=pulumi.get(__ret__, 'exclude_types'),
        get_teams_channels=pulumi.get(__ret__, 'get_teams_channels'),
        has_valid_mailbox=pulumi.get(__ret__, 'has_valid_mailbox'),
        has_valid_onedrive=pulumi.get(__ret__, 'has_valid_onedrive'),
        id=pulumi.get(__ret__, 'id'),
        include_datastores=pulumi.get(__ret__, 'include_datastores'),
        include_entity_permission_info=pulumi.get(__ret__, 'include_entity_permission_info'),
        include_networks=pulumi.get(__ret__, 'include_networks'),
        include_object_protection_info=pulumi.get(__ret__, 'include_object_protection_info'),
        include_sfdc_fields=pulumi.get(__ret__, 'include_sfdc_fields'),
        include_source_credentials=pulumi.get(__ret__, 'include_source_credentials'),
        include_system_v_apps=pulumi.get(__ret__, 'include_system_v_apps'),
        include_vm_folders=pulumi.get(__ret__, 'include_vm_folders'),
        is_security_group=pulumi.get(__ret__, 'is_security_group'),
        node_id=pulumi.get(__ret__, 'node_id'),
        num_levels=pulumi.get(__ret__, 'num_levels'),
        page_size=pulumi.get(__ret__, 'page_size'),
        protection_sources=pulumi.get(__ret__, 'protection_sources'),
        prune_aggregation_info=pulumi.get(__ret__, 'prune_aggregation_info'),
        prune_non_critical_info=pulumi.get(__ret__, 'prune_non_critical_info'),
        request_initiator_type=pulumi.get(__ret__, 'request_initiator_type'),
        sids=pulumi.get(__ret__, 'sids'),
        use_cached_data=pulumi.get(__ret__, 'use_cached_data'),
        x_ibm_tenant_id=pulumi.get(__ret__, 'x_ibm_tenant_id'))
def get_backup_recovery_protection_sources_output(after_cursor_entity_id: Optional[pulumi.Input[Optional[_builtins.float]]] = None,
                                                  all_under_hierarchy: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  backup_recovery_protection_source_nodes_id: Optional[pulumi.Input[Optional[_builtins.float]]] = None,
                                                  before_cursor_entity_id: Optional[pulumi.Input[Optional[_builtins.float]]] = None,
                                                  encryption_key: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                  environment: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                  environments: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                                                  exclude_aws_types: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                                                  exclude_kubernetes_types: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                                                  exclude_office365_types: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                                                  exclude_types: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                                                  get_teams_channels: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  has_valid_mailbox: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  has_valid_onedrive: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                  include_datastores: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  include_entity_permission_info: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  include_networks: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  include_object_protection_info: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  include_sfdc_fields: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  include_source_credentials: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  include_system_v_apps: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  include_vm_folders: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  is_security_group: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  node_id: Optional[pulumi.Input[Optional[_builtins.float]]] = None,
                                                  num_levels: Optional[pulumi.Input[Optional[_builtins.float]]] = None,
                                                  page_size: Optional[pulumi.Input[Optional[_builtins.float]]] = None,
                                                  prune_aggregation_info: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  prune_non_critical_info: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  request_initiator_type: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                  sids: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                                                  use_cached_data: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                                  x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetBackupRecoveryProtectionSourcesResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['afterCursorEntityId'] = after_cursor_entity_id
    __args__['allUnderHierarchy'] = all_under_hierarchy
    __args__['backupRecoveryProtectionSourceNodesId'] = backup_recovery_protection_source_nodes_id
    __args__['beforeCursorEntityId'] = before_cursor_entity_id
    __args__['encryptionKey'] = encryption_key
    __args__['environment'] = environment
    __args__['environments'] = environments
    __args__['excludeAwsTypes'] = exclude_aws_types
    __args__['excludeKubernetesTypes'] = exclude_kubernetes_types
    __args__['excludeOffice365Types'] = exclude_office365_types
    __args__['excludeTypes'] = exclude_types
    __args__['getTeamsChannels'] = get_teams_channels
    __args__['hasValidMailbox'] = has_valid_mailbox
    __args__['hasValidOnedrive'] = has_valid_onedrive
    __args__['id'] = id
    __args__['includeDatastores'] = include_datastores
    __args__['includeEntityPermissionInfo'] = include_entity_permission_info
    __args__['includeNetworks'] = include_networks
    __args__['includeObjectProtectionInfo'] = include_object_protection_info
    __args__['includeSfdcFields'] = include_sfdc_fields
    __args__['includeSourceCredentials'] = include_source_credentials
    __args__['includeSystemVApps'] = include_system_v_apps
    __args__['includeVmFolders'] = include_vm_folders
    __args__['isSecurityGroup'] = is_security_group
    __args__['nodeId'] = node_id
    __args__['numLevels'] = num_levels
    __args__['pageSize'] = page_size
    __args__['pruneAggregationInfo'] = prune_aggregation_info
    __args__['pruneNonCriticalInfo'] = prune_non_critical_info
    __args__['requestInitiatorType'] = request_initiator_type
    __args__['sids'] = sids
    __args__['useCachedData'] = use_cached_data
    __args__['xIbmTenantId'] = x_ibm_tenant_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getBackupRecoveryProtectionSources:getBackupRecoveryProtectionSources', __args__, opts=opts, typ=GetBackupRecoveryProtectionSourcesResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetBackupRecoveryProtectionSourcesResult(
        after_cursor_entity_id=pulumi.get(__response__, 'after_cursor_entity_id'),
        all_under_hierarchy=pulumi.get(__response__, 'all_under_hierarchy'),
        backup_recovery_protection_source_nodes_id=pulumi.get(__response__, 'backup_recovery_protection_source_nodes_id'),
        before_cursor_entity_id=pulumi.get(__response__, 'before_cursor_entity_id'),
        encryption_key=pulumi.get(__response__, 'encryption_key'),
        environment=pulumi.get(__response__, 'environment'),
        environments=pulumi.get(__response__, 'environments'),
        exclude_aws_types=pulumi.get(__response__, 'exclude_aws_types'),
        exclude_kubernetes_types=pulumi.get(__response__, 'exclude_kubernetes_types'),
        exclude_office365_types=pulumi.get(__response__, 'exclude_office365_types'),
        exclude_types=pulumi.get(__response__, 'exclude_types'),
        get_teams_channels=pulumi.get(__response__, 'get_teams_channels'),
        has_valid_mailbox=pulumi.get(__response__, 'has_valid_mailbox'),
        has_valid_onedrive=pulumi.get(__response__, 'has_valid_onedrive'),
        id=pulumi.get(__response__, 'id'),
        include_datastores=pulumi.get(__response__, 'include_datastores'),
        include_entity_permission_info=pulumi.get(__response__, 'include_entity_permission_info'),
        include_networks=pulumi.get(__response__, 'include_networks'),
        include_object_protection_info=pulumi.get(__response__, 'include_object_protection_info'),
        include_sfdc_fields=pulumi.get(__response__, 'include_sfdc_fields'),
        include_source_credentials=pulumi.get(__response__, 'include_source_credentials'),
        include_system_v_apps=pulumi.get(__response__, 'include_system_v_apps'),
        include_vm_folders=pulumi.get(__response__, 'include_vm_folders'),
        is_security_group=pulumi.get(__response__, 'is_security_group'),
        node_id=pulumi.get(__response__, 'node_id'),
        num_levels=pulumi.get(__response__, 'num_levels'),
        page_size=pulumi.get(__response__, 'page_size'),
        protection_sources=pulumi.get(__response__, 'protection_sources'),
        prune_aggregation_info=pulumi.get(__response__, 'prune_aggregation_info'),
        prune_non_critical_info=pulumi.get(__response__, 'prune_non_critical_info'),
        request_initiator_type=pulumi.get(__response__, 'request_initiator_type'),
        sids=pulumi.get(__response__, 'sids'),
        use_cached_data=pulumi.get(__response__, 'use_cached_data'),
        x_ibm_tenant_id=pulumi.get(__response__, 'x_ibm_tenant_id')))
