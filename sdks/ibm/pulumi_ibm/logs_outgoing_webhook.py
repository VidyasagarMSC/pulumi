# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['LogsOutgoingWebhookArgs', 'LogsOutgoingWebhook']

@pulumi.input_type
class LogsOutgoingWebhookArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[_builtins.str],
                 type: pulumi.Input[_builtins.str],
                 endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
                 ibm_event_notifications: Optional[pulumi.Input['LogsOutgoingWebhookIbmEventNotificationsArgs']] = None,
                 logs_outgoing_webhook_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 url: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a LogsOutgoingWebhook resource.
        :param pulumi.Input[_builtins.str] instance_id: The ID of the logs instance.
        :param pulumi.Input[_builtins.str] type: The type of the deployed Outbound Integrations to list.
        :param pulumi.Input[_builtins.str] endpoint_type: public or private.
        :param pulumi.Input['LogsOutgoingWebhookIbmEventNotificationsArgs'] ibm_event_notifications: The configuration of the IBM Event Notifications Outbound Integration.
        :param pulumi.Input[_builtins.str] name: The name of the Outbound Integration.
        :param pulumi.Input[_builtins.str] region: The region of the logs instance.
        :param pulumi.Input[_builtins.str] url: The URL of the Outbound Integration. Null for IBM Event Notifications integration.
        """
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "type", type)
        if endpoint_type is not None:
            pulumi.set(__self__, "endpoint_type", endpoint_type)
        if ibm_event_notifications is not None:
            pulumi.set(__self__, "ibm_event_notifications", ibm_event_notifications)
        if logs_outgoing_webhook_id is not None:
            pulumi.set(__self__, "logs_outgoing_webhook_id", logs_outgoing_webhook_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        The ID of the logs instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Input[_builtins.str]:
        """
        The type of the deployed Outbound Integrations to list.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="endpointType")
    def endpoint_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        public or private.
        """
        return pulumi.get(self, "endpoint_type")

    @endpoint_type.setter
    def endpoint_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "endpoint_type", value)

    @_builtins.property
    @pulumi.getter(name="ibmEventNotifications")
    def ibm_event_notifications(self) -> Optional[pulumi.Input['LogsOutgoingWebhookIbmEventNotificationsArgs']]:
        """
        The configuration of the IBM Event Notifications Outbound Integration.
        """
        return pulumi.get(self, "ibm_event_notifications")

    @ibm_event_notifications.setter
    def ibm_event_notifications(self, value: Optional[pulumi.Input['LogsOutgoingWebhookIbmEventNotificationsArgs']]):
        pulumi.set(self, "ibm_event_notifications", value)

    @_builtins.property
    @pulumi.getter(name="logsOutgoingWebhookId")
    def logs_outgoing_webhook_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "logs_outgoing_webhook_id")

    @logs_outgoing_webhook_id.setter
    def logs_outgoing_webhook_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "logs_outgoing_webhook_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the Outbound Integration.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The region of the logs instance.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL of the Outbound Integration. Null for IBM Event Notifications integration.
        """
        return pulumi.get(self, "url")

    @url.setter
    def url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "url", value)


@pulumi.input_type
class _LogsOutgoingWebhookState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
                 external_id: Optional[pulumi.Input[_builtins.float]] = None,
                 ibm_event_notifications: Optional[pulumi.Input['LogsOutgoingWebhookIbmEventNotificationsArgs']] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 logs_outgoing_webhook_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 url: Optional[pulumi.Input[_builtins.str]] = None,
                 webhook_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering LogsOutgoingWebhook resources.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the Outbound Integration.
        :param pulumi.Input[_builtins.str] endpoint_type: public or private.
        :param pulumi.Input[_builtins.float] external_id: The external ID of the Outbound Integration, for connecting with other parts of the system.
        :param pulumi.Input['LogsOutgoingWebhookIbmEventNotificationsArgs'] ibm_event_notifications: The configuration of the IBM Event Notifications Outbound Integration.
        :param pulumi.Input[_builtins.str] instance_id: The ID of the logs instance.
        :param pulumi.Input[_builtins.str] name: The name of the Outbound Integration.
        :param pulumi.Input[_builtins.str] region: The region of the logs instance.
        :param pulumi.Input[_builtins.str] type: The type of the deployed Outbound Integrations to list.
        :param pulumi.Input[_builtins.str] updated_at: The update time of the Outbound Integration.
        :param pulumi.Input[_builtins.str] url: The URL of the Outbound Integration. Null for IBM Event Notifications integration.
        :param pulumi.Input[_builtins.str] webhook_id: Outgoing Webhook Id.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if endpoint_type is not None:
            pulumi.set(__self__, "endpoint_type", endpoint_type)
        if external_id is not None:
            pulumi.set(__self__, "external_id", external_id)
        if ibm_event_notifications is not None:
            pulumi.set(__self__, "ibm_event_notifications", ibm_event_notifications)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if logs_outgoing_webhook_id is not None:
            pulumi.set(__self__, "logs_outgoing_webhook_id", logs_outgoing_webhook_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if url is not None:
            pulumi.set(__self__, "url", url)
        if webhook_id is not None:
            pulumi.set(__self__, "webhook_id", webhook_id)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creation time of the Outbound Integration.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="endpointType")
    def endpoint_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        public or private.
        """
        return pulumi.get(self, "endpoint_type")

    @endpoint_type.setter
    def endpoint_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "endpoint_type", value)

    @_builtins.property
    @pulumi.getter(name="externalId")
    def external_id(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        The external ID of the Outbound Integration, for connecting with other parts of the system.
        """
        return pulumi.get(self, "external_id")

    @external_id.setter
    def external_id(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "external_id", value)

    @_builtins.property
    @pulumi.getter(name="ibmEventNotifications")
    def ibm_event_notifications(self) -> Optional[pulumi.Input['LogsOutgoingWebhookIbmEventNotificationsArgs']]:
        """
        The configuration of the IBM Event Notifications Outbound Integration.
        """
        return pulumi.get(self, "ibm_event_notifications")

    @ibm_event_notifications.setter
    def ibm_event_notifications(self, value: Optional[pulumi.Input['LogsOutgoingWebhookIbmEventNotificationsArgs']]):
        pulumi.set(self, "ibm_event_notifications", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the logs instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="logsOutgoingWebhookId")
    def logs_outgoing_webhook_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "logs_outgoing_webhook_id")

    @logs_outgoing_webhook_id.setter
    def logs_outgoing_webhook_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "logs_outgoing_webhook_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the Outbound Integration.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The region of the logs instance.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The type of the deployed Outbound Integrations to list.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The update time of the Outbound Integration.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter
    def url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL of the Outbound Integration. Null for IBM Event Notifications integration.
        """
        return pulumi.get(self, "url")

    @url.setter
    def url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "url", value)

    @_builtins.property
    @pulumi.getter(name="webhookId")
    def webhook_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Outgoing Webhook Id.
        """
        return pulumi.get(self, "webhook_id")

    @webhook_id.setter
    def webhook_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "webhook_id", value)


@pulumi.type_token("ibm:index/logsOutgoingWebhook:LogsOutgoingWebhook")
class LogsOutgoingWebhook(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
                 ibm_event_notifications: Optional[pulumi.Input[Union['LogsOutgoingWebhookIbmEventNotificationsArgs', 'LogsOutgoingWebhookIbmEventNotificationsArgsDict']]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 logs_outgoing_webhook_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 url: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a LogsOutgoingWebhook resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] endpoint_type: public or private.
        :param pulumi.Input[Union['LogsOutgoingWebhookIbmEventNotificationsArgs', 'LogsOutgoingWebhookIbmEventNotificationsArgsDict']] ibm_event_notifications: The configuration of the IBM Event Notifications Outbound Integration.
        :param pulumi.Input[_builtins.str] instance_id: The ID of the logs instance.
        :param pulumi.Input[_builtins.str] name: The name of the Outbound Integration.
        :param pulumi.Input[_builtins.str] region: The region of the logs instance.
        :param pulumi.Input[_builtins.str] type: The type of the deployed Outbound Integrations to list.
        :param pulumi.Input[_builtins.str] url: The URL of the Outbound Integration. Null for IBM Event Notifications integration.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: LogsOutgoingWebhookArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a LogsOutgoingWebhook resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param LogsOutgoingWebhookArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(LogsOutgoingWebhookArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
                 ibm_event_notifications: Optional[pulumi.Input[Union['LogsOutgoingWebhookIbmEventNotificationsArgs', 'LogsOutgoingWebhookIbmEventNotificationsArgsDict']]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 logs_outgoing_webhook_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 url: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = LogsOutgoingWebhookArgs.__new__(LogsOutgoingWebhookArgs)

            __props__.__dict__["endpoint_type"] = endpoint_type
            __props__.__dict__["ibm_event_notifications"] = ibm_event_notifications
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["logs_outgoing_webhook_id"] = logs_outgoing_webhook_id
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            __props__.__dict__["url"] = url
            __props__.__dict__["created_at"] = None
            __props__.__dict__["external_id"] = None
            __props__.__dict__["updated_at"] = None
            __props__.__dict__["webhook_id"] = None
        super(LogsOutgoingWebhook, __self__).__init__(
            'ibm:index/logsOutgoingWebhook:LogsOutgoingWebhook',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            endpoint_type: Optional[pulumi.Input[_builtins.str]] = None,
            external_id: Optional[pulumi.Input[_builtins.float]] = None,
            ibm_event_notifications: Optional[pulumi.Input[Union['LogsOutgoingWebhookIbmEventNotificationsArgs', 'LogsOutgoingWebhookIbmEventNotificationsArgsDict']]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            logs_outgoing_webhook_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            url: Optional[pulumi.Input[_builtins.str]] = None,
            webhook_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'LogsOutgoingWebhook':
        """
        Get an existing LogsOutgoingWebhook resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the Outbound Integration.
        :param pulumi.Input[_builtins.str] endpoint_type: public or private.
        :param pulumi.Input[_builtins.float] external_id: The external ID of the Outbound Integration, for connecting with other parts of the system.
        :param pulumi.Input[Union['LogsOutgoingWebhookIbmEventNotificationsArgs', 'LogsOutgoingWebhookIbmEventNotificationsArgsDict']] ibm_event_notifications: The configuration of the IBM Event Notifications Outbound Integration.
        :param pulumi.Input[_builtins.str] instance_id: The ID of the logs instance.
        :param pulumi.Input[_builtins.str] name: The name of the Outbound Integration.
        :param pulumi.Input[_builtins.str] region: The region of the logs instance.
        :param pulumi.Input[_builtins.str] type: The type of the deployed Outbound Integrations to list.
        :param pulumi.Input[_builtins.str] updated_at: The update time of the Outbound Integration.
        :param pulumi.Input[_builtins.str] url: The URL of the Outbound Integration. Null for IBM Event Notifications integration.
        :param pulumi.Input[_builtins.str] webhook_id: Outgoing Webhook Id.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _LogsOutgoingWebhookState.__new__(_LogsOutgoingWebhookState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["endpoint_type"] = endpoint_type
        __props__.__dict__["external_id"] = external_id
        __props__.__dict__["ibm_event_notifications"] = ibm_event_notifications
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["logs_outgoing_webhook_id"] = logs_outgoing_webhook_id
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["type"] = type
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["url"] = url
        __props__.__dict__["webhook_id"] = webhook_id
        return LogsOutgoingWebhook(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The creation time of the Outbound Integration.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="endpointType")
    def endpoint_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        public or private.
        """
        return pulumi.get(self, "endpoint_type")

    @_builtins.property
    @pulumi.getter(name="externalId")
    def external_id(self) -> pulumi.Output[_builtins.float]:
        """
        The external ID of the Outbound Integration, for connecting with other parts of the system.
        """
        return pulumi.get(self, "external_id")

    @_builtins.property
    @pulumi.getter(name="ibmEventNotifications")
    def ibm_event_notifications(self) -> pulumi.Output[Optional['outputs.LogsOutgoingWebhookIbmEventNotifications']]:
        """
        The configuration of the IBM Event Notifications Outbound Integration.
        """
        return pulumi.get(self, "ibm_event_notifications")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the logs instance.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter(name="logsOutgoingWebhookId")
    def logs_outgoing_webhook_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "logs_outgoing_webhook_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the Outbound Integration.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        The region of the logs instance.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        The type of the deployed Outbound Integrations to list.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The update time of the Outbound Integration.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter
    def url(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The URL of the Outbound Integration. Null for IBM Event Notifications integration.
        """
        return pulumi.get(self, "url")

    @_builtins.property
    @pulumi.getter(name="webhookId")
    def webhook_id(self) -> pulumi.Output[_builtins.str]:
        """
        Outgoing Webhook Id.
        """
        return pulumi.get(self, "webhook_id")

