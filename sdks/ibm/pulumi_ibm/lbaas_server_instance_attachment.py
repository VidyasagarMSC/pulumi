# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['LbaasServerInstanceAttachmentArgs', 'LbaasServerInstanceAttachment']

@pulumi.input_type
class LbaasServerInstanceAttachmentArgs:
    def __init__(__self__, *,
                 lbaas_id: pulumi.Input[_builtins.str],
                 private_ip_address: pulumi.Input[_builtins.str],
                 lbaas_server_instance_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 weight: Optional[pulumi.Input[_builtins.float]] = None):
        """
        The set of arguments for constructing a LbaasServerInstanceAttachment resource.
        :param pulumi.Input[_builtins.str] lbaas_id: The UUID of a load balancer
        :param pulumi.Input[_builtins.str] private_ip_address: The Private IP address of a load balancer member.
        :param pulumi.Input[_builtins.float] weight: The weight of a load balancer member.
        """
        pulumi.set(__self__, "lbaas_id", lbaas_id)
        pulumi.set(__self__, "private_ip_address", private_ip_address)
        if lbaas_server_instance_attachment_id is not None:
            pulumi.set(__self__, "lbaas_server_instance_attachment_id", lbaas_server_instance_attachment_id)
        if weight is not None:
            pulumi.set(__self__, "weight", weight)

    @_builtins.property
    @pulumi.getter(name="lbaasId")
    def lbaas_id(self) -> pulumi.Input[_builtins.str]:
        """
        The UUID of a load balancer
        """
        return pulumi.get(self, "lbaas_id")

    @lbaas_id.setter
    def lbaas_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "lbaas_id", value)

    @_builtins.property
    @pulumi.getter(name="privateIpAddress")
    def private_ip_address(self) -> pulumi.Input[_builtins.str]:
        """
        The Private IP address of a load balancer member.
        """
        return pulumi.get(self, "private_ip_address")

    @private_ip_address.setter
    def private_ip_address(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "private_ip_address", value)

    @_builtins.property
    @pulumi.getter(name="lbaasServerInstanceAttachmentId")
    def lbaas_server_instance_attachment_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "lbaas_server_instance_attachment_id")

    @lbaas_server_instance_attachment_id.setter
    def lbaas_server_instance_attachment_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lbaas_server_instance_attachment_id", value)

    @_builtins.property
    @pulumi.getter
    def weight(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        The weight of a load balancer member.
        """
        return pulumi.get(self, "weight")

    @weight.setter
    def weight(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "weight", value)


@pulumi.input_type
class _LbaasServerInstanceAttachmentState:
    def __init__(__self__, *,
                 lbaas_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lbaas_server_instance_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 private_ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 uuid: Optional[pulumi.Input[_builtins.str]] = None,
                 weight: Optional[pulumi.Input[_builtins.float]] = None):
        """
        Input properties used for looking up and filtering LbaasServerInstanceAttachment resources.
        :param pulumi.Input[_builtins.str] lbaas_id: The UUID of a load balancer
        :param pulumi.Input[_builtins.str] private_ip_address: The Private IP address of a load balancer member.
        :param pulumi.Input[_builtins.str] uuid: The UUID of a load balancer member
        :param pulumi.Input[_builtins.float] weight: The weight of a load balancer member.
        """
        if lbaas_id is not None:
            pulumi.set(__self__, "lbaas_id", lbaas_id)
        if lbaas_server_instance_attachment_id is not None:
            pulumi.set(__self__, "lbaas_server_instance_attachment_id", lbaas_server_instance_attachment_id)
        if private_ip_address is not None:
            pulumi.set(__self__, "private_ip_address", private_ip_address)
        if uuid is not None:
            pulumi.set(__self__, "uuid", uuid)
        if weight is not None:
            pulumi.set(__self__, "weight", weight)

    @_builtins.property
    @pulumi.getter(name="lbaasId")
    def lbaas_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The UUID of a load balancer
        """
        return pulumi.get(self, "lbaas_id")

    @lbaas_id.setter
    def lbaas_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lbaas_id", value)

    @_builtins.property
    @pulumi.getter(name="lbaasServerInstanceAttachmentId")
    def lbaas_server_instance_attachment_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "lbaas_server_instance_attachment_id")

    @lbaas_server_instance_attachment_id.setter
    def lbaas_server_instance_attachment_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lbaas_server_instance_attachment_id", value)

    @_builtins.property
    @pulumi.getter(name="privateIpAddress")
    def private_ip_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Private IP address of a load balancer member.
        """
        return pulumi.get(self, "private_ip_address")

    @private_ip_address.setter
    def private_ip_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "private_ip_address", value)

    @_builtins.property
    @pulumi.getter
    def uuid(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The UUID of a load balancer member
        """
        return pulumi.get(self, "uuid")

    @uuid.setter
    def uuid(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "uuid", value)

    @_builtins.property
    @pulumi.getter
    def weight(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        The weight of a load balancer member.
        """
        return pulumi.get(self, "weight")

    @weight.setter
    def weight(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "weight", value)


@pulumi.type_token("ibm:index/lbaasServerInstanceAttachment:LbaasServerInstanceAttachment")
class LbaasServerInstanceAttachment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 lbaas_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lbaas_server_instance_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 private_ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 weight: Optional[pulumi.Input[_builtins.float]] = None,
                 __props__=None):
        """
        Create a LbaasServerInstanceAttachment resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] lbaas_id: The UUID of a load balancer
        :param pulumi.Input[_builtins.str] private_ip_address: The Private IP address of a load balancer member.
        :param pulumi.Input[_builtins.float] weight: The weight of a load balancer member.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: LbaasServerInstanceAttachmentArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a LbaasServerInstanceAttachment resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param LbaasServerInstanceAttachmentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(LbaasServerInstanceAttachmentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 lbaas_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lbaas_server_instance_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 private_ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 weight: Optional[pulumi.Input[_builtins.float]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = LbaasServerInstanceAttachmentArgs.__new__(LbaasServerInstanceAttachmentArgs)

            if lbaas_id is None and not opts.urn:
                raise TypeError("Missing required property 'lbaas_id'")
            __props__.__dict__["lbaas_id"] = lbaas_id
            __props__.__dict__["lbaas_server_instance_attachment_id"] = lbaas_server_instance_attachment_id
            if private_ip_address is None and not opts.urn:
                raise TypeError("Missing required property 'private_ip_address'")
            __props__.__dict__["private_ip_address"] = private_ip_address
            __props__.__dict__["weight"] = weight
            __props__.__dict__["uuid"] = None
        super(LbaasServerInstanceAttachment, __self__).__init__(
            'ibm:index/lbaasServerInstanceAttachment:LbaasServerInstanceAttachment',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            lbaas_id: Optional[pulumi.Input[_builtins.str]] = None,
            lbaas_server_instance_attachment_id: Optional[pulumi.Input[_builtins.str]] = None,
            private_ip_address: Optional[pulumi.Input[_builtins.str]] = None,
            uuid: Optional[pulumi.Input[_builtins.str]] = None,
            weight: Optional[pulumi.Input[_builtins.float]] = None) -> 'LbaasServerInstanceAttachment':
        """
        Get an existing LbaasServerInstanceAttachment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] lbaas_id: The UUID of a load balancer
        :param pulumi.Input[_builtins.str] private_ip_address: The Private IP address of a load balancer member.
        :param pulumi.Input[_builtins.str] uuid: The UUID of a load balancer member
        :param pulumi.Input[_builtins.float] weight: The weight of a load balancer member.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _LbaasServerInstanceAttachmentState.__new__(_LbaasServerInstanceAttachmentState)

        __props__.__dict__["lbaas_id"] = lbaas_id
        __props__.__dict__["lbaas_server_instance_attachment_id"] = lbaas_server_instance_attachment_id
        __props__.__dict__["private_ip_address"] = private_ip_address
        __props__.__dict__["uuid"] = uuid
        __props__.__dict__["weight"] = weight
        return LbaasServerInstanceAttachment(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="lbaasId")
    def lbaas_id(self) -> pulumi.Output[_builtins.str]:
        """
        The UUID of a load balancer
        """
        return pulumi.get(self, "lbaas_id")

    @_builtins.property
    @pulumi.getter(name="lbaasServerInstanceAttachmentId")
    def lbaas_server_instance_attachment_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "lbaas_server_instance_attachment_id")

    @_builtins.property
    @pulumi.getter(name="privateIpAddress")
    def private_ip_address(self) -> pulumi.Output[_builtins.str]:
        """
        The Private IP address of a load balancer member.
        """
        return pulumi.get(self, "private_ip_address")

    @_builtins.property
    @pulumi.getter
    def uuid(self) -> pulumi.Output[_builtins.str]:
        """
        The UUID of a load balancer member
        """
        return pulumi.get(self, "uuid")

    @_builtins.property
    @pulumi.getter
    def weight(self) -> pulumi.Output[_builtins.float]:
        """
        The weight of a load balancer member.
        """
        return pulumi.get(self, "weight")

