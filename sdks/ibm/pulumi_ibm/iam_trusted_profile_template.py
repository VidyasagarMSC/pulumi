# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IamTrustedProfileTemplateArgs', 'IamTrustedProfileTemplate']

@pulumi.input_type
class IamTrustedProfileTemplateArgs:
    def __init__(__self__, *,
                 committed: Optional[pulumi.Input[_builtins.bool]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_template_references: Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplatePolicyTemplateReferenceArgs']]]] = None,
                 profile: Optional[pulumi.Input['IamTrustedProfileTemplateProfileArgs']] = None,
                 template_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a IamTrustedProfileTemplate resource.
        :param pulumi.Input[_builtins.bool] committed: Committed flag determines if the template is ready for assignment.
        :param pulumi.Input[_builtins.str] description: The description of the trusted profile template. Describe the template for enterprise account users.
        :param pulumi.Input[_builtins.str] name: The name of the trusted profile template. This is visible only in the enterprise account.
        :param pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplatePolicyTemplateReferenceArgs']]] policy_template_references: Existing policy templates that you can reference to assign access in the trusted profile component.
        :param pulumi.Input['IamTrustedProfileTemplateProfileArgs'] profile: Input body parameters for the TemplateProfileComponent.
        :param pulumi.Input[_builtins.str] template_id: ID of the the template.
        """
        if committed is not None:
            pulumi.set(__self__, "committed", committed)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if policy_template_references is not None:
            pulumi.set(__self__, "policy_template_references", policy_template_references)
        if profile is not None:
            pulumi.set(__self__, "profile", profile)
        if template_id is not None:
            pulumi.set(__self__, "template_id", template_id)

    @_builtins.property
    @pulumi.getter
    def committed(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Committed flag determines if the template is ready for assignment.
        """
        return pulumi.get(self, "committed")

    @committed.setter
    def committed(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "committed", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the trusted profile template. Describe the template for enterprise account users.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the trusted profile template. This is visible only in the enterprise account.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="policyTemplateReferences")
    def policy_template_references(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplatePolicyTemplateReferenceArgs']]]]:
        """
        Existing policy templates that you can reference to assign access in the trusted profile component.
        """
        return pulumi.get(self, "policy_template_references")

    @policy_template_references.setter
    def policy_template_references(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplatePolicyTemplateReferenceArgs']]]]):
        pulumi.set(self, "policy_template_references", value)

    @_builtins.property
    @pulumi.getter
    def profile(self) -> Optional[pulumi.Input['IamTrustedProfileTemplateProfileArgs']]:
        """
        Input body parameters for the TemplateProfileComponent.
        """
        return pulumi.get(self, "profile")

    @profile.setter
    def profile(self, value: Optional[pulumi.Input['IamTrustedProfileTemplateProfileArgs']]):
        pulumi.set(self, "profile", value)

    @_builtins.property
    @pulumi.getter(name="templateId")
    def template_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        ID of the the template.
        """
        return pulumi.get(self, "template_id")

    @template_id.setter
    def template_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "template_id", value)


@pulumi.input_type
class _IamTrustedProfileTemplateState:
    def __init__(__self__, *,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 committed: Optional[pulumi.Input[_builtins.bool]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_by_id: Optional[pulumi.Input[_builtins.str]] = None,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 entity_tag: Optional[pulumi.Input[_builtins.str]] = None,
                 histories: Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateHistoryArgs']]]] = None,
                 last_modified_at: Optional[pulumi.Input[_builtins.str]] = None,
                 last_modified_by_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_template_references: Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplatePolicyTemplateReferenceArgs']]]] = None,
                 profile: Optional[pulumi.Input['IamTrustedProfileTemplateProfileArgs']] = None,
                 template_id: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.float]] = None):
        """
        Input properties used for looking up and filtering IamTrustedProfileTemplate resources.
        :param pulumi.Input[_builtins.str] account_id: ID of the account where the template resides.
        :param pulumi.Input[_builtins.bool] committed: Committed flag determines if the template is ready for assignment.
        :param pulumi.Input[_builtins.str] created_at: Timestamp of when the template was created.
        :param pulumi.Input[_builtins.str] created_by_id: IAMid of the creator.
        :param pulumi.Input[_builtins.str] crn: Cloud resource name.
        :param pulumi.Input[_builtins.str] description: The description of the trusted profile template. Describe the template for enterprise account users.
        :param pulumi.Input[_builtins.str] entity_tag: Entity tag for this templateId-version combination.
        :param pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateHistoryArgs']]] histories: History of the trusted profile template.
        :param pulumi.Input[_builtins.str] last_modified_at: Timestamp of when the template was last modified.
        :param pulumi.Input[_builtins.str] last_modified_by_id: IAMid of the identity that made the latest modification.
        :param pulumi.Input[_builtins.str] name: The name of the trusted profile template. This is visible only in the enterprise account.
        :param pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplatePolicyTemplateReferenceArgs']]] policy_template_references: Existing policy templates that you can reference to assign access in the trusted profile component.
        :param pulumi.Input['IamTrustedProfileTemplateProfileArgs'] profile: Input body parameters for the TemplateProfileComponent.
        :param pulumi.Input[_builtins.str] template_id: ID of the the template.
        :param pulumi.Input[_builtins.float] version: Version of the the template.
        """
        if account_id is not None:
            pulumi.set(__self__, "account_id", account_id)
        if committed is not None:
            pulumi.set(__self__, "committed", committed)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by_id is not None:
            pulumi.set(__self__, "created_by_id", created_by_id)
        if crn is not None:
            pulumi.set(__self__, "crn", crn)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if entity_tag is not None:
            pulumi.set(__self__, "entity_tag", entity_tag)
        if histories is not None:
            pulumi.set(__self__, "histories", histories)
        if last_modified_at is not None:
            pulumi.set(__self__, "last_modified_at", last_modified_at)
        if last_modified_by_id is not None:
            pulumi.set(__self__, "last_modified_by_id", last_modified_by_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if policy_template_references is not None:
            pulumi.set(__self__, "policy_template_references", policy_template_references)
        if profile is not None:
            pulumi.set(__self__, "profile", profile)
        if template_id is not None:
            pulumi.set(__self__, "template_id", template_id)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        ID of the account where the template resides.
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "account_id", value)

    @_builtins.property
    @pulumi.getter
    def committed(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Committed flag determines if the template is ready for assignment.
        """
        return pulumi.get(self, "committed")

    @committed.setter
    def committed(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "committed", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Timestamp of when the template was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdById")
    def created_by_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IAMid of the creator.
        """
        return pulumi.get(self, "created_by_id")

    @created_by_id.setter
    def created_by_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_by_id", value)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Cloud resource name.
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the trusted profile template. Describe the template for enterprise account users.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="entityTag")
    def entity_tag(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Entity tag for this templateId-version combination.
        """
        return pulumi.get(self, "entity_tag")

    @entity_tag.setter
    def entity_tag(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "entity_tag", value)

    @_builtins.property
    @pulumi.getter
    def histories(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateHistoryArgs']]]]:
        """
        History of the trusted profile template.
        """
        return pulumi.get(self, "histories")

    @histories.setter
    def histories(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplateHistoryArgs']]]]):
        pulumi.set(self, "histories", value)

    @_builtins.property
    @pulumi.getter(name="lastModifiedAt")
    def last_modified_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Timestamp of when the template was last modified.
        """
        return pulumi.get(self, "last_modified_at")

    @last_modified_at.setter
    def last_modified_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "last_modified_at", value)

    @_builtins.property
    @pulumi.getter(name="lastModifiedById")
    def last_modified_by_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IAMid of the identity that made the latest modification.
        """
        return pulumi.get(self, "last_modified_by_id")

    @last_modified_by_id.setter
    def last_modified_by_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "last_modified_by_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the trusted profile template. This is visible only in the enterprise account.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="policyTemplateReferences")
    def policy_template_references(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplatePolicyTemplateReferenceArgs']]]]:
        """
        Existing policy templates that you can reference to assign access in the trusted profile component.
        """
        return pulumi.get(self, "policy_template_references")

    @policy_template_references.setter
    def policy_template_references(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IamTrustedProfileTemplatePolicyTemplateReferenceArgs']]]]):
        pulumi.set(self, "policy_template_references", value)

    @_builtins.property
    @pulumi.getter
    def profile(self) -> Optional[pulumi.Input['IamTrustedProfileTemplateProfileArgs']]:
        """
        Input body parameters for the TemplateProfileComponent.
        """
        return pulumi.get(self, "profile")

    @profile.setter
    def profile(self, value: Optional[pulumi.Input['IamTrustedProfileTemplateProfileArgs']]):
        pulumi.set(self, "profile", value)

    @_builtins.property
    @pulumi.getter(name="templateId")
    def template_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        ID of the the template.
        """
        return pulumi.get(self, "template_id")

    @template_id.setter
    def template_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "template_id", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Version of the the template.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "version", value)


@pulumi.type_token("ibm:index/iamTrustedProfileTemplate:IamTrustedProfileTemplate")
class IamTrustedProfileTemplate(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 committed: Optional[pulumi.Input[_builtins.bool]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_template_references: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IamTrustedProfileTemplatePolicyTemplateReferenceArgs', 'IamTrustedProfileTemplatePolicyTemplateReferenceArgsDict']]]]] = None,
                 profile: Optional[pulumi.Input[Union['IamTrustedProfileTemplateProfileArgs', 'IamTrustedProfileTemplateProfileArgsDict']]] = None,
                 template_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a IamTrustedProfileTemplate resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.bool] committed: Committed flag determines if the template is ready for assignment.
        :param pulumi.Input[_builtins.str] description: The description of the trusted profile template. Describe the template for enterprise account users.
        :param pulumi.Input[_builtins.str] name: The name of the trusted profile template. This is visible only in the enterprise account.
        :param pulumi.Input[Sequence[pulumi.Input[Union['IamTrustedProfileTemplatePolicyTemplateReferenceArgs', 'IamTrustedProfileTemplatePolicyTemplateReferenceArgsDict']]]] policy_template_references: Existing policy templates that you can reference to assign access in the trusted profile component.
        :param pulumi.Input[Union['IamTrustedProfileTemplateProfileArgs', 'IamTrustedProfileTemplateProfileArgsDict']] profile: Input body parameters for the TemplateProfileComponent.
        :param pulumi.Input[_builtins.str] template_id: ID of the the template.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[IamTrustedProfileTemplateArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a IamTrustedProfileTemplate resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param IamTrustedProfileTemplateArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IamTrustedProfileTemplateArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 committed: Optional[pulumi.Input[_builtins.bool]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_template_references: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IamTrustedProfileTemplatePolicyTemplateReferenceArgs', 'IamTrustedProfileTemplatePolicyTemplateReferenceArgsDict']]]]] = None,
                 profile: Optional[pulumi.Input[Union['IamTrustedProfileTemplateProfileArgs', 'IamTrustedProfileTemplateProfileArgsDict']]] = None,
                 template_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IamTrustedProfileTemplateArgs.__new__(IamTrustedProfileTemplateArgs)

            __props__.__dict__["committed"] = committed
            __props__.__dict__["description"] = description
            __props__.__dict__["name"] = name
            __props__.__dict__["policy_template_references"] = policy_template_references
            __props__.__dict__["profile"] = profile
            __props__.__dict__["template_id"] = template_id
            __props__.__dict__["account_id"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_by_id"] = None
            __props__.__dict__["crn"] = None
            __props__.__dict__["entity_tag"] = None
            __props__.__dict__["histories"] = None
            __props__.__dict__["last_modified_at"] = None
            __props__.__dict__["last_modified_by_id"] = None
            __props__.__dict__["version"] = None
        super(IamTrustedProfileTemplate, __self__).__init__(
            'ibm:index/iamTrustedProfileTemplate:IamTrustedProfileTemplate',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_id: Optional[pulumi.Input[_builtins.str]] = None,
            committed: Optional[pulumi.Input[_builtins.bool]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_by_id: Optional[pulumi.Input[_builtins.str]] = None,
            crn: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            entity_tag: Optional[pulumi.Input[_builtins.str]] = None,
            histories: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IamTrustedProfileTemplateHistoryArgs', 'IamTrustedProfileTemplateHistoryArgsDict']]]]] = None,
            last_modified_at: Optional[pulumi.Input[_builtins.str]] = None,
            last_modified_by_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            policy_template_references: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IamTrustedProfileTemplatePolicyTemplateReferenceArgs', 'IamTrustedProfileTemplatePolicyTemplateReferenceArgsDict']]]]] = None,
            profile: Optional[pulumi.Input[Union['IamTrustedProfileTemplateProfileArgs', 'IamTrustedProfileTemplateProfileArgsDict']]] = None,
            template_id: Optional[pulumi.Input[_builtins.str]] = None,
            version: Optional[pulumi.Input[_builtins.float]] = None) -> 'IamTrustedProfileTemplate':
        """
        Get an existing IamTrustedProfileTemplate resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] account_id: ID of the account where the template resides.
        :param pulumi.Input[_builtins.bool] committed: Committed flag determines if the template is ready for assignment.
        :param pulumi.Input[_builtins.str] created_at: Timestamp of when the template was created.
        :param pulumi.Input[_builtins.str] created_by_id: IAMid of the creator.
        :param pulumi.Input[_builtins.str] crn: Cloud resource name.
        :param pulumi.Input[_builtins.str] description: The description of the trusted profile template. Describe the template for enterprise account users.
        :param pulumi.Input[_builtins.str] entity_tag: Entity tag for this templateId-version combination.
        :param pulumi.Input[Sequence[pulumi.Input[Union['IamTrustedProfileTemplateHistoryArgs', 'IamTrustedProfileTemplateHistoryArgsDict']]]] histories: History of the trusted profile template.
        :param pulumi.Input[_builtins.str] last_modified_at: Timestamp of when the template was last modified.
        :param pulumi.Input[_builtins.str] last_modified_by_id: IAMid of the identity that made the latest modification.
        :param pulumi.Input[_builtins.str] name: The name of the trusted profile template. This is visible only in the enterprise account.
        :param pulumi.Input[Sequence[pulumi.Input[Union['IamTrustedProfileTemplatePolicyTemplateReferenceArgs', 'IamTrustedProfileTemplatePolicyTemplateReferenceArgsDict']]]] policy_template_references: Existing policy templates that you can reference to assign access in the trusted profile component.
        :param pulumi.Input[Union['IamTrustedProfileTemplateProfileArgs', 'IamTrustedProfileTemplateProfileArgsDict']] profile: Input body parameters for the TemplateProfileComponent.
        :param pulumi.Input[_builtins.str] template_id: ID of the the template.
        :param pulumi.Input[_builtins.float] version: Version of the the template.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IamTrustedProfileTemplateState.__new__(_IamTrustedProfileTemplateState)

        __props__.__dict__["account_id"] = account_id
        __props__.__dict__["committed"] = committed
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_by_id"] = created_by_id
        __props__.__dict__["crn"] = crn
        __props__.__dict__["description"] = description
        __props__.__dict__["entity_tag"] = entity_tag
        __props__.__dict__["histories"] = histories
        __props__.__dict__["last_modified_at"] = last_modified_at
        __props__.__dict__["last_modified_by_id"] = last_modified_by_id
        __props__.__dict__["name"] = name
        __props__.__dict__["policy_template_references"] = policy_template_references
        __props__.__dict__["profile"] = profile
        __props__.__dict__["template_id"] = template_id
        __props__.__dict__["version"] = version
        return IamTrustedProfileTemplate(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Output[_builtins.str]:
        """
        ID of the account where the template resides.
        """
        return pulumi.get(self, "account_id")

    @_builtins.property
    @pulumi.getter
    def committed(self) -> pulumi.Output[_builtins.bool]:
        """
        Committed flag determines if the template is ready for assignment.
        """
        return pulumi.get(self, "committed")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Timestamp of when the template was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdById")
    def created_by_id(self) -> pulumi.Output[_builtins.str]:
        """
        IAMid of the creator.
        """
        return pulumi.get(self, "created_by_id")

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Output[_builtins.str]:
        """
        Cloud resource name.
        """
        return pulumi.get(self, "crn")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The description of the trusted profile template. Describe the template for enterprise account users.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="entityTag")
    def entity_tag(self) -> pulumi.Output[_builtins.str]:
        """
        Entity tag for this templateId-version combination.
        """
        return pulumi.get(self, "entity_tag")

    @_builtins.property
    @pulumi.getter
    def histories(self) -> pulumi.Output[Sequence['outputs.IamTrustedProfileTemplateHistory']]:
        """
        History of the trusted profile template.
        """
        return pulumi.get(self, "histories")

    @_builtins.property
    @pulumi.getter(name="lastModifiedAt")
    def last_modified_at(self) -> pulumi.Output[_builtins.str]:
        """
        Timestamp of when the template was last modified.
        """
        return pulumi.get(self, "last_modified_at")

    @_builtins.property
    @pulumi.getter(name="lastModifiedById")
    def last_modified_by_id(self) -> pulumi.Output[_builtins.str]:
        """
        IAMid of the identity that made the latest modification.
        """
        return pulumi.get(self, "last_modified_by_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the trusted profile template. This is visible only in the enterprise account.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="policyTemplateReferences")
    def policy_template_references(self) -> pulumi.Output[Optional[Sequence['outputs.IamTrustedProfileTemplatePolicyTemplateReference']]]:
        """
        Existing policy templates that you can reference to assign access in the trusted profile component.
        """
        return pulumi.get(self, "policy_template_references")

    @_builtins.property
    @pulumi.getter
    def profile(self) -> pulumi.Output[Optional['outputs.IamTrustedProfileTemplateProfile']]:
        """
        Input body parameters for the TemplateProfileComponent.
        """
        return pulumi.get(self, "profile")

    @_builtins.property
    @pulumi.getter(name="templateId")
    def template_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        ID of the the template.
        """
        return pulumi.get(self, "template_id")

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Output[_builtins.float]:
        """
        Version of the the template.
        """
        return pulumi.get(self, "version")

