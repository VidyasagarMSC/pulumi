# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['CmObjectArgs', 'CmObject']

@pulumi.input_type
class CmObjectArgs:
    def __init__(__self__, *,
                 catalog_id: pulumi.Input[_builtins.str],
                 kind: pulumi.Input[_builtins.str],
                 cm_object_id: Optional[pulumi.Input[_builtins.str]] = None,
                 data: Optional[pulumi.Input[_builtins.str]] = None,
                 label: Optional[pulumi.Input[_builtins.str]] = None,
                 label_i18n: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 parent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 short_description: Optional[pulumi.Input[_builtins.str]] = None,
                 short_description_i18n: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a CmObject resource.
        :param pulumi.Input[_builtins.str] catalog_id: Catalog identifier.
        :param pulumi.Input[_builtins.str] kind: Kind of object. Options are "vpe", "preset_configuration", or "proxy_source".
        :param pulumi.Input[_builtins.str] data: Stringified map of data values for this object.
        :param pulumi.Input[_builtins.str] label: Display name in the requested language.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] label_i18n: A map of translated strings, by language code.
        :param pulumi.Input[_builtins.str] name: The programmatic name of this object.
        :param pulumi.Input[_builtins.str] parent_id: The parent for this specific object.
        :param pulumi.Input[_builtins.str] short_description: Short description in the requested language.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] short_description_i18n: A map of translated strings, by language code.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: List of tags associated with this catalog.
        """
        pulumi.set(__self__, "catalog_id", catalog_id)
        pulumi.set(__self__, "kind", kind)
        if cm_object_id is not None:
            pulumi.set(__self__, "cm_object_id", cm_object_id)
        if data is not None:
            pulumi.set(__self__, "data", data)
        if label is not None:
            pulumi.set(__self__, "label", label)
        if label_i18n is not None:
            pulumi.set(__self__, "label_i18n", label_i18n)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if parent_id is not None:
            pulumi.set(__self__, "parent_id", parent_id)
        if short_description is not None:
            pulumi.set(__self__, "short_description", short_description)
        if short_description_i18n is not None:
            pulumi.set(__self__, "short_description_i18n", short_description_i18n)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="catalogId")
    def catalog_id(self) -> pulumi.Input[_builtins.str]:
        """
        Catalog identifier.
        """
        return pulumi.get(self, "catalog_id")

    @catalog_id.setter
    def catalog_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "catalog_id", value)

    @_builtins.property
    @pulumi.getter
    def kind(self) -> pulumi.Input[_builtins.str]:
        """
        Kind of object. Options are "vpe", "preset_configuration", or "proxy_source".
        """
        return pulumi.get(self, "kind")

    @kind.setter
    def kind(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "kind", value)

    @_builtins.property
    @pulumi.getter(name="cmObjectId")
    def cm_object_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "cm_object_id")

    @cm_object_id.setter
    def cm_object_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cm_object_id", value)

    @_builtins.property
    @pulumi.getter
    def data(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Stringified map of data values for this object.
        """
        return pulumi.get(self, "data")

    @data.setter
    def data(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "data", value)

    @_builtins.property
    @pulumi.getter
    def label(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Display name in the requested language.
        """
        return pulumi.get(self, "label")

    @label.setter
    def label(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "label", value)

    @_builtins.property
    @pulumi.getter(name="labelI18n")
    def label_i18n(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        A map of translated strings, by language code.
        """
        return pulumi.get(self, "label_i18n")

    @label_i18n.setter
    def label_i18n(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "label_i18n", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The programmatic name of this object.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The parent for this specific object.
        """
        return pulumi.get(self, "parent_id")

    @parent_id.setter
    def parent_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "parent_id", value)

    @_builtins.property
    @pulumi.getter(name="shortDescription")
    def short_description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Short description in the requested language.
        """
        return pulumi.get(self, "short_description")

    @short_description.setter
    def short_description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "short_description", value)

    @_builtins.property
    @pulumi.getter(name="shortDescriptionI18n")
    def short_description_i18n(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        A map of translated strings, by language code.
        """
        return pulumi.get(self, "short_description_i18n")

    @short_description_i18n.setter
    def short_description_i18n(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "short_description_i18n", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        List of tags associated with this catalog.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _CmObjectState:
    def __init__(__self__, *,
                 catalog_id: Optional[pulumi.Input[_builtins.str]] = None,
                 catalog_name: Optional[pulumi.Input[_builtins.str]] = None,
                 cm_object_id: Optional[pulumi.Input[_builtins.str]] = None,
                 created: Optional[pulumi.Input[_builtins.str]] = None,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 data: Optional[pulumi.Input[_builtins.str]] = None,
                 kind: Optional[pulumi.Input[_builtins.str]] = None,
                 label: Optional[pulumi.Input[_builtins.str]] = None,
                 label_i18n: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 object_id: Optional[pulumi.Input[_builtins.str]] = None,
                 parent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 publishes: Optional[pulumi.Input[Sequence[pulumi.Input['CmObjectPublishArgs']]]] = None,
                 rev: Optional[pulumi.Input[_builtins.str]] = None,
                 short_description: Optional[pulumi.Input[_builtins.str]] = None,
                 short_description_i18n: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 states: Optional[pulumi.Input[Sequence[pulumi.Input['CmObjectStateArgs']]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 updated: Optional[pulumi.Input[_builtins.str]] = None,
                 url: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering CmObject resources.
        :param pulumi.Input[_builtins.str] catalog_id: Catalog identifier.
        :param pulumi.Input[_builtins.str] catalog_name: The name of the catalog.
        :param pulumi.Input[_builtins.str] created: The date and time this catalog was created.
        :param pulumi.Input[_builtins.str] crn: The crn for this specific object.
        :param pulumi.Input[_builtins.str] data: Stringified map of data values for this object.
        :param pulumi.Input[_builtins.str] kind: Kind of object. Options are "vpe", "preset_configuration", or "proxy_source".
        :param pulumi.Input[_builtins.str] label: Display name in the requested language.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] label_i18n: A map of translated strings, by language code.
        :param pulumi.Input[_builtins.str] name: The programmatic name of this object.
        :param pulumi.Input[_builtins.str] object_id: The ID of the object.
        :param pulumi.Input[_builtins.str] parent_id: The parent for this specific object.
        :param pulumi.Input[Sequence[pulumi.Input['CmObjectPublishArgs']]] publishes: Publish information.
        :param pulumi.Input[_builtins.str] rev: Cloudant revision.
        :param pulumi.Input[_builtins.str] short_description: Short description in the requested language.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] short_description_i18n: A map of translated strings, by language code.
        :param pulumi.Input[Sequence[pulumi.Input['CmObjectStateArgs']]] states: Offering state.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: List of tags associated with this catalog.
        :param pulumi.Input[_builtins.str] updated: The date and time this catalog was last updated.
        :param pulumi.Input[_builtins.str] url: The url for this specific object.
        """
        if catalog_id is not None:
            pulumi.set(__self__, "catalog_id", catalog_id)
        if catalog_name is not None:
            pulumi.set(__self__, "catalog_name", catalog_name)
        if cm_object_id is not None:
            pulumi.set(__self__, "cm_object_id", cm_object_id)
        if created is not None:
            pulumi.set(__self__, "created", created)
        if crn is not None:
            pulumi.set(__self__, "crn", crn)
        if data is not None:
            pulumi.set(__self__, "data", data)
        if kind is not None:
            pulumi.set(__self__, "kind", kind)
        if label is not None:
            pulumi.set(__self__, "label", label)
        if label_i18n is not None:
            pulumi.set(__self__, "label_i18n", label_i18n)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if object_id is not None:
            pulumi.set(__self__, "object_id", object_id)
        if parent_id is not None:
            pulumi.set(__self__, "parent_id", parent_id)
        if publishes is not None:
            pulumi.set(__self__, "publishes", publishes)
        if rev is not None:
            pulumi.set(__self__, "rev", rev)
        if short_description is not None:
            pulumi.set(__self__, "short_description", short_description)
        if short_description_i18n is not None:
            pulumi.set(__self__, "short_description_i18n", short_description_i18n)
        if states is not None:
            pulumi.set(__self__, "states", states)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if updated is not None:
            pulumi.set(__self__, "updated", updated)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="catalogId")
    def catalog_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Catalog identifier.
        """
        return pulumi.get(self, "catalog_id")

    @catalog_id.setter
    def catalog_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "catalog_id", value)

    @_builtins.property
    @pulumi.getter(name="catalogName")
    def catalog_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the catalog.
        """
        return pulumi.get(self, "catalog_name")

    @catalog_name.setter
    def catalog_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "catalog_name", value)

    @_builtins.property
    @pulumi.getter(name="cmObjectId")
    def cm_object_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "cm_object_id")

    @cm_object_id.setter
    def cm_object_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cm_object_id", value)

    @_builtins.property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date and time this catalog was created.
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created", value)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The crn for this specific object.
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter
    def data(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Stringified map of data values for this object.
        """
        return pulumi.get(self, "data")

    @data.setter
    def data(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "data", value)

    @_builtins.property
    @pulumi.getter
    def kind(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Kind of object. Options are "vpe", "preset_configuration", or "proxy_source".
        """
        return pulumi.get(self, "kind")

    @kind.setter
    def kind(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "kind", value)

    @_builtins.property
    @pulumi.getter
    def label(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Display name in the requested language.
        """
        return pulumi.get(self, "label")

    @label.setter
    def label(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "label", value)

    @_builtins.property
    @pulumi.getter(name="labelI18n")
    def label_i18n(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        A map of translated strings, by language code.
        """
        return pulumi.get(self, "label_i18n")

    @label_i18n.setter
    def label_i18n(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "label_i18n", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The programmatic name of this object.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="objectId")
    def object_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the object.
        """
        return pulumi.get(self, "object_id")

    @object_id.setter
    def object_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "object_id", value)

    @_builtins.property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The parent for this specific object.
        """
        return pulumi.get(self, "parent_id")

    @parent_id.setter
    def parent_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "parent_id", value)

    @_builtins.property
    @pulumi.getter
    def publishes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CmObjectPublishArgs']]]]:
        """
        Publish information.
        """
        return pulumi.get(self, "publishes")

    @publishes.setter
    def publishes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CmObjectPublishArgs']]]]):
        pulumi.set(self, "publishes", value)

    @_builtins.property
    @pulumi.getter
    def rev(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Cloudant revision.
        """
        return pulumi.get(self, "rev")

    @rev.setter
    def rev(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "rev", value)

    @_builtins.property
    @pulumi.getter(name="shortDescription")
    def short_description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Short description in the requested language.
        """
        return pulumi.get(self, "short_description")

    @short_description.setter
    def short_description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "short_description", value)

    @_builtins.property
    @pulumi.getter(name="shortDescriptionI18n")
    def short_description_i18n(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        A map of translated strings, by language code.
        """
        return pulumi.get(self, "short_description_i18n")

    @short_description_i18n.setter
    def short_description_i18n(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "short_description_i18n", value)

    @_builtins.property
    @pulumi.getter
    def states(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CmObjectStateArgs']]]]:
        """
        Offering state.
        """
        return pulumi.get(self, "states")

    @states.setter
    def states(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CmObjectStateArgs']]]]):
        pulumi.set(self, "states", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        List of tags associated with this catalog.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter
    def updated(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date and time this catalog was last updated.
        """
        return pulumi.get(self, "updated")

    @updated.setter
    def updated(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated", value)

    @_builtins.property
    @pulumi.getter
    def url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The url for this specific object.
        """
        return pulumi.get(self, "url")

    @url.setter
    def url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "url", value)


@pulumi.type_token("ibm:index/cmObject:CmObject")
class CmObject(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 catalog_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cm_object_id: Optional[pulumi.Input[_builtins.str]] = None,
                 data: Optional[pulumi.Input[_builtins.str]] = None,
                 kind: Optional[pulumi.Input[_builtins.str]] = None,
                 label: Optional[pulumi.Input[_builtins.str]] = None,
                 label_i18n: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 parent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 short_description: Optional[pulumi.Input[_builtins.str]] = None,
                 short_description_i18n: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        """
        Create a CmObject resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] catalog_id: Catalog identifier.
        :param pulumi.Input[_builtins.str] data: Stringified map of data values for this object.
        :param pulumi.Input[_builtins.str] kind: Kind of object. Options are "vpe", "preset_configuration", or "proxy_source".
        :param pulumi.Input[_builtins.str] label: Display name in the requested language.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] label_i18n: A map of translated strings, by language code.
        :param pulumi.Input[_builtins.str] name: The programmatic name of this object.
        :param pulumi.Input[_builtins.str] parent_id: The parent for this specific object.
        :param pulumi.Input[_builtins.str] short_description: Short description in the requested language.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] short_description_i18n: A map of translated strings, by language code.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: List of tags associated with this catalog.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CmObjectArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a CmObject resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param CmObjectArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CmObjectArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 catalog_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cm_object_id: Optional[pulumi.Input[_builtins.str]] = None,
                 data: Optional[pulumi.Input[_builtins.str]] = None,
                 kind: Optional[pulumi.Input[_builtins.str]] = None,
                 label: Optional[pulumi.Input[_builtins.str]] = None,
                 label_i18n: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 parent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 short_description: Optional[pulumi.Input[_builtins.str]] = None,
                 short_description_i18n: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CmObjectArgs.__new__(CmObjectArgs)

            if catalog_id is None and not opts.urn:
                raise TypeError("Missing required property 'catalog_id'")
            __props__.__dict__["catalog_id"] = catalog_id
            __props__.__dict__["cm_object_id"] = cm_object_id
            __props__.__dict__["data"] = data
            if kind is None and not opts.urn:
                raise TypeError("Missing required property 'kind'")
            __props__.__dict__["kind"] = kind
            __props__.__dict__["label"] = label
            __props__.__dict__["label_i18n"] = label_i18n
            __props__.__dict__["name"] = name
            __props__.__dict__["parent_id"] = parent_id
            __props__.__dict__["short_description"] = short_description
            __props__.__dict__["short_description_i18n"] = short_description_i18n
            __props__.__dict__["tags"] = tags
            __props__.__dict__["catalog_name"] = None
            __props__.__dict__["created"] = None
            __props__.__dict__["crn"] = None
            __props__.__dict__["object_id"] = None
            __props__.__dict__["publishes"] = None
            __props__.__dict__["rev"] = None
            __props__.__dict__["states"] = None
            __props__.__dict__["updated"] = None
            __props__.__dict__["url"] = None
        super(CmObject, __self__).__init__(
            'ibm:index/cmObject:CmObject',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            catalog_id: Optional[pulumi.Input[_builtins.str]] = None,
            catalog_name: Optional[pulumi.Input[_builtins.str]] = None,
            cm_object_id: Optional[pulumi.Input[_builtins.str]] = None,
            created: Optional[pulumi.Input[_builtins.str]] = None,
            crn: Optional[pulumi.Input[_builtins.str]] = None,
            data: Optional[pulumi.Input[_builtins.str]] = None,
            kind: Optional[pulumi.Input[_builtins.str]] = None,
            label: Optional[pulumi.Input[_builtins.str]] = None,
            label_i18n: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            object_id: Optional[pulumi.Input[_builtins.str]] = None,
            parent_id: Optional[pulumi.Input[_builtins.str]] = None,
            publishes: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CmObjectPublishArgs', 'CmObjectPublishArgsDict']]]]] = None,
            rev: Optional[pulumi.Input[_builtins.str]] = None,
            short_description: Optional[pulumi.Input[_builtins.str]] = None,
            short_description_i18n: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            states: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CmObjectStateArgs', 'CmObjectStateArgsDict']]]]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            updated: Optional[pulumi.Input[_builtins.str]] = None,
            url: Optional[pulumi.Input[_builtins.str]] = None) -> 'CmObject':
        """
        Get an existing CmObject resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] catalog_id: Catalog identifier.
        :param pulumi.Input[_builtins.str] catalog_name: The name of the catalog.
        :param pulumi.Input[_builtins.str] created: The date and time this catalog was created.
        :param pulumi.Input[_builtins.str] crn: The crn for this specific object.
        :param pulumi.Input[_builtins.str] data: Stringified map of data values for this object.
        :param pulumi.Input[_builtins.str] kind: Kind of object. Options are "vpe", "preset_configuration", or "proxy_source".
        :param pulumi.Input[_builtins.str] label: Display name in the requested language.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] label_i18n: A map of translated strings, by language code.
        :param pulumi.Input[_builtins.str] name: The programmatic name of this object.
        :param pulumi.Input[_builtins.str] object_id: The ID of the object.
        :param pulumi.Input[_builtins.str] parent_id: The parent for this specific object.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CmObjectPublishArgs', 'CmObjectPublishArgsDict']]]] publishes: Publish information.
        :param pulumi.Input[_builtins.str] rev: Cloudant revision.
        :param pulumi.Input[_builtins.str] short_description: Short description in the requested language.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] short_description_i18n: A map of translated strings, by language code.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CmObjectStateArgs', 'CmObjectStateArgsDict']]]] states: Offering state.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] tags: List of tags associated with this catalog.
        :param pulumi.Input[_builtins.str] updated: The date and time this catalog was last updated.
        :param pulumi.Input[_builtins.str] url: The url for this specific object.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CmObjectState.__new__(_CmObjectState)

        __props__.__dict__["catalog_id"] = catalog_id
        __props__.__dict__["catalog_name"] = catalog_name
        __props__.__dict__["cm_object_id"] = cm_object_id
        __props__.__dict__["created"] = created
        __props__.__dict__["crn"] = crn
        __props__.__dict__["data"] = data
        __props__.__dict__["kind"] = kind
        __props__.__dict__["label"] = label
        __props__.__dict__["label_i18n"] = label_i18n
        __props__.__dict__["name"] = name
        __props__.__dict__["object_id"] = object_id
        __props__.__dict__["parent_id"] = parent_id
        __props__.__dict__["publishes"] = publishes
        __props__.__dict__["rev"] = rev
        __props__.__dict__["short_description"] = short_description
        __props__.__dict__["short_description_i18n"] = short_description_i18n
        __props__.__dict__["states"] = states
        __props__.__dict__["tags"] = tags
        __props__.__dict__["updated"] = updated
        __props__.__dict__["url"] = url
        return CmObject(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="catalogId")
    def catalog_id(self) -> pulumi.Output[_builtins.str]:
        """
        Catalog identifier.
        """
        return pulumi.get(self, "catalog_id")

    @_builtins.property
    @pulumi.getter(name="catalogName")
    def catalog_name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the catalog.
        """
        return pulumi.get(self, "catalog_name")

    @_builtins.property
    @pulumi.getter(name="cmObjectId")
    def cm_object_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "cm_object_id")

    @_builtins.property
    @pulumi.getter
    def created(self) -> pulumi.Output[_builtins.str]:
        """
        The date and time this catalog was created.
        """
        return pulumi.get(self, "created")

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Output[_builtins.str]:
        """
        The crn for this specific object.
        """
        return pulumi.get(self, "crn")

    @_builtins.property
    @pulumi.getter
    def data(self) -> pulumi.Output[_builtins.str]:
        """
        Stringified map of data values for this object.
        """
        return pulumi.get(self, "data")

    @_builtins.property
    @pulumi.getter
    def kind(self) -> pulumi.Output[_builtins.str]:
        """
        Kind of object. Options are "vpe", "preset_configuration", or "proxy_source".
        """
        return pulumi.get(self, "kind")

    @_builtins.property
    @pulumi.getter
    def label(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Display name in the requested language.
        """
        return pulumi.get(self, "label")

    @_builtins.property
    @pulumi.getter(name="labelI18n")
    def label_i18n(self) -> pulumi.Output[Optional[Mapping[str, _builtins.str]]]:
        """
        A map of translated strings, by language code.
        """
        return pulumi.get(self, "label_i18n")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The programmatic name of this object.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="objectId")
    def object_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the object.
        """
        return pulumi.get(self, "object_id")

    @_builtins.property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The parent for this specific object.
        """
        return pulumi.get(self, "parent_id")

    @_builtins.property
    @pulumi.getter
    def publishes(self) -> pulumi.Output[Sequence['outputs.CmObjectPublish']]:
        """
        Publish information.
        """
        return pulumi.get(self, "publishes")

    @_builtins.property
    @pulumi.getter
    def rev(self) -> pulumi.Output[_builtins.str]:
        """
        Cloudant revision.
        """
        return pulumi.get(self, "rev")

    @_builtins.property
    @pulumi.getter(name="shortDescription")
    def short_description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Short description in the requested language.
        """
        return pulumi.get(self, "short_description")

    @_builtins.property
    @pulumi.getter(name="shortDescriptionI18n")
    def short_description_i18n(self) -> pulumi.Output[Optional[Mapping[str, _builtins.str]]]:
        """
        A map of translated strings, by language code.
        """
        return pulumi.get(self, "short_description_i18n")

    @_builtins.property
    @pulumi.getter
    def states(self) -> pulumi.Output[Sequence['outputs.CmObjectState']]:
        """
        Offering state.
        """
        return pulumi.get(self, "states")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        List of tags associated with this catalog.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def updated(self) -> pulumi.Output[_builtins.str]:
        """
        The date and time this catalog was last updated.
        """
        return pulumi.get(self, "updated")

    @_builtins.property
    @pulumi.getter
    def url(self) -> pulumi.Output[_builtins.str]:
        """
        The url for this specific object.
        """
        return pulumi.get(self, "url")

