# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetMqcloudVirtualPrivateEndpointGatewaysResult',
    'AwaitableGetMqcloudVirtualPrivateEndpointGatewaysResult',
    'get_mqcloud_virtual_private_endpoint_gateways',
    'get_mqcloud_virtual_private_endpoint_gateways_output',
]

@pulumi.output_type
class GetMqcloudVirtualPrivateEndpointGatewaysResult:
    """
    A collection of values returned by getMqcloudVirtualPrivateEndpointGateways.
    """
    def __init__(__self__, id=None, name=None, service_instance_guid=None, trusted_profile=None, virtual_private_endpoint_gateways=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if service_instance_guid and not isinstance(service_instance_guid, str):
            raise TypeError("Expected argument 'service_instance_guid' to be a str")
        pulumi.set(__self__, "service_instance_guid", service_instance_guid)
        if trusted_profile and not isinstance(trusted_profile, str):
            raise TypeError("Expected argument 'trusted_profile' to be a str")
        pulumi.set(__self__, "trusted_profile", trusted_profile)
        if virtual_private_endpoint_gateways and not isinstance(virtual_private_endpoint_gateways, list):
            raise TypeError("Expected argument 'virtual_private_endpoint_gateways' to be a list")
        pulumi.set(__self__, "virtual_private_endpoint_gateways", virtual_private_endpoint_gateways)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="serviceInstanceGuid")
    def service_instance_guid(self) -> _builtins.str:
        return pulumi.get(self, "service_instance_guid")

    @_builtins.property
    @pulumi.getter(name="trustedProfile")
    def trusted_profile(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "trusted_profile")

    @_builtins.property
    @pulumi.getter(name="virtualPrivateEndpointGateways")
    def virtual_private_endpoint_gateways(self) -> Sequence['outputs.GetMqcloudVirtualPrivateEndpointGatewaysVirtualPrivateEndpointGatewayResult']:
        return pulumi.get(self, "virtual_private_endpoint_gateways")


class AwaitableGetMqcloudVirtualPrivateEndpointGatewaysResult(GetMqcloudVirtualPrivateEndpointGatewaysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMqcloudVirtualPrivateEndpointGatewaysResult(
            id=self.id,
            name=self.name,
            service_instance_guid=self.service_instance_guid,
            trusted_profile=self.trusted_profile,
            virtual_private_endpoint_gateways=self.virtual_private_endpoint_gateways)


def get_mqcloud_virtual_private_endpoint_gateways(id: Optional[_builtins.str] = None,
                                                  name: Optional[_builtins.str] = None,
                                                  service_instance_guid: Optional[_builtins.str] = None,
                                                  trusted_profile: Optional[_builtins.str] = None,
                                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMqcloudVirtualPrivateEndpointGatewaysResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['name'] = name
    __args__['serviceInstanceGuid'] = service_instance_guid
    __args__['trustedProfile'] = trusted_profile
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getMqcloudVirtualPrivateEndpointGateways:getMqcloudVirtualPrivateEndpointGateways', __args__, opts=opts, typ=GetMqcloudVirtualPrivateEndpointGatewaysResult, package_ref=_utilities.get_package()).value

    return AwaitableGetMqcloudVirtualPrivateEndpointGatewaysResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        service_instance_guid=pulumi.get(__ret__, 'service_instance_guid'),
        trusted_profile=pulumi.get(__ret__, 'trusted_profile'),
        virtual_private_endpoint_gateways=pulumi.get(__ret__, 'virtual_private_endpoint_gateways'))
def get_mqcloud_virtual_private_endpoint_gateways_output(id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                         name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                         service_instance_guid: Optional[pulumi.Input[_builtins.str]] = None,
                                                         trusted_profile: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                         opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetMqcloudVirtualPrivateEndpointGatewaysResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['name'] = name
    __args__['serviceInstanceGuid'] = service_instance_guid
    __args__['trustedProfile'] = trusted_profile
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getMqcloudVirtualPrivateEndpointGateways:getMqcloudVirtualPrivateEndpointGateways', __args__, opts=opts, typ=GetMqcloudVirtualPrivateEndpointGatewaysResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetMqcloudVirtualPrivateEndpointGatewaysResult(
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        service_instance_guid=pulumi.get(__response__, 'service_instance_guid'),
        trusted_profile=pulumi.get(__response__, 'trusted_profile'),
        virtual_private_endpoint_gateways=pulumi.get(__response__, 'virtual_private_endpoint_gateways')))
