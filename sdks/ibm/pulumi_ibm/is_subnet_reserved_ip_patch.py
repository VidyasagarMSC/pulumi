# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IsSubnetReservedIpPatchArgs', 'IsSubnetReservedIpPatch']

@pulumi.input_type
class IsSubnetReservedIpPatchArgs:
    def __init__(__self__, *,
                 reserved_ip: pulumi.Input[_builtins.str],
                 subnet: pulumi.Input[_builtins.str],
                 address: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_delete: Optional[pulumi.Input[_builtins.bool]] = None,
                 is_subnet_reserved_ip_patch_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 target: Optional[pulumi.Input[_builtins.str]] = None,
                 target_crn: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['IsSubnetReservedIpPatchTimeoutsArgs']] = None):
        """
        The set of arguments for constructing a IsSubnetReservedIpPatch resource.
        :param pulumi.Input[_builtins.str] reserved_ip: The unique identifier of the reserved IP.
        :param pulumi.Input[_builtins.str] subnet: The subnet identifier.
        :param pulumi.Input[_builtins.str] address: The address for this reserved IP.
        :param pulumi.Input[_builtins.bool] auto_delete: If set to true, this reserved IP will be automatically deleted
        :param pulumi.Input[_builtins.str] name: The user-defined or system-provided name for this reserved IP.
        :param pulumi.Input[_builtins.str] target: The unique identifier for target.
        :param pulumi.Input[_builtins.str] target_crn: The crn for target.
        """
        pulumi.set(__self__, "reserved_ip", reserved_ip)
        pulumi.set(__self__, "subnet", subnet)
        if address is not None:
            pulumi.set(__self__, "address", address)
        if auto_delete is not None:
            pulumi.set(__self__, "auto_delete", auto_delete)
        if is_subnet_reserved_ip_patch_id is not None:
            pulumi.set(__self__, "is_subnet_reserved_ip_patch_id", is_subnet_reserved_ip_patch_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if target is not None:
            pulumi.set(__self__, "target", target)
        if target_crn is not None:
            pulumi.set(__self__, "target_crn", target_crn)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)

    @_builtins.property
    @pulumi.getter(name="reservedIp")
    def reserved_ip(self) -> pulumi.Input[_builtins.str]:
        """
        The unique identifier of the reserved IP.
        """
        return pulumi.get(self, "reserved_ip")

    @reserved_ip.setter
    def reserved_ip(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "reserved_ip", value)

    @_builtins.property
    @pulumi.getter
    def subnet(self) -> pulumi.Input[_builtins.str]:
        """
        The subnet identifier.
        """
        return pulumi.get(self, "subnet")

    @subnet.setter
    def subnet(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "subnet", value)

    @_builtins.property
    @pulumi.getter
    def address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The address for this reserved IP.
        """
        return pulumi.get(self, "address")

    @address.setter
    def address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "address", value)

    @_builtins.property
    @pulumi.getter(name="autoDelete")
    def auto_delete(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        If set to true, this reserved IP will be automatically deleted
        """
        return pulumi.get(self, "auto_delete")

    @auto_delete.setter
    def auto_delete(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "auto_delete", value)

    @_builtins.property
    @pulumi.getter(name="isSubnetReservedIpPatchId")
    def is_subnet_reserved_ip_patch_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "is_subnet_reserved_ip_patch_id")

    @is_subnet_reserved_ip_patch_id.setter
    def is_subnet_reserved_ip_patch_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "is_subnet_reserved_ip_patch_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The user-defined or system-provided name for this reserved IP.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def target(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique identifier for target.
        """
        return pulumi.get(self, "target")

    @target.setter
    def target(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target", value)

    @_builtins.property
    @pulumi.getter(name="targetCrn")
    def target_crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The crn for target.
        """
        return pulumi.get(self, "target_crn")

    @target_crn.setter
    def target_crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_crn", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['IsSubnetReservedIpPatchTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['IsSubnetReservedIpPatchTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)


@pulumi.input_type
class _IsSubnetReservedIpPatchState:
    def __init__(__self__, *,
                 address: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_delete: Optional[pulumi.Input[_builtins.bool]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 href: Optional[pulumi.Input[_builtins.str]] = None,
                 is_subnet_reserved_ip_patch_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lifecycle_state: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 owner: Optional[pulumi.Input[_builtins.str]] = None,
                 reserved_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_type: Optional[pulumi.Input[_builtins.str]] = None,
                 subnet: Optional[pulumi.Input[_builtins.str]] = None,
                 target: Optional[pulumi.Input[_builtins.str]] = None,
                 target_crn: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input['IsSubnetReservedIpPatchTimeoutsArgs']] = None):
        """
        Input properties used for looking up and filtering IsSubnetReservedIpPatch resources.
        :param pulumi.Input[_builtins.str] address: The address for this reserved IP.
        :param pulumi.Input[_builtins.bool] auto_delete: If set to true, this reserved IP will be automatically deleted
        :param pulumi.Input[_builtins.str] created_at: The date and time that the reserved IP was created.
        :param pulumi.Input[_builtins.str] href: The URL for this reserved IP.
        :param pulumi.Input[_builtins.str] lifecycle_state: The lifecycle state of the reserved IP
        :param pulumi.Input[_builtins.str] name: The user-defined or system-provided name for this reserved IP.
        :param pulumi.Input[_builtins.str] owner: The owner of a reserved IP, defining whether it is managed by the user or the provider.
        :param pulumi.Input[_builtins.str] reserved_ip: The unique identifier of the reserved IP.
        :param pulumi.Input[_builtins.str] resource_type: The resource type.
        :param pulumi.Input[_builtins.str] subnet: The subnet identifier.
        :param pulumi.Input[_builtins.str] target: The unique identifier for target.
        :param pulumi.Input[_builtins.str] target_crn: The crn for target.
        """
        if address is not None:
            pulumi.set(__self__, "address", address)
        if auto_delete is not None:
            pulumi.set(__self__, "auto_delete", auto_delete)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if href is not None:
            pulumi.set(__self__, "href", href)
        if is_subnet_reserved_ip_patch_id is not None:
            pulumi.set(__self__, "is_subnet_reserved_ip_patch_id", is_subnet_reserved_ip_patch_id)
        if lifecycle_state is not None:
            pulumi.set(__self__, "lifecycle_state", lifecycle_state)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if owner is not None:
            pulumi.set(__self__, "owner", owner)
        if reserved_ip is not None:
            pulumi.set(__self__, "reserved_ip", reserved_ip)
        if resource_type is not None:
            pulumi.set(__self__, "resource_type", resource_type)
        if subnet is not None:
            pulumi.set(__self__, "subnet", subnet)
        if target is not None:
            pulumi.set(__self__, "target", target)
        if target_crn is not None:
            pulumi.set(__self__, "target_crn", target_crn)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)

    @_builtins.property
    @pulumi.getter
    def address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The address for this reserved IP.
        """
        return pulumi.get(self, "address")

    @address.setter
    def address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "address", value)

    @_builtins.property
    @pulumi.getter(name="autoDelete")
    def auto_delete(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        If set to true, this reserved IP will be automatically deleted
        """
        return pulumi.get(self, "auto_delete")

    @auto_delete.setter
    def auto_delete(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "auto_delete", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date and time that the reserved IP was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def href(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL for this reserved IP.
        """
        return pulumi.get(self, "href")

    @href.setter
    def href(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "href", value)

    @_builtins.property
    @pulumi.getter(name="isSubnetReservedIpPatchId")
    def is_subnet_reserved_ip_patch_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "is_subnet_reserved_ip_patch_id")

    @is_subnet_reserved_ip_patch_id.setter
    def is_subnet_reserved_ip_patch_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "is_subnet_reserved_ip_patch_id", value)

    @_builtins.property
    @pulumi.getter(name="lifecycleState")
    def lifecycle_state(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The lifecycle state of the reserved IP
        """
        return pulumi.get(self, "lifecycle_state")

    @lifecycle_state.setter
    def lifecycle_state(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lifecycle_state", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The user-defined or system-provided name for this reserved IP.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def owner(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The owner of a reserved IP, defining whether it is managed by the user or the provider.
        """
        return pulumi.get(self, "owner")

    @owner.setter
    def owner(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "owner", value)

    @_builtins.property
    @pulumi.getter(name="reservedIp")
    def reserved_ip(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique identifier of the reserved IP.
        """
        return pulumi.get(self, "reserved_ip")

    @reserved_ip.setter
    def reserved_ip(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "reserved_ip", value)

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The resource type.
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_type", value)

    @_builtins.property
    @pulumi.getter
    def subnet(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The subnet identifier.
        """
        return pulumi.get(self, "subnet")

    @subnet.setter
    def subnet(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "subnet", value)

    @_builtins.property
    @pulumi.getter
    def target(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The unique identifier for target.
        """
        return pulumi.get(self, "target")

    @target.setter
    def target(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target", value)

    @_builtins.property
    @pulumi.getter(name="targetCrn")
    def target_crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The crn for target.
        """
        return pulumi.get(self, "target_crn")

    @target_crn.setter
    def target_crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_crn", value)

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['IsSubnetReservedIpPatchTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['IsSubnetReservedIpPatchTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)


@pulumi.type_token("ibm:index/isSubnetReservedIpPatch:IsSubnetReservedIpPatch")
class IsSubnetReservedIpPatch(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 address: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_delete: Optional[pulumi.Input[_builtins.bool]] = None,
                 is_subnet_reserved_ip_patch_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 reserved_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 subnet: Optional[pulumi.Input[_builtins.str]] = None,
                 target: Optional[pulumi.Input[_builtins.str]] = None,
                 target_crn: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input[Union['IsSubnetReservedIpPatchTimeoutsArgs', 'IsSubnetReservedIpPatchTimeoutsArgsDict']]] = None,
                 __props__=None):
        """
        Create a IsSubnetReservedIpPatch resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] address: The address for this reserved IP.
        :param pulumi.Input[_builtins.bool] auto_delete: If set to true, this reserved IP will be automatically deleted
        :param pulumi.Input[_builtins.str] name: The user-defined or system-provided name for this reserved IP.
        :param pulumi.Input[_builtins.str] reserved_ip: The unique identifier of the reserved IP.
        :param pulumi.Input[_builtins.str] subnet: The subnet identifier.
        :param pulumi.Input[_builtins.str] target: The unique identifier for target.
        :param pulumi.Input[_builtins.str] target_crn: The crn for target.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IsSubnetReservedIpPatchArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a IsSubnetReservedIpPatch resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param IsSubnetReservedIpPatchArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IsSubnetReservedIpPatchArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 address: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_delete: Optional[pulumi.Input[_builtins.bool]] = None,
                 is_subnet_reserved_ip_patch_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 reserved_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 subnet: Optional[pulumi.Input[_builtins.str]] = None,
                 target: Optional[pulumi.Input[_builtins.str]] = None,
                 target_crn: Optional[pulumi.Input[_builtins.str]] = None,
                 timeouts: Optional[pulumi.Input[Union['IsSubnetReservedIpPatchTimeoutsArgs', 'IsSubnetReservedIpPatchTimeoutsArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IsSubnetReservedIpPatchArgs.__new__(IsSubnetReservedIpPatchArgs)

            __props__.__dict__["address"] = address
            __props__.__dict__["auto_delete"] = auto_delete
            __props__.__dict__["is_subnet_reserved_ip_patch_id"] = is_subnet_reserved_ip_patch_id
            __props__.__dict__["name"] = name
            if reserved_ip is None and not opts.urn:
                raise TypeError("Missing required property 'reserved_ip'")
            __props__.__dict__["reserved_ip"] = reserved_ip
            if subnet is None and not opts.urn:
                raise TypeError("Missing required property 'subnet'")
            __props__.__dict__["subnet"] = subnet
            __props__.__dict__["target"] = target
            __props__.__dict__["target_crn"] = target_crn
            __props__.__dict__["timeouts"] = timeouts
            __props__.__dict__["created_at"] = None
            __props__.__dict__["href"] = None
            __props__.__dict__["lifecycle_state"] = None
            __props__.__dict__["owner"] = None
            __props__.__dict__["resource_type"] = None
        super(IsSubnetReservedIpPatch, __self__).__init__(
            'ibm:index/isSubnetReservedIpPatch:IsSubnetReservedIpPatch',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            address: Optional[pulumi.Input[_builtins.str]] = None,
            auto_delete: Optional[pulumi.Input[_builtins.bool]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            href: Optional[pulumi.Input[_builtins.str]] = None,
            is_subnet_reserved_ip_patch_id: Optional[pulumi.Input[_builtins.str]] = None,
            lifecycle_state: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            owner: Optional[pulumi.Input[_builtins.str]] = None,
            reserved_ip: Optional[pulumi.Input[_builtins.str]] = None,
            resource_type: Optional[pulumi.Input[_builtins.str]] = None,
            subnet: Optional[pulumi.Input[_builtins.str]] = None,
            target: Optional[pulumi.Input[_builtins.str]] = None,
            target_crn: Optional[pulumi.Input[_builtins.str]] = None,
            timeouts: Optional[pulumi.Input[Union['IsSubnetReservedIpPatchTimeoutsArgs', 'IsSubnetReservedIpPatchTimeoutsArgsDict']]] = None) -> 'IsSubnetReservedIpPatch':
        """
        Get an existing IsSubnetReservedIpPatch resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] address: The address for this reserved IP.
        :param pulumi.Input[_builtins.bool] auto_delete: If set to true, this reserved IP will be automatically deleted
        :param pulumi.Input[_builtins.str] created_at: The date and time that the reserved IP was created.
        :param pulumi.Input[_builtins.str] href: The URL for this reserved IP.
        :param pulumi.Input[_builtins.str] lifecycle_state: The lifecycle state of the reserved IP
        :param pulumi.Input[_builtins.str] name: The user-defined or system-provided name for this reserved IP.
        :param pulumi.Input[_builtins.str] owner: The owner of a reserved IP, defining whether it is managed by the user or the provider.
        :param pulumi.Input[_builtins.str] reserved_ip: The unique identifier of the reserved IP.
        :param pulumi.Input[_builtins.str] resource_type: The resource type.
        :param pulumi.Input[_builtins.str] subnet: The subnet identifier.
        :param pulumi.Input[_builtins.str] target: The unique identifier for target.
        :param pulumi.Input[_builtins.str] target_crn: The crn for target.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IsSubnetReservedIpPatchState.__new__(_IsSubnetReservedIpPatchState)

        __props__.__dict__["address"] = address
        __props__.__dict__["auto_delete"] = auto_delete
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["href"] = href
        __props__.__dict__["is_subnet_reserved_ip_patch_id"] = is_subnet_reserved_ip_patch_id
        __props__.__dict__["lifecycle_state"] = lifecycle_state
        __props__.__dict__["name"] = name
        __props__.__dict__["owner"] = owner
        __props__.__dict__["reserved_ip"] = reserved_ip
        __props__.__dict__["resource_type"] = resource_type
        __props__.__dict__["subnet"] = subnet
        __props__.__dict__["target"] = target
        __props__.__dict__["target_crn"] = target_crn
        __props__.__dict__["timeouts"] = timeouts
        return IsSubnetReservedIpPatch(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def address(self) -> pulumi.Output[_builtins.str]:
        """
        The address for this reserved IP.
        """
        return pulumi.get(self, "address")

    @_builtins.property
    @pulumi.getter(name="autoDelete")
    def auto_delete(self) -> pulumi.Output[_builtins.bool]:
        """
        If set to true, this reserved IP will be automatically deleted
        """
        return pulumi.get(self, "auto_delete")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The date and time that the reserved IP was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def href(self) -> pulumi.Output[_builtins.str]:
        """
        The URL for this reserved IP.
        """
        return pulumi.get(self, "href")

    @_builtins.property
    @pulumi.getter(name="isSubnetReservedIpPatchId")
    def is_subnet_reserved_ip_patch_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "is_subnet_reserved_ip_patch_id")

    @_builtins.property
    @pulumi.getter(name="lifecycleState")
    def lifecycle_state(self) -> pulumi.Output[_builtins.str]:
        """
        The lifecycle state of the reserved IP
        """
        return pulumi.get(self, "lifecycle_state")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The user-defined or system-provided name for this reserved IP.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def owner(self) -> pulumi.Output[_builtins.str]:
        """
        The owner of a reserved IP, defining whether it is managed by the user or the provider.
        """
        return pulumi.get(self, "owner")

    @_builtins.property
    @pulumi.getter(name="reservedIp")
    def reserved_ip(self) -> pulumi.Output[_builtins.str]:
        """
        The unique identifier of the reserved IP.
        """
        return pulumi.get(self, "reserved_ip")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> pulumi.Output[_builtins.str]:
        """
        The resource type.
        """
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter
    def subnet(self) -> pulumi.Output[_builtins.str]:
        """
        The subnet identifier.
        """
        return pulumi.get(self, "subnet")

    @_builtins.property
    @pulumi.getter
    def target(self) -> pulumi.Output[_builtins.str]:
        """
        The unique identifier for target.
        """
        return pulumi.get(self, "target")

    @_builtins.property
    @pulumi.getter(name="targetCrn")
    def target_crn(self) -> pulumi.Output[_builtins.str]:
        """
        The crn for target.
        """
        return pulumi.get(self, "target_crn")

    @_builtins.property
    @pulumi.getter
    def timeouts(self) -> pulumi.Output[Optional['outputs.IsSubnetReservedIpPatchTimeouts']]:
        return pulumi.get(self, "timeouts")

