# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetIamTrustedProfileLinksResult',
    'AwaitableGetIamTrustedProfileLinksResult',
    'get_iam_trusted_profile_links',
    'get_iam_trusted_profile_links_output',
]

@pulumi.output_type
class GetIamTrustedProfileLinksResult:
    """
    A collection of values returned by getIamTrustedProfileLinks.
    """
    def __init__(__self__, id=None, links=None, profile_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if links and not isinstance(links, list):
            raise TypeError("Expected argument 'links' to be a list")
        pulumi.set(__self__, "links", links)
        if profile_id and not isinstance(profile_id, str):
            raise TypeError("Expected argument 'profile_id' to be a str")
        pulumi.set(__self__, "profile_id", profile_id)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def links(self) -> Sequence['outputs.GetIamTrustedProfileLinksLinkResult']:
        return pulumi.get(self, "links")

    @_builtins.property
    @pulumi.getter(name="profileId")
    def profile_id(self) -> _builtins.str:
        return pulumi.get(self, "profile_id")


class AwaitableGetIamTrustedProfileLinksResult(GetIamTrustedProfileLinksResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIamTrustedProfileLinksResult(
            id=self.id,
            links=self.links,
            profile_id=self.profile_id)


def get_iam_trusted_profile_links(id: Optional[_builtins.str] = None,
                                  profile_id: Optional[_builtins.str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIamTrustedProfileLinksResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['profileId'] = profile_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ibm:index/getIamTrustedProfileLinks:getIamTrustedProfileLinks', __args__, opts=opts, typ=GetIamTrustedProfileLinksResult, package_ref=_utilities.get_package()).value

    return AwaitableGetIamTrustedProfileLinksResult(
        id=pulumi.get(__ret__, 'id'),
        links=pulumi.get(__ret__, 'links'),
        profile_id=pulumi.get(__ret__, 'profile_id'))
def get_iam_trusted_profile_links_output(id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                         profile_id: Optional[pulumi.Input[_builtins.str]] = None,
                                         opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetIamTrustedProfileLinksResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['profileId'] = profile_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ibm:index/getIamTrustedProfileLinks:getIamTrustedProfileLinks', __args__, opts=opts, typ=GetIamTrustedProfileLinksResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetIamTrustedProfileLinksResult(
        id=pulumi.get(__response__, 'id'),
        links=pulumi.get(__response__, 'links'),
        profile_id=pulumi.get(__response__, 'profile_id')))
