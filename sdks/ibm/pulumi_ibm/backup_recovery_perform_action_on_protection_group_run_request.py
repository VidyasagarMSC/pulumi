# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['BackupRecoveryPerformActionOnProtectionGroupRunRequestArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequest']

@pulumi.input_type
class BackupRecoveryPerformActionOnProtectionGroupRunRequestArgs:
    def __init__(__self__, *,
                 action: pulumi.Input[_builtins.str],
                 group_id: pulumi.Input[_builtins.str],
                 x_ibm_tenant_id: pulumi.Input[_builtins.str],
                 backup_recovery_perform_action_on_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cancel_params: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgs']]]] = None,
                 pause_params: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgs']]]] = None,
                 resume_params: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgs']]]] = None):
        """
        The set of arguments for constructing a BackupRecoveryPerformActionOnProtectionGroupRunRequest resource.
        :param pulumi.Input[_builtins.str] action: Specifies the type of the action which will be performed on protection runs.
        :param pulumi.Input[_builtins.str] group_id: Protection group id
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        :param pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgs']]] cancel_params: Specifies the cancel action params for a protection run.
        :param pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgs']]] pause_params: Specifies the pause action params for a protection run.
        :param pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgs']]] resume_params: Specifies the resume action params for a protection run.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "x_ibm_tenant_id", x_ibm_tenant_id)
        if backup_recovery_perform_action_on_protection_group_run_request_id is not None:
            pulumi.set(__self__, "backup_recovery_perform_action_on_protection_group_run_request_id", backup_recovery_perform_action_on_protection_group_run_request_id)
        if cancel_params is not None:
            pulumi.set(__self__, "cancel_params", cancel_params)
        if pause_params is not None:
            pulumi.set(__self__, "pause_params", pause_params)
        if resume_params is not None:
            pulumi.set(__self__, "resume_params", resume_params)

    @_builtins.property
    @pulumi.getter
    def action(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the type of the action which will be performed on protection runs.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "action", value)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Protection group id
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter(name="xIbmTenantId")
    def x_ibm_tenant_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
        be specified.
        """
        return pulumi.get(self, "x_ibm_tenant_id")

    @x_ibm_tenant_id.setter
    def x_ibm_tenant_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "x_ibm_tenant_id", value)

    @_builtins.property
    @pulumi.getter(name="backupRecoveryPerformActionOnProtectionGroupRunRequestId")
    def backup_recovery_perform_action_on_protection_group_run_request_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "backup_recovery_perform_action_on_protection_group_run_request_id")

    @backup_recovery_perform_action_on_protection_group_run_request_id.setter
    def backup_recovery_perform_action_on_protection_group_run_request_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "backup_recovery_perform_action_on_protection_group_run_request_id", value)

    @_builtins.property
    @pulumi.getter(name="cancelParams")
    def cancel_params(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgs']]]]:
        """
        Specifies the cancel action params for a protection run.
        """
        return pulumi.get(self, "cancel_params")

    @cancel_params.setter
    def cancel_params(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgs']]]]):
        pulumi.set(self, "cancel_params", value)

    @_builtins.property
    @pulumi.getter(name="pauseParams")
    def pause_params(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgs']]]]:
        """
        Specifies the pause action params for a protection run.
        """
        return pulumi.get(self, "pause_params")

    @pause_params.setter
    def pause_params(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgs']]]]):
        pulumi.set(self, "pause_params", value)

    @_builtins.property
    @pulumi.getter(name="resumeParams")
    def resume_params(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgs']]]]:
        """
        Specifies the resume action params for a protection run.
        """
        return pulumi.get(self, "resume_params")

    @resume_params.setter
    def resume_params(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgs']]]]):
        pulumi.set(self, "resume_params", value)


@pulumi.input_type
class _BackupRecoveryPerformActionOnProtectionGroupRunRequestState:
    def __init__(__self__, *,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 backup_recovery_perform_action_on_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cancel_params: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgs']]]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pause_params: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgs']]]] = None,
                 resume_params: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgs']]]] = None,
                 x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering BackupRecoveryPerformActionOnProtectionGroupRunRequest resources.
        :param pulumi.Input[_builtins.str] action: Specifies the type of the action which will be performed on protection runs.
        :param pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgs']]] cancel_params: Specifies the cancel action params for a protection run.
        :param pulumi.Input[_builtins.str] group_id: Protection group id
        :param pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgs']]] pause_params: Specifies the pause action params for a protection run.
        :param pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgs']]] resume_params: Specifies the resume action params for a protection run.
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if backup_recovery_perform_action_on_protection_group_run_request_id is not None:
            pulumi.set(__self__, "backup_recovery_perform_action_on_protection_group_run_request_id", backup_recovery_perform_action_on_protection_group_run_request_id)
        if cancel_params is not None:
            pulumi.set(__self__, "cancel_params", cancel_params)
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)
        if pause_params is not None:
            pulumi.set(__self__, "pause_params", pause_params)
        if resume_params is not None:
            pulumi.set(__self__, "resume_params", resume_params)
        if x_ibm_tenant_id is not None:
            pulumi.set(__self__, "x_ibm_tenant_id", x_ibm_tenant_id)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the type of the action which will be performed on protection runs.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "action", value)

    @_builtins.property
    @pulumi.getter(name="backupRecoveryPerformActionOnProtectionGroupRunRequestId")
    def backup_recovery_perform_action_on_protection_group_run_request_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "backup_recovery_perform_action_on_protection_group_run_request_id")

    @backup_recovery_perform_action_on_protection_group_run_request_id.setter
    def backup_recovery_perform_action_on_protection_group_run_request_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "backup_recovery_perform_action_on_protection_group_run_request_id", value)

    @_builtins.property
    @pulumi.getter(name="cancelParams")
    def cancel_params(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgs']]]]:
        """
        Specifies the cancel action params for a protection run.
        """
        return pulumi.get(self, "cancel_params")

    @cancel_params.setter
    def cancel_params(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgs']]]]):
        pulumi.set(self, "cancel_params", value)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Protection group id
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter(name="pauseParams")
    def pause_params(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgs']]]]:
        """
        Specifies the pause action params for a protection run.
        """
        return pulumi.get(self, "pause_params")

    @pause_params.setter
    def pause_params(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgs']]]]):
        pulumi.set(self, "pause_params", value)

    @_builtins.property
    @pulumi.getter(name="resumeParams")
    def resume_params(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgs']]]]:
        """
        Specifies the resume action params for a protection run.
        """
        return pulumi.get(self, "resume_params")

    @resume_params.setter
    def resume_params(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgs']]]]):
        pulumi.set(self, "resume_params", value)

    @_builtins.property
    @pulumi.getter(name="xIbmTenantId")
    def x_ibm_tenant_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
        be specified.
        """
        return pulumi.get(self, "x_ibm_tenant_id")

    @x_ibm_tenant_id.setter
    def x_ibm_tenant_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "x_ibm_tenant_id", value)


@pulumi.type_token("ibm:index/backupRecoveryPerformActionOnProtectionGroupRunRequest:BackupRecoveryPerformActionOnProtectionGroupRunRequest")
class BackupRecoveryPerformActionOnProtectionGroupRunRequest(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 backup_recovery_perform_action_on_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cancel_params: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgsDict']]]]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pause_params: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgsDict']]]]] = None,
                 resume_params: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgsDict']]]]] = None,
                 x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a BackupRecoveryPerformActionOnProtectionGroupRunRequest resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action: Specifies the type of the action which will be performed on protection runs.
        :param pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgsDict']]]] cancel_params: Specifies the cancel action params for a protection run.
        :param pulumi.Input[_builtins.str] group_id: Protection group id
        :param pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgsDict']]]] pause_params: Specifies the pause action params for a protection run.
        :param pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgsDict']]]] resume_params: Specifies the resume action params for a protection run.
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BackupRecoveryPerformActionOnProtectionGroupRunRequestArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a BackupRecoveryPerformActionOnProtectionGroupRunRequest resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param BackupRecoveryPerformActionOnProtectionGroupRunRequestArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BackupRecoveryPerformActionOnProtectionGroupRunRequestArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 backup_recovery_perform_action_on_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cancel_params: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgsDict']]]]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 pause_params: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgsDict']]]]] = None,
                 resume_params: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgsDict']]]]] = None,
                 x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BackupRecoveryPerformActionOnProtectionGroupRunRequestArgs.__new__(BackupRecoveryPerformActionOnProtectionGroupRunRequestArgs)

            if action is None and not opts.urn:
                raise TypeError("Missing required property 'action'")
            __props__.__dict__["action"] = action
            __props__.__dict__["backup_recovery_perform_action_on_protection_group_run_request_id"] = backup_recovery_perform_action_on_protection_group_run_request_id
            __props__.__dict__["cancel_params"] = cancel_params
            if group_id is None and not opts.urn:
                raise TypeError("Missing required property 'group_id'")
            __props__.__dict__["group_id"] = group_id
            __props__.__dict__["pause_params"] = pause_params
            __props__.__dict__["resume_params"] = resume_params
            if x_ibm_tenant_id is None and not opts.urn:
                raise TypeError("Missing required property 'x_ibm_tenant_id'")
            __props__.__dict__["x_ibm_tenant_id"] = x_ibm_tenant_id
        super(BackupRecoveryPerformActionOnProtectionGroupRunRequest, __self__).__init__(
            'ibm:index/backupRecoveryPerformActionOnProtectionGroupRunRequest:BackupRecoveryPerformActionOnProtectionGroupRunRequest',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action: Optional[pulumi.Input[_builtins.str]] = None,
            backup_recovery_perform_action_on_protection_group_run_request_id: Optional[pulumi.Input[_builtins.str]] = None,
            cancel_params: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgsDict']]]]] = None,
            group_id: Optional[pulumi.Input[_builtins.str]] = None,
            pause_params: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgsDict']]]]] = None,
            resume_params: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgsDict']]]]] = None,
            x_ibm_tenant_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'BackupRecoveryPerformActionOnProtectionGroupRunRequest':
        """
        Get an existing BackupRecoveryPerformActionOnProtectionGroupRunRequest resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action: Specifies the type of the action which will be performed on protection runs.
        :param pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParamArgsDict']]]] cancel_params: Specifies the cancel action params for a protection run.
        :param pulumi.Input[_builtins.str] group_id: Protection group id
        :param pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParamArgsDict']]]] pause_params: Specifies the pause action params for a protection run.
        :param pulumi.Input[Sequence[pulumi.Input[Union['BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgs', 'BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParamArgsDict']]]] resume_params: Specifies the resume action params for a protection run.
        :param pulumi.Input[_builtins.str] x_ibm_tenant_id: Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
               be specified.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BackupRecoveryPerformActionOnProtectionGroupRunRequestState.__new__(_BackupRecoveryPerformActionOnProtectionGroupRunRequestState)

        __props__.__dict__["action"] = action
        __props__.__dict__["backup_recovery_perform_action_on_protection_group_run_request_id"] = backup_recovery_perform_action_on_protection_group_run_request_id
        __props__.__dict__["cancel_params"] = cancel_params
        __props__.__dict__["group_id"] = group_id
        __props__.__dict__["pause_params"] = pause_params
        __props__.__dict__["resume_params"] = resume_params
        __props__.__dict__["x_ibm_tenant_id"] = x_ibm_tenant_id
        return BackupRecoveryPerformActionOnProtectionGroupRunRequest(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def action(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the type of the action which will be performed on protection runs.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="backupRecoveryPerformActionOnProtectionGroupRunRequestId")
    def backup_recovery_perform_action_on_protection_group_run_request_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "backup_recovery_perform_action_on_protection_group_run_request_id")

    @_builtins.property
    @pulumi.getter(name="cancelParams")
    def cancel_params(self) -> pulumi.Output[Optional[Sequence['outputs.BackupRecoveryPerformActionOnProtectionGroupRunRequestCancelParam']]]:
        """
        Specifies the cancel action params for a protection run.
        """
        return pulumi.get(self, "cancel_params")

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Protection group id
        """
        return pulumi.get(self, "group_id")

    @_builtins.property
    @pulumi.getter(name="pauseParams")
    def pause_params(self) -> pulumi.Output[Optional[Sequence['outputs.BackupRecoveryPerformActionOnProtectionGroupRunRequestPauseParam']]]:
        """
        Specifies the pause action params for a protection run.
        """
        return pulumi.get(self, "pause_params")

    @_builtins.property
    @pulumi.getter(name="resumeParams")
    def resume_params(self) -> pulumi.Output[Optional[Sequence['outputs.BackupRecoveryPerformActionOnProtectionGroupRunRequestResumeParam']]]:
        """
        Specifies the resume action params for a protection run.
        """
        return pulumi.get(self, "resume_params")

    @_builtins.property
    @pulumi.getter(name="xIbmTenantId")
    def x_ibm_tenant_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the key to be used to encrypt the source credential. If includeSourceCredentials is set to true this key must
        be specified.
        """
        return pulumi.get(self, "x_ibm_tenant_id")

