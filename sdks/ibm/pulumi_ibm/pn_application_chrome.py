# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['PnApplicationChromeArgs', 'PnApplicationChrome']

@pulumi.input_type
class PnApplicationChromeArgs:
    def __init__(__self__, *,
                 guid: pulumi.Input[_builtins.str],
                 server_key: pulumi.Input[_builtins.str],
                 web_site_url: pulumi.Input[_builtins.str],
                 pn_application_chrome_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a PnApplicationChrome resource.
        :param pulumi.Input[_builtins.str] guid: Unique guid of the push notification instance.
        :param pulumi.Input[_builtins.str] server_key: A server key that gives the push service an authorized access to Google services that is used for Chrome Web Push.
        :param pulumi.Input[_builtins.str] web_site_url: The URL of the WebSite / WebApp that should be permitted to subscribe to WebPush.
        """
        pulumi.set(__self__, "guid", guid)
        pulumi.set(__self__, "server_key", server_key)
        pulumi.set(__self__, "web_site_url", web_site_url)
        if pn_application_chrome_id is not None:
            pulumi.set(__self__, "pn_application_chrome_id", pn_application_chrome_id)

    @_builtins.property
    @pulumi.getter
    def guid(self) -> pulumi.Input[_builtins.str]:
        """
        Unique guid of the push notification instance.
        """
        return pulumi.get(self, "guid")

    @guid.setter
    def guid(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "guid", value)

    @_builtins.property
    @pulumi.getter(name="serverKey")
    def server_key(self) -> pulumi.Input[_builtins.str]:
        """
        A server key that gives the push service an authorized access to Google services that is used for Chrome Web Push.
        """
        return pulumi.get(self, "server_key")

    @server_key.setter
    def server_key(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "server_key", value)

    @_builtins.property
    @pulumi.getter(name="webSiteUrl")
    def web_site_url(self) -> pulumi.Input[_builtins.str]:
        """
        The URL of the WebSite / WebApp that should be permitted to subscribe to WebPush.
        """
        return pulumi.get(self, "web_site_url")

    @web_site_url.setter
    def web_site_url(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "web_site_url", value)

    @_builtins.property
    @pulumi.getter(name="pnApplicationChromeId")
    def pn_application_chrome_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "pn_application_chrome_id")

    @pn_application_chrome_id.setter
    def pn_application_chrome_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pn_application_chrome_id", value)


@pulumi.input_type
class _PnApplicationChromeState:
    def __init__(__self__, *,
                 guid: Optional[pulumi.Input[_builtins.str]] = None,
                 pn_application_chrome_id: Optional[pulumi.Input[_builtins.str]] = None,
                 server_key: Optional[pulumi.Input[_builtins.str]] = None,
                 web_site_url: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering PnApplicationChrome resources.
        :param pulumi.Input[_builtins.str] guid: Unique guid of the push notification instance.
        :param pulumi.Input[_builtins.str] server_key: A server key that gives the push service an authorized access to Google services that is used for Chrome Web Push.
        :param pulumi.Input[_builtins.str] web_site_url: The URL of the WebSite / WebApp that should be permitted to subscribe to WebPush.
        """
        if guid is not None:
            pulumi.set(__self__, "guid", guid)
        if pn_application_chrome_id is not None:
            pulumi.set(__self__, "pn_application_chrome_id", pn_application_chrome_id)
        if server_key is not None:
            pulumi.set(__self__, "server_key", server_key)
        if web_site_url is not None:
            pulumi.set(__self__, "web_site_url", web_site_url)

    @_builtins.property
    @pulumi.getter
    def guid(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Unique guid of the push notification instance.
        """
        return pulumi.get(self, "guid")

    @guid.setter
    def guid(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "guid", value)

    @_builtins.property
    @pulumi.getter(name="pnApplicationChromeId")
    def pn_application_chrome_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "pn_application_chrome_id")

    @pn_application_chrome_id.setter
    def pn_application_chrome_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "pn_application_chrome_id", value)

    @_builtins.property
    @pulumi.getter(name="serverKey")
    def server_key(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        A server key that gives the push service an authorized access to Google services that is used for Chrome Web Push.
        """
        return pulumi.get(self, "server_key")

    @server_key.setter
    def server_key(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "server_key", value)

    @_builtins.property
    @pulumi.getter(name="webSiteUrl")
    def web_site_url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The URL of the WebSite / WebApp that should be permitted to subscribe to WebPush.
        """
        return pulumi.get(self, "web_site_url")

    @web_site_url.setter
    def web_site_url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "web_site_url", value)


@pulumi.type_token("ibm:index/pnApplicationChrome:PnApplicationChrome")
class PnApplicationChrome(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 guid: Optional[pulumi.Input[_builtins.str]] = None,
                 pn_application_chrome_id: Optional[pulumi.Input[_builtins.str]] = None,
                 server_key: Optional[pulumi.Input[_builtins.str]] = None,
                 web_site_url: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a PnApplicationChrome resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] guid: Unique guid of the push notification instance.
        :param pulumi.Input[_builtins.str] server_key: A server key that gives the push service an authorized access to Google services that is used for Chrome Web Push.
        :param pulumi.Input[_builtins.str] web_site_url: The URL of the WebSite / WebApp that should be permitted to subscribe to WebPush.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PnApplicationChromeArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a PnApplicationChrome resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param PnApplicationChromeArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PnApplicationChromeArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 guid: Optional[pulumi.Input[_builtins.str]] = None,
                 pn_application_chrome_id: Optional[pulumi.Input[_builtins.str]] = None,
                 server_key: Optional[pulumi.Input[_builtins.str]] = None,
                 web_site_url: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PnApplicationChromeArgs.__new__(PnApplicationChromeArgs)

            if guid is None and not opts.urn:
                raise TypeError("Missing required property 'guid'")
            __props__.__dict__["guid"] = guid
            __props__.__dict__["pn_application_chrome_id"] = pn_application_chrome_id
            if server_key is None and not opts.urn:
                raise TypeError("Missing required property 'server_key'")
            __props__.__dict__["server_key"] = server_key
            if web_site_url is None and not opts.urn:
                raise TypeError("Missing required property 'web_site_url'")
            __props__.__dict__["web_site_url"] = web_site_url
        super(PnApplicationChrome, __self__).__init__(
            'ibm:index/pnApplicationChrome:PnApplicationChrome',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            guid: Optional[pulumi.Input[_builtins.str]] = None,
            pn_application_chrome_id: Optional[pulumi.Input[_builtins.str]] = None,
            server_key: Optional[pulumi.Input[_builtins.str]] = None,
            web_site_url: Optional[pulumi.Input[_builtins.str]] = None) -> 'PnApplicationChrome':
        """
        Get an existing PnApplicationChrome resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] guid: Unique guid of the push notification instance.
        :param pulumi.Input[_builtins.str] server_key: A server key that gives the push service an authorized access to Google services that is used for Chrome Web Push.
        :param pulumi.Input[_builtins.str] web_site_url: The URL of the WebSite / WebApp that should be permitted to subscribe to WebPush.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PnApplicationChromeState.__new__(_PnApplicationChromeState)

        __props__.__dict__["guid"] = guid
        __props__.__dict__["pn_application_chrome_id"] = pn_application_chrome_id
        __props__.__dict__["server_key"] = server_key
        __props__.__dict__["web_site_url"] = web_site_url
        return PnApplicationChrome(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def guid(self) -> pulumi.Output[_builtins.str]:
        """
        Unique guid of the push notification instance.
        """
        return pulumi.get(self, "guid")

    @_builtins.property
    @pulumi.getter(name="pnApplicationChromeId")
    def pn_application_chrome_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "pn_application_chrome_id")

    @_builtins.property
    @pulumi.getter(name="serverKey")
    def server_key(self) -> pulumi.Output[_builtins.str]:
        """
        A server key that gives the push service an authorized access to Google services that is used for Chrome Web Push.
        """
        return pulumi.get(self, "server_key")

    @_builtins.property
    @pulumi.getter(name="webSiteUrl")
    def web_site_url(self) -> pulumi.Output[_builtins.str]:
        """
        The URL of the WebSite / WebApp that should be permitted to subscribe to WebPush.
        """
        return pulumi.get(self, "web_site_url")

