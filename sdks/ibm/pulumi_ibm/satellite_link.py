# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SatelliteLinkArgs', 'SatelliteLink']

@pulumi.input_type
class SatelliteLinkArgs:
    def __init__(__self__, *,
                 crn: pulumi.Input[_builtins.str],
                 location: pulumi.Input[_builtins.str],
                 satellite_link_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ws_endpoint: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a SatelliteLink resource.
        :param pulumi.Input[_builtins.str] crn: CRN of the Location.
        :param pulumi.Input[_builtins.str] location: Location ID.
        :param pulumi.Input[_builtins.str] ws_endpoint: The ws endpoint of the location.
        """
        pulumi.set(__self__, "crn", crn)
        pulumi.set(__self__, "location", location)
        if satellite_link_id is not None:
            pulumi.set(__self__, "satellite_link_id", satellite_link_id)
        if ws_endpoint is not None:
            pulumi.set(__self__, "ws_endpoint", ws_endpoint)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Input[_builtins.str]:
        """
        CRN of the Location.
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter
    def location(self) -> pulumi.Input[_builtins.str]:
        """
        Location ID.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "location", value)

    @_builtins.property
    @pulumi.getter(name="satelliteLinkId")
    def satellite_link_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "satellite_link_id")

    @satellite_link_id.setter
    def satellite_link_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "satellite_link_id", value)

    @_builtins.property
    @pulumi.getter(name="wsEndpoint")
    def ws_endpoint(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ws endpoint of the location.
        """
        return pulumi.get(self, "ws_endpoint")

    @ws_endpoint.setter
    def ws_endpoint(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ws_endpoint", value)


@pulumi.input_type
class _SatelliteLinkState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 last_change: Optional[pulumi.Input[_builtins.str]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 performances: Optional[pulumi.Input[Sequence[pulumi.Input['SatelliteLinkPerformanceArgs']]]] = None,
                 satellite_link_host: Optional[pulumi.Input[_builtins.str]] = None,
                 satellite_link_id: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 ws_endpoint: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering SatelliteLink resources.
        :param pulumi.Input[_builtins.str] created_at: Timestamp of creation of location.
        :param pulumi.Input[_builtins.str] crn: CRN of the Location.
        :param pulumi.Input[_builtins.str] description: Description of the location.
        :param pulumi.Input[_builtins.str] last_change: Timestamp of latest modification of location.
        :param pulumi.Input[_builtins.str] location: Location ID.
        :param pulumi.Input[Sequence[pulumi.Input['SatelliteLinkPerformanceArgs']]] performances: The last performance data of the Location.
        :param pulumi.Input[_builtins.str] satellite_link_host: Satellite Link hostname of the location.
        :param pulumi.Input[_builtins.str] status: Enabled/Disabled.
        :param pulumi.Input[_builtins.str] ws_endpoint: The ws endpoint of the location.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if crn is not None:
            pulumi.set(__self__, "crn", crn)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if last_change is not None:
            pulumi.set(__self__, "last_change", last_change)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if performances is not None:
            pulumi.set(__self__, "performances", performances)
        if satellite_link_host is not None:
            pulumi.set(__self__, "satellite_link_host", satellite_link_host)
        if satellite_link_id is not None:
            pulumi.set(__self__, "satellite_link_id", satellite_link_id)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if ws_endpoint is not None:
            pulumi.set(__self__, "ws_endpoint", ws_endpoint)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Timestamp of creation of location.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def crn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        CRN of the Location.
        """
        return pulumi.get(self, "crn")

    @crn.setter
    def crn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "crn", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Description of the location.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="lastChange")
    def last_change(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Timestamp of latest modification of location.
        """
        return pulumi.get(self, "last_change")

    @last_change.setter
    def last_change(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "last_change", value)

    @_builtins.property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Location ID.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "location", value)

    @_builtins.property
    @pulumi.getter
    def performances(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SatelliteLinkPerformanceArgs']]]]:
        """
        The last performance data of the Location.
        """
        return pulumi.get(self, "performances")

    @performances.setter
    def performances(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SatelliteLinkPerformanceArgs']]]]):
        pulumi.set(self, "performances", value)

    @_builtins.property
    @pulumi.getter(name="satelliteLinkHost")
    def satellite_link_host(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Satellite Link hostname of the location.
        """
        return pulumi.get(self, "satellite_link_host")

    @satellite_link_host.setter
    def satellite_link_host(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "satellite_link_host", value)

    @_builtins.property
    @pulumi.getter(name="satelliteLinkId")
    def satellite_link_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "satellite_link_id")

    @satellite_link_id.setter
    def satellite_link_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "satellite_link_id", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Enabled/Disabled.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="wsEndpoint")
    def ws_endpoint(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ws endpoint of the location.
        """
        return pulumi.get(self, "ws_endpoint")

    @ws_endpoint.setter
    def ws_endpoint(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ws_endpoint", value)


@pulumi.type_token("ibm:index/satelliteLink:SatelliteLink")
class SatelliteLink(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 satellite_link_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ws_endpoint: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a SatelliteLink resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] crn: CRN of the Location.
        :param pulumi.Input[_builtins.str] location: Location ID.
        :param pulumi.Input[_builtins.str] ws_endpoint: The ws endpoint of the location.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SatelliteLinkArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a SatelliteLink resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param SatelliteLinkArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SatelliteLinkArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 crn: Optional[pulumi.Input[_builtins.str]] = None,
                 location: Optional[pulumi.Input[_builtins.str]] = None,
                 satellite_link_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ws_endpoint: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SatelliteLinkArgs.__new__(SatelliteLinkArgs)

            if crn is None and not opts.urn:
                raise TypeError("Missing required property 'crn'")
            __props__.__dict__["crn"] = crn
            if location is None and not opts.urn:
                raise TypeError("Missing required property 'location'")
            __props__.__dict__["location"] = location
            __props__.__dict__["satellite_link_id"] = satellite_link_id
            __props__.__dict__["ws_endpoint"] = ws_endpoint
            __props__.__dict__["created_at"] = None
            __props__.__dict__["description"] = None
            __props__.__dict__["last_change"] = None
            __props__.__dict__["performances"] = None
            __props__.__dict__["satellite_link_host"] = None
            __props__.__dict__["status"] = None
        super(SatelliteLink, __self__).__init__(
            'ibm:index/satelliteLink:SatelliteLink',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            crn: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            last_change: Optional[pulumi.Input[_builtins.str]] = None,
            location: Optional[pulumi.Input[_builtins.str]] = None,
            performances: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SatelliteLinkPerformanceArgs', 'SatelliteLinkPerformanceArgsDict']]]]] = None,
            satellite_link_host: Optional[pulumi.Input[_builtins.str]] = None,
            satellite_link_id: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            ws_endpoint: Optional[pulumi.Input[_builtins.str]] = None) -> 'SatelliteLink':
        """
        Get an existing SatelliteLink resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: Timestamp of creation of location.
        :param pulumi.Input[_builtins.str] crn: CRN of the Location.
        :param pulumi.Input[_builtins.str] description: Description of the location.
        :param pulumi.Input[_builtins.str] last_change: Timestamp of latest modification of location.
        :param pulumi.Input[_builtins.str] location: Location ID.
        :param pulumi.Input[Sequence[pulumi.Input[Union['SatelliteLinkPerformanceArgs', 'SatelliteLinkPerformanceArgsDict']]]] performances: The last performance data of the Location.
        :param pulumi.Input[_builtins.str] satellite_link_host: Satellite Link hostname of the location.
        :param pulumi.Input[_builtins.str] status: Enabled/Disabled.
        :param pulumi.Input[_builtins.str] ws_endpoint: The ws endpoint of the location.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SatelliteLinkState.__new__(_SatelliteLinkState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["crn"] = crn
        __props__.__dict__["description"] = description
        __props__.__dict__["last_change"] = last_change
        __props__.__dict__["location"] = location
        __props__.__dict__["performances"] = performances
        __props__.__dict__["satellite_link_host"] = satellite_link_host
        __props__.__dict__["satellite_link_id"] = satellite_link_id
        __props__.__dict__["status"] = status
        __props__.__dict__["ws_endpoint"] = ws_endpoint
        return SatelliteLink(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Timestamp of creation of location.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def crn(self) -> pulumi.Output[_builtins.str]:
        """
        CRN of the Location.
        """
        return pulumi.get(self, "crn")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        Description of the location.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="lastChange")
    def last_change(self) -> pulumi.Output[_builtins.str]:
        """
        Timestamp of latest modification of location.
        """
        return pulumi.get(self, "last_change")

    @_builtins.property
    @pulumi.getter
    def location(self) -> pulumi.Output[_builtins.str]:
        """
        Location ID.
        """
        return pulumi.get(self, "location")

    @_builtins.property
    @pulumi.getter
    def performances(self) -> pulumi.Output[Sequence['outputs.SatelliteLinkPerformance']]:
        """
        The last performance data of the Location.
        """
        return pulumi.get(self, "performances")

    @_builtins.property
    @pulumi.getter(name="satelliteLinkHost")
    def satellite_link_host(self) -> pulumi.Output[_builtins.str]:
        """
        Satellite Link hostname of the location.
        """
        return pulumi.get(self, "satellite_link_host")

    @_builtins.property
    @pulumi.getter(name="satelliteLinkId")
    def satellite_link_id(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "satellite_link_id")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        Enabled/Disabled.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="wsEndpoint")
    def ws_endpoint(self) -> pulumi.Output[_builtins.str]:
        """
        The ws endpoint of the location.
        """
        return pulumi.get(self, "ws_endpoint")

